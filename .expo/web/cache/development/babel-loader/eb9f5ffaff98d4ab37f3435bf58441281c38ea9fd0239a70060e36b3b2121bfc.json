{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport CustomAlert from \"../../components/CustomAlert\";\nimport useCustomAlert from \"../../hooks/useCustomAlert\";\nimport apiService from \"../../services/apiService\";\nimport SideMenu from \"../../components/SideMenu\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar ClassScreen = function ClassScreen(_ref) {\n  var _window$navigationPar;\n  var isMenuVisible = _ref.isMenuVisible,\n    setIsMenuVisible = _ref.setIsMenuVisible,\n    onNavigate = _ref.onNavigate,\n    currentUser = _ref.currentUser,\n    onLogout = _ref.onLogout;\n  var classData = ((_window$navigationPar = window.navigationParams) == null ? void 0 : _window$navigationPar.classData) || {};\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    attendanceTaken = _useState2[0],\n    setAttendanceTaken = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    classCompleted = _useState4[0],\n    setClassCompleted = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState('aquecimento'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    expandedCard = _useState8[0],\n    setExpandedCard = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showCompletionModal = _useState0[0],\n    setShowCompletionModal = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    showScoringModal = _useState10[0],\n    setShowScoringModal = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    students = _useState12[0],\n    setStudents = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    sports = _useState14[0],\n    setSports = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentSport = _useState16[0],\n    setCurrentSport = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedStudent = _useState18[0],\n    setSelectedStudent = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedSport = _useState20[0],\n    setSelectedSport = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    score = _useState22[0],\n    setScore = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    notes = _useState24[0],\n    setNotes = _useState24[1];\n  var _useState25 = useState({}),\n    _useState26 = _slicedToArray(_useState25, 2),\n    scoresData = _useState26[0],\n    setScoresData = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedStudents = _useState28[0],\n    setSelectedStudents = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    batchScore = _useState30[0],\n    setBatchScore = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    batchNotes = _useState32[0],\n    setBatchNotes = _useState32[1];\n  var _useCustomAlert = useCustomAlert(),\n    alert = _useCustomAlert.alert,\n    showSuccess = _useCustomAlert.showSuccess,\n    showError = _useCustomAlert.showError,\n    hideAlert = _useCustomAlert.hideAlert;\n  useEffect(function () {\n    console.log('🔵 ClassScreen - classData recebido:', classData);\n    console.log('🔵 ClassScreen - subject:', classData.subject);\n    loadStudents();\n    loadSports();\n    checkAttendanceStatus();\n  }, []);\n  useEffect(function () {\n    if (sports.length > 0 && classData.subject) {\n      identifyCurrentSport();\n    }\n  }, [sports, classData.subject]);\n  var identifyCurrentSport = function identifyCurrentSport() {\n    if (!classData.subject || sports.length === 0) return;\n    var subjectParts = classData.subject.split(' - ');\n    var sportName = subjectParts[0];\n    var sport = sports.find(function (s) {\n      return s.name.toLowerCase() === sportName.toLowerCase();\n    });\n    if (sport) {\n      console.log('🔵 ClassScreen - Esporte identificado:', sport);\n      setCurrentSport(sport);\n    } else {\n      console.log('🔴 ClassScreen - Esporte não encontrado:', sportName);\n    }\n  };\n  var getDynamicClassTitle = function getDynamicClassTitle() {\n    var _classData$subject;\n    if (!currentSport) return 'Treino de Vôlei';\n    var subjectParts = ((_classData$subject = classData.subject) == null ? void 0 : _classData$subject.split(' - ')) || [];\n    var classType = subjectParts[1] || 'TREINO';\n    return `${currentSport.name} - ${classType}`;\n  };\n  var getDynamicXP = function getDynamicXP() {\n    var _classData$subject2;\n    if (!currentSport) return 60;\n    var subjectParts = ((_classData$subject2 = classData.subject) == null ? void 0 : _classData$subject2.split(' - ')) || [];\n    var classType = subjectParts[1] || 'TREINO';\n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return 20;\n      case 'TREINO':\n        return 60;\n      case 'PRATICA':\n        return 80;\n      case 'COMPETICAO':\n        return 100;\n      default:\n        return 60;\n    }\n  };\n  var getDynamicDuration = function getDynamicDuration() {\n    var _classData$subject3;\n    if (!currentSport) return '60min';\n    var subjectParts = ((_classData$subject3 = classData.subject) == null ? void 0 : _classData$subject3.split(' - ')) || [];\n    var classType = subjectParts[1] || 'TREINO';\n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return '30min';\n      case 'TREINO':\n        return '60min';\n      case 'PRATICA':\n        return '90min';\n      case 'COMPETICAO':\n        return '120min';\n      default:\n        return '60min';\n    }\n  };\n  var checkAttendanceStatus = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!(classData != null && classData.id)) return;\n      try {\n        console.log('🔵 ClassScreen - Verificando status da chamada para aula:', classData.id);\n        var response = yield apiService.getClassAttendance(classData.id, classData.date);\n        if (response.success && response.data.attendances && response.data.attendances.length > 0) {\n          var allAttendancesFromThisClass = response.data.attendances.every(function (attendance) {\n            return attendance.teacherClassId === classData.id;\n          });\n          if (allAttendancesFromThisClass) {\n            console.log('🔵 ClassScreen - Chamada já foi realizada para esta aula específica');\n            setAttendanceTaken(true);\n          } else {\n            console.log('🔵 ClassScreen - Presenças encontradas são de outras aulas da mesma turma');\n            setAttendanceTaken(false);\n          }\n        } else {\n          console.log('🔵 ClassScreen - Chamada ainda não foi realizada');\n          setAttendanceTaken(false);\n        }\n      } catch (error) {\n        console.error('🔴 ClassScreen - Erro ao verificar status da chamada:', error);\n        setAttendanceTaken(false);\n      }\n    });\n    return function checkAttendanceStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadStudents = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        console.log('🔵 Carregando alunos para a aula:', classData);\n        console.log('🔵 classData.classId:', classData.classId);\n        console.log('🔵 classData.id:', classData.id);\n        if (classData.classId) {\n          console.log('🔵 Buscando alunos da turma:', classData.classId);\n          var response = yield apiService.getClassStudents(classData.classId);\n          console.log('🔵 Resposta da API getClassStudents:', response);\n          if (response.success) {\n            var _students = response.data.map(function (item) {\n              return item.student;\n            });\n            console.log(`🔵 ${_students.length} alunos encontrados na turma:`, _students.map(function (s) {\n              return s.name;\n            }));\n            setStudents(_students);\n          } else {\n            console.error('❌ Erro ao buscar alunos da turma:', response.message);\n          }\n        } else {\n          console.log('🔵 Aula sem turma associada, usando alunos passados via navegação');\n          if (classData.students && Array.isArray(classData.students)) {\n            console.log('🔵 Usando alunos passados via navegação:', classData.students.length);\n            setStudents(classData.students);\n          } else {\n            console.log('🔵 Nenhum aluno encontrado');\n            setStudents([]);\n          }\n        }\n      } catch (error) {\n        console.error('❌ Erro ao carregar alunos:', error);\n      }\n    });\n    return function loadStudents() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var loadSports = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield apiService.getSports();\n        if (response.success) {\n          setSports(response.data.sports || []);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar esportes:', error);\n      }\n    });\n    return function loadSports() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var workoutSections = [{\n    id: 'aquecimento',\n    title: 'Aquecimento',\n    duration: '7min',\n    exercises: [{\n      name: 'Corrida Leve',\n      repetitions: '5 minutos'\n    }, {\n      name: 'Alongamento Dinâmico',\n      repetitions: '2 minutos'\n    }, {\n      name: 'Aquecimento Articular',\n      repetitions: '1 série'\n    }]\n  }, {\n    id: 'treino',\n    title: 'Treino',\n    duration: '30min',\n    exercises: [{\n      name: 'Saque',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Recepção',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Levantamento',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Ataque',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Bloqueio',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Defesa',\n      repetitions: '20 repetições'\n    }]\n  }, {\n    id: 'desaquecimento',\n    title: 'Desaquecimento',\n    duration: '8min',\n    exercises: [{\n      name: 'Alongamento Final',\n      repetitions: '5 minutos'\n    }, {\n      name: 'Relaxamento',\n      repetitions: '3 minutos'\n    }]\n  }];\n  var handleTakeAttendance = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var attendancePromises = students.map(function () {\n          var _ref6 = _asyncToGenerator(function* (student) {\n            var status = attendanceData[student.id] || 'present';\n            try {\n              var response = yield apiService.saveAttendance(classData.classId, {\n                studentId: student.id,\n                isPresent: status === 'present',\n                date: classData.date\n              });\n              if (!response.success) {\n                console.error(`Erro ao salvar presença do aluno ${student.name}:`, response.message);\n              }\n            } catch (error) {\n              console.error(`Erro ao salvar presença do aluno ${student.name}:`, error);\n            }\n          });\n          return function (_x) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n        yield Promise.all(attendancePromises);\n        setAttendanceTaken(true);\n        showSuccess('Sucesso! 🎉', 'Chamada realizada com sucesso!');\n      } catch (error) {\n        showError('❌ Erro', 'Erro ao realizar a chamada');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleTakeAttendance() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleCompleteClass = function handleCompleteClass() {\n    setShowCompletionModal(true);\n  };\n  var confirmCompleteClass = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        console.log('🔵 ClassData:', classData);\n        console.log('🔵 Class ID:', classData.id);\n        if (!classData.id) {\n          throw new Error('ID da aula não encontrado');\n        }\n        var response = yield apiService.completeClass(classData.id, true);\n        if (response.success) {\n          setClassCompleted(true);\n          setShowCompletionModal(false);\n          if (window.navigationParams) {\n            window.navigationParams.classCompleted = true;\n          }\n          showSuccess('Sucesso! 🎉', 'Aula concluída com sucesso!');\n          onNavigate('teacherClasses');\n        } else {\n          throw new Error(response.message || 'Erro ao concluir a aula');\n        }\n      } catch (error) {\n        console.error('Erro ao concluir aula:', error);\n        showError('❌ Erro', error.message || 'Erro ao concluir a aula');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function confirmCompleteClass() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleOpenScoring = function handleOpenScoring() {\n    setShowScoringModal(true);\n  };\n  var toggleStudentSelection = function toggleStudentSelection(studentId) {\n    setSelectedStudents(function (prev) {\n      return prev.includes(studentId) ? prev.filter(function (id) {\n        return id !== studentId;\n      }) : [].concat(_toConsumableArray(prev), [studentId]);\n    });\n  };\n  var handleBatchSaveScores = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        var _classData$subject4;\n        if (selectedStudents.length === 0) {\n          showError('❌ Erro', 'Selecione pelo menos um aluno');\n          return;\n        }\n        if (!batchScore) {\n          showError('❌ Erro', 'Digite uma pontuação');\n          return;\n        }\n        var scoreValue = parseInt(batchScore);\n        if (scoreValue < 0 || scoreValue > 100) {\n          showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n          return;\n        }\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var subjectParts = ((_classData$subject4 = classData.subject) == null ? void 0 : _classData$subject4.split(' - ')) || [];\n        var sportName = subjectParts[0];\n        var classSport = sports.find(function (sport) {\n          return sport.name.toLowerCase() === (sportName == null ? void 0 : sportName.toLowerCase());\n        });\n        if (!classSport) {\n          showError('❌ Erro', `Esporte \"${sportName}\" da aula não encontrado`);\n          return;\n        }\n        var scorePromises = selectedStudents.map(function () {\n          var _ref9 = _asyncToGenerator(function* (studentId) {\n            try {\n              console.log('🔵 ClassScreen - Salvando pontuação:', {\n                classId: classData.classId,\n                studentId: studentId,\n                sportId: classSport.id,\n                score: scoreValue,\n                notes: batchNotes.trim() || null,\n                lessonDate: classData.date\n              });\n              var response = yield apiService.saveClassScore(classData.classId, studentId, classSport.id, scoreValue, batchNotes.trim() || null, classData.date);\n              console.log('🔵 ClassScreen - Resposta da API:', response);\n              if (!response.success) {\n                console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, response.message);\n                throw new Error(response.message || 'Erro ao salvar pontuação');\n              }\n            } catch (error) {\n              console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, error);\n              throw error;\n            }\n          });\n          return function (_x2) {\n            return _ref9.apply(this, arguments);\n          };\n        }());\n        yield Promise.all(scorePromises);\n        if (!attendanceTaken) {\n          var attendances = students.map(function (student) {\n            return {\n              studentId: student.id,\n              isPresent: true\n            };\n          });\n          console.log('🔵 ClassScreen - Salvando presenças:', {\n            classId: classData.id,\n            attendances: attendances,\n            lessonDate: classData.date\n          });\n          try {\n            var attendanceResponse = yield apiService.saveBatchAttendance(classData.id, attendances, classData.date);\n            console.log('🔵 ClassScreen - Resposta da API de presença:', attendanceResponse);\n            if (!attendanceResponse.success) {\n              console.error('🔴 Erro ao salvar presenças:', attendanceResponse.message);\n            } else {\n              setAttendanceTaken(true);\n            }\n          } catch (error) {\n            console.error('🔴 Erro ao salvar presenças:', error);\n          }\n        } else {\n          console.log('🔵 ClassScreen - Chamada já realizada, não alterando presenças');\n        }\n        if (attendanceTaken) {\n          showSuccess('Sucesso! 🎉', `Pontuações salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n        } else {\n          showSuccess('Sucesso! 🎉', `Pontuações e presenças salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n        }\n        setSelectedStudents([]);\n        setBatchScore('');\n        setBatchNotes('');\n        setShowScoringModal(false);\n        setAttendanceTaken(true);\n        loadStudents();\n      } catch (error) {\n        console.error('Erro ao salvar avaliações:', error);\n        showError('❌ Erro', 'Erro ao salvar avaliações');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleBatchSaveScores() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleSaveScore = function () {\n    var _ref0 = _asyncToGenerator(function* () {\n      try {\n        if (!selectedStudent || !selectedSport || !score) {\n          showError('❌ Erro', 'Preencha todos os campos obrigatórios');\n          return;\n        }\n        var scoreValue = parseInt(score);\n        if (scoreValue < 0 || scoreValue > 100) {\n          showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n          return;\n        }\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var response = yield apiService.saveClassScore(classData.classId, selectedStudent.id, selectedSport.id, scoreValue, notes.trim() || null);\n        if (response.success) {\n          showSuccess('Sucesso! 🎉', 'Pontuação salva com sucesso!');\n          setShowScoringModal(false);\n          setSelectedStudent(null);\n          setSelectedSport(null);\n          setScore('');\n          setNotes('');\n          loadStudents();\n        } else {\n          throw new Error(response.message || 'Erro ao salvar pontuação');\n        }\n      } catch (error) {\n        console.error('Erro ao salvar pontuação:', error);\n        showError('❌ Erro', error.message || 'Erro ao salvar pontuação');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSaveScore() {\n      return _ref0.apply(this, arguments);\n    };\n  }();\n  var renderWorkoutCard = function renderWorkoutCard(section) {\n    return _jsxs(TouchableOpacity, {\n      style: [styles.workoutCard, expandedCard === section.id && styles.expandedCard],\n      onPress: function onPress() {\n        return setExpandedCard(expandedCard === section.id ? null : section.id);\n      },\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsxs(View, {\n          style: styles.cardTitleContainer,\n          children: [_jsx(Text, {\n            style: styles.cardTitle,\n            children: section.title\n          }), _jsx(Text, {\n            style: styles.cardDuration,\n            children: section.duration\n          })]\n        }), _jsx(View, {\n          style: styles.expandIcon,\n          children: _jsx(Text, {\n            style: styles.expandIconText,\n            children: expandedCard === section.id ? '⌄' : '>'\n          })\n        })]\n      }), expandedCard === section.id && _jsx(View, {\n        style: styles.exercisesList,\n        children: section.exercises.map(function (exercise, index) {\n          return _jsx(View, {\n            style: styles.exerciseItem,\n            children: _jsxs(View, {\n              style: styles.exerciseInfo,\n              children: [_jsx(Text, {\n                style: styles.exerciseName,\n                children: exercise.name\n              }), _jsx(Text, {\n                style: styles.exerciseReps,\n                children: exercise.repetitions\n              })]\n            })\n          }, index);\n        })\n      })]\n    }, section.id);\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [(currentSport == null ? void 0 : currentSport.icon) && _jsx(View, {\n      style: styles.sportBackgroundContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: currentSport.icon\n        },\n        style: styles.sportBackgroundImage,\n        tintColor: currentSport.color || '#F9BB55',\n        resizeMode: \"contain\"\n      })\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsxs(View, {\n        style: styles.headerTop,\n        children: [_jsx(Text, {\n          style: styles.logo,\n          children: \"Muvz\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuLines,\n          onPress: function onPress() {\n            return setIsMenuVisible(true);\n          },\n          children: [_jsx(View, {\n            style: styles.menuLine\n          }), _jsx(View, {\n            style: styles.menuLine\n          }), _jsx(View, {\n            style: styles.menuLine\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"In\\xEDcio da Aula\"\n      }), _jsxs(Text, {\n        style: styles.subtitle,\n        children: [\"Vamos come\\xE7ar a aula da \", (classData == null ? void 0 : classData.grade) || 'turma', \"?\"]\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsxs(View, {\n        style: styles.classTitleContainer,\n        children: [(currentSport == null ? void 0 : currentSport.icon) && _jsx(Image, {\n          source: {\n            uri: currentSport.icon\n          },\n          style: styles.classTitleIcon,\n          tintColor: currentSport.color || '#F9BB55',\n          resizeMode: \"contain\"\n        }), _jsx(Text, {\n          style: styles.classTitle,\n          children: getDynamicClassTitle()\n        })]\n      }), _jsxs(Text, {\n        style: styles.classInfo,\n        children: [\"Dura\\xE7\\xE3o: \", getDynamicDuration(), \" \\u2022 Esse treino vale \", getDynamicXP(), \"xp para seus alunos\"]\n      })]\n    }), attendanceTaken && _jsx(View, {\n      style: styles.attendanceStatusContainer,\n      children: _jsx(Text, {\n        style: styles.attendanceStatusText,\n        children: \"\\u2705 Chamada realizada com sucesso!\"\n      })\n    }), _jsx(View, {\n      style: styles.workoutContainer,\n      children: workoutSections.map(renderWorkoutCard)\n    }), _jsxs(View, {\n      style: styles.actionButtonsContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.actionButton, styles.attendanceButton, attendanceTaken && styles.attendanceButtonCompleted],\n        onPress: function onPress() {\n          console.log('🔵 ClassScreen - Navegando para attendanceList com classData:', classData);\n          onNavigate('attendanceList', {\n            classData: classData\n          });\n        },\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.actionButtonText,\n          children: function () {\n            var text = attendanceTaken ? '✅ Chamada Realizada' : '📋 Lista de Presença';\n            console.log('🔵 ClassScreen - Botão Lista de Presença:', text, 'attendanceTaken:', attendanceTaken);\n            return text;\n          }()\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.actionButton, styles.scoringButton],\n        onPress: handleOpenScoring,\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.actionButtonText,\n          children: \"\\u2B50 Avaliar Alunos\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: [styles.completeButton, classCompleted && styles.completeButtonCompleted],\n      onPress: handleCompleteClass,\n      disabled: classCompleted || loading,\n      children: _jsx(Text, {\n        style: styles.completeButtonText,\n        children: classCompleted ? 'Aula Concluída' : 'Concluir Aula'\n      })\n    }), showCompletionModal && _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Concluir Aula\"\n        }), _jsx(Text, {\n          style: styles.modalMessage,\n          children: \"Tem certeza que deseja concluir esta aula? Esta a\\xE7\\xE3o n\\xE3o pode ser desfeita.\"\n        }), _jsxs(View, {\n          style: styles.modalButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, styles.cancelButton],\n            onPress: function onPress() {\n              return setShowCompletionModal(false);\n            },\n            children: _jsx(Text, {\n              style: styles.cancelButtonText,\n              children: \"Cancelar\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, styles.confirmButton],\n            onPress: confirmCompleteClass,\n            disabled: loading,\n            children: _jsx(Text, {\n              style: styles.confirmButtonText,\n              children: loading ? 'Concluindo...' : 'Confirmar'\n            })\n          })]\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: showScoringModal,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setShowScoringModal(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.scoringModalContent,\n          children: [_jsx(Text, {\n            style: styles.scoringModalTitle,\n            children: \"Avaliar Alunos e Presen\\xE7a\"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Alunos da Turma\"\n            }), _jsx(ScrollView, {\n              style: styles.studentList,\n              nestedScrollEnabled: true,\n              children: students.map(function (student) {\n                return _jsxs(View, {\n                  style: styles.studentRow,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.checkboxContainer,\n                    onPress: function onPress() {\n                      return toggleStudentSelection(student.id);\n                    },\n                    children: _jsx(View, {\n                      style: [styles.checkbox, selectedStudents.includes(student.id) && styles.checkboxChecked],\n                      children: selectedStudents.includes(student.id) && _jsx(Text, {\n                        style: styles.checkmark,\n                        children: \"\\u2713\"\n                      })\n                    })\n                  }), _jsxs(View, {\n                    style: styles.studentInfo,\n                    children: [_jsx(Text, {\n                      style: styles.studentName,\n                      children: student.name\n                    }), _jsx(Text, {\n                      style: styles.studentEmail,\n                      children: student.email\n                    })]\n                  })]\n                }, student.id);\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Esporte da Aula\"\n            }), _jsx(View, {\n              style: styles.sportDisplayContainer,\n              children: _jsxs(Text, {\n                style: styles.sportDisplayText,\n                children: [\"\\uD83C\\uDFC6 \", function (_classData$subject5) {\n                  var subjectParts = ((_classData$subject5 = classData.subject) == null ? void 0 : _classData$subject5.split(' - ')) || [];\n                  return subjectParts[0] || 'Esporte não definido';\n                }()]\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Pontua\\xE7\\xE3o (0-100) *\"\n            }), _jsx(TextInput, {\n              style: styles.scoreInput,\n              placeholder: \"Digite a pontua\\xE7\\xE3o\",\n              value: batchScore,\n              onChangeText: setBatchScore,\n              keyboardType: \"numeric\",\n              maxLength: 3\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Observa\\xE7\\xF5es\"\n            }), _jsx(TextInput, {\n              style: styles.notesInput,\n              placeholder: \"Observa\\xE7\\xF5es sobre o desempenho (opcional)\",\n              value: batchNotes,\n              onChangeText: setBatchNotes,\n              multiline: true,\n              numberOfLines: 3\n            })]\n          }), _jsxs(View, {\n            style: styles.summaryContainer,\n            children: [_jsxs(Text, {\n              style: styles.summaryText,\n              children: [\"\\uD83D\\uDCCA \", selectedStudents.length, \" aluno(s) selecionado(s) para avalia\\xE7\\xE3o\"]\n            }), _jsxs(Text, {\n              style: styles.summaryText,\n              children: [\"\\uD83C\\uDFC6 Esporte: \", function (_classData$subject6) {\n                var subjectParts = ((_classData$subject6 = classData.subject) == null ? void 0 : _classData$subject6.split(' - ')) || [];\n                return subjectParts[0] || 'Não definido';\n              }()]\n            }), _jsx(Text, {\n              style: styles.summaryText,\n              children: \"\\uD83D\\uDCDD Presen\\xE7a ser\\xE1 salva para todos os alunos\"\n            })]\n          }), _jsxs(View, {\n            style: styles.scoringModalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.scoringModalButton, styles.cancelButton],\n              onPress: function onPress() {\n                setShowScoringModal(false);\n                setSelectedStudents([]);\n                setBatchScore('');\n                setBatchNotes('');\n              },\n              children: _jsx(Text, {\n                style: styles.cancelButtonText,\n                children: \"Cancelar\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.scoringModalButton, styles.saveButton],\n              onPress: handleBatchSaveScores,\n              disabled: loading,\n              children: _jsx(Text, {\n                style: styles.saveButtonText,\n                children: loading ? 'Salvando...' : 'Salvar Tudo'\n              })\n            })]\n          })]\n        })\n      })\n    }), _jsx(SideMenu, {\n      isVisible: isMenuVisible,\n      onClose: function onClose() {\n        return setIsMenuVisible(false);\n      },\n      onNavigate: onNavigate,\n      currentUser: currentUser,\n      onLogout: onLogout,\n      userType: \"TEACHER\"\n    }), _jsx(CustomAlert, {\n      visible: alert.visible,\n      title: alert.title,\n      message: alert.message,\n      type: alert.type,\n      onClose: hideAlert\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EDED'\n  },\n  sportBackgroundContainer: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: width > 768 ? '50%' : '60%',\n    height: '35%',\n    zIndex: 0,\n    opacity: 0.06\n  },\n  sportBackgroundImage: {\n    width: '100%',\n    height: '100%'\n  },\n  header: {\n    padding: 20,\n    paddingTop: 40,\n    position: 'relative',\n    zIndex: 1\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  menuLines: {\n    flexDirection: 'column',\n    gap: 3\n  },\n  menuLine: {\n    width: 39,\n    height: 6,\n    backgroundColor: '#D9D9D9'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 10\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#000',\n    marginBottom: 20\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#000',\n    marginBottom: 20\n  },\n  classTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  classTitleIcon: {\n    width: width > 768 ? 48 : 40,\n    height: width > 768 ? 48 : 40,\n    marginRight: 12\n  },\n  classTitle: {\n    fontSize: width > 768 ? 36 : 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    textShadow: '1px 1px 2px rgba(0, 0, 0, 0.1)'\n  },\n  classInfo: {\n    fontSize: 18,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: '500',\n    lineHeight: 24\n  },\n  attendanceButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  attendanceButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000'\n  },\n  workoutContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  workoutCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: 15,\n    padding: 20,\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    elevation: 3\n  },\n  expandedCard: {\n    shadowOpacity: 0.2,\n    elevation: 5\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  cardTitleContainer: {\n    flex: 1\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5\n  },\n  cardDuration: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  expandIcon: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: '#F9BB55',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  expandIconText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  exercisesList: {\n    marginTop: 15,\n    paddingTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0'\n  },\n  exerciseItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#F8F9FA',\n    borderRadius: 10,\n    marginBottom: 8\n  },\n  exerciseInfo: {\n    flex: 1\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 4\n  },\n  exerciseReps: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  completeButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 40,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  completeButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  completeButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000'\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 30,\n    marginHorizontal: 20,\n    maxWidth: 400,\n    width: '100%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  modalMessage: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 25,\n    lineHeight: 22\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  cancelButton: {\n    backgroundColor: '#E0E0E0'\n  },\n  confirmButton: {\n    backgroundColor: '#F9BB55'\n  },\n  cancelButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#666'\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000'\n  },\n  actionButtonsContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    marginBottom: 15,\n    gap: 10\n  },\n  actionButton: {\n    flex: 1,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  attendanceButton: {\n    backgroundColor: '#2196F3'\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  scoringButton: {\n    backgroundColor: '#F9BB55'\n  },\n  actionButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000'\n  },\n  scoringModalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    marginHorizontal: 10,\n    maxHeight: '90%',\n    width: '95%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8\n  },\n  scoringModalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  inputGroup: {\n    marginBottom: 15\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 6\n  },\n  studentList: {\n    maxHeight: 150,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8\n  },\n  studentItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0'\n  },\n  selectedStudentItem: {\n    backgroundColor: '#F9BB55'\n  },\n  studentName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333'\n  },\n  studentEmail: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 2\n  },\n  sportList: {\n    maxHeight: 100,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8\n  },\n  sportItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0'\n  },\n  selectedSportItem: {\n    backgroundColor: '#F9BB55'\n  },\n  sportName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333'\n  },\n  scoreInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff'\n  },\n  notesInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n    textAlignVertical: 'top',\n    minHeight: 60\n  },\n  scoringModalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 8\n  },\n  scoringModalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  saveButton: {\n    backgroundColor: '#4CAF50'\n  },\n  saveButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#fff'\n  },\n  studentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n    backgroundColor: '#fff'\n  },\n  checkboxContainer: {\n    marginRight: 8\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderWidth: 2,\n    borderColor: '#E0E0E0',\n    borderRadius: 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  checkboxChecked: {\n    backgroundColor: '#F9BB55',\n    borderColor: '#F9BB55'\n  },\n  checkmark: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  studentInfo: {\n    flex: 1\n  },\n  summaryContainer: {\n    backgroundColor: '#F8F9FA',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 12\n  },\n  summaryText: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 3,\n    fontFamily: 'Poppins'\n  },\n  sportDisplayContainer: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    alignItems: 'center'\n  },\n  sportDisplayText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1976D2',\n    textAlign: 'center'\n  },\n  attendanceStatusContainer: {\n    backgroundColor: '#E8F5E8',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 10,\n    borderLeftWidth: 4,\n    borderLeftColor: '#4CAF50'\n  },\n  attendanceStatusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2E7D32',\n    textAlign: 'center'\n  }\n});\nexport default ClassScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","Image","Dimensions","TextInput","Modal","CustomAlert","useCustomAlert","apiService","SideMenu","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","ClassScreen","_ref","_window$navigationPar","isMenuVisible","setIsMenuVisible","onNavigate","currentUser","onLogout","classData","window","navigationParams","_useState","_useState2","_slicedToArray","attendanceTaken","setAttendanceTaken","_useState3","_useState4","classCompleted","setClassCompleted","_useState5","_useState6","loading","setLoading","_useState7","_useState8","expandedCard","setExpandedCard","_useState9","_useState0","showCompletionModal","setShowCompletionModal","_useState1","_useState10","showScoringModal","setShowScoringModal","_useState11","_useState12","students","setStudents","_useState13","_useState14","sports","setSports","_useState15","_useState16","currentSport","setCurrentSport","_useState17","_useState18","selectedStudent","setSelectedStudent","_useState19","_useState20","selectedSport","setSelectedSport","_useState21","_useState22","score","setScore","_useState23","_useState24","notes","setNotes","_useState25","_useState26","scoresData","setScoresData","_useState27","_useState28","selectedStudents","setSelectedStudents","_useState29","_useState30","batchScore","setBatchScore","_useState31","_useState32","batchNotes","setBatchNotes","_useCustomAlert","alert","showSuccess","showError","hideAlert","console","log","subject","loadStudents","loadSports","checkAttendanceStatus","length","identifyCurrentSport","subjectParts","split","sportName","sport","find","s","name","toLowerCase","getDynamicClassTitle","_classData$subject","classType","getDynamicXP","_classData$subject2","toUpperCase","getDynamicDuration","_classData$subject3","_ref2","_asyncToGenerator","id","response","getClassAttendance","date","success","data","attendances","allAttendancesFromThisClass","every","attendance","teacherClassId","error","apply","arguments","_ref3","classId","getClassStudents","map","item","student","message","Array","isArray","_ref4","getSports","workoutSections","title","duration","exercises","repetitions","handleTakeAttendance","_ref5","attendancePromises","_ref6","status","attendanceData","saveAttendance","studentId","isPresent","_x","Promise","all","handleCompleteClass","confirmCompleteClass","_ref7","Error","completeClass","handleOpenScoring","toggleStudentSelection","prev","includes","filter","concat","_toConsumableArray","handleBatchSaveScores","_ref8","_classData$subject4","scoreValue","parseInt","classSport","scorePromises","_ref9","sportId","trim","lessonDate","saveClassScore","_x2","attendanceResponse","saveBatchAttendance","handleSaveScore","_ref0","renderWorkoutCard","section","style","styles","workoutCard","onPress","children","cardHeader","cardTitleContainer","cardTitle","cardDuration","expandIcon","expandIconText","exercisesList","exercise","index","exerciseItem","exerciseInfo","exerciseName","exerciseReps","container","icon","sportBackgroundContainer","source","uri","sportBackgroundImage","tintColor","color","resizeMode","header","headerTop","logo","menuLines","menuLine","subtitle","grade","divider","classTitleContainer","classTitleIcon","classTitle","classInfo","attendanceStatusContainer","attendanceStatusText","workoutContainer","actionButtonsContainer","actionButton","attendanceButton","attendanceButtonCompleted","disabled","actionButtonText","text","scoringButton","completeButton","completeButtonCompleted","completeButtonText","modalOverlay","modalContent","modalTitle","modalMessage","modalButtons","modalButton","cancelButton","cancelButtonText","confirmButton","confirmButtonText","visible","animationType","transparent","onRequestClose","scoringModalContent","scoringModalTitle","inputGroup","inputLabel","studentList","nestedScrollEnabled","studentRow","checkboxContainer","checkbox","checkboxChecked","checkmark","studentInfo","studentName","studentEmail","email","sportDisplayContainer","sportDisplayText","_classData$subject5","scoreInput","placeholder","value","onChangeText","keyboardType","maxLength","notesInput","multiline","numberOfLines","summaryContainer","summaryText","_classData$subject6","scoringModalButtons","scoringModalButton","saveButton","saveButtonText","isVisible","onClose","userType","type","create","flex","backgroundColor","position","top","right","height","zIndex","opacity","padding","paddingTop","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","gap","marginRight","textAlign","textShadow","lineHeight","marginHorizontal","paddingVertical","borderRadius","attendanceButtonText","paddingHorizontal","boxShadow","elevation","shadowOpacity","fontFamily","marginTop","borderTopWidth","borderTopColor","left","bottom","maxWidth","shadowColor","shadowOffset","shadowRadius","maxHeight","borderWidth","borderColor","studentItem","borderBottomWidth","borderBottomColor","selectedStudentItem","sportList","sportItem","selectedSportItem","textAlignVertical","minHeight","borderLeftWidth","borderLeftColor"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/screens/teacher/ClassScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  Image,\n  Dimensions,\n  TextInput,\n  Modal,\n} from 'react-native';\nimport CustomAlert from '../../components/CustomAlert';\nimport useCustomAlert from '../../hooks/useCustomAlert';\nimport apiService from '../../services/apiService';\nimport SideMenu from '../../components/SideMenu';\n\nconst { width } = Dimensions.get('window');\n\nconst ClassScreen = ({ isMenuVisible, setIsMenuVisible, onNavigate, currentUser, onLogout }) => {\n  // Usar parâmetros passados via navegação\n  const classData = window.navigationParams?.classData || {};\n  \n\n  const [attendanceTaken, setAttendanceTaken] = useState(false);\n  const [classCompleted, setClassCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [expandedCard, setExpandedCard] = useState('aquecimento');\n  const [showCompletionModal, setShowCompletionModal] = useState(false);\n  const [showScoringModal, setShowScoringModal] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [sports, setSports] = useState([]);\n  const [currentSport, setCurrentSport] = useState(null); // Esporte atual da aula\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [selectedSport, setSelectedSport] = useState(null);\n  const [score, setScore] = useState('');\n  const [notes, setNotes] = useState('');\n  const [scoresData, setScoresData] = useState({}); // { studentId: { sportId: { score, notes } } }\n  \n  // Estados para avaliação em lote\n  const [selectedStudents, setSelectedStudents] = useState([]); // Array de IDs dos alunos selecionados\n  const [batchScore, setBatchScore] = useState('');\n  const [batchNotes, setBatchNotes] = useState('');\n  const { alert, showSuccess, showError, hideAlert } = useCustomAlert();\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    console.log('🔵 ClassScreen - classData recebido:', classData);\n    console.log('🔵 ClassScreen - subject:', classData.subject);\n    loadStudents();\n    loadSports();\n    checkAttendanceStatus(); // Verificar se chamada já foi realizada\n  }, []);\n\n  // Identificar esporte atual quando sports carregarem\n  useEffect(() => {\n    if (sports.length > 0 && classData.subject) {\n      identifyCurrentSport();\n    }\n  }, [sports, classData.subject]);\n\n  // Função para identificar o esporte atual da aula\n  const identifyCurrentSport = () => {\n    if (!classData.subject || sports.length === 0) return;\n    \n    // Extrair nome do esporte do subject (formato: \"Nome do Esporte - Tipo da Aula\")\n    const subjectParts = classData.subject.split(' - ');\n    const sportName = subjectParts[0];\n    \n    // Encontrar o esporte correspondente\n    const sport = sports.find(s => \n      s.name.toLowerCase() === sportName.toLowerCase()\n    );\n    \n    if (sport) {\n      console.log('🔵 ClassScreen - Esporte identificado:', sport);\n      setCurrentSport(sport);\n    } else {\n      console.log('🔴 ClassScreen - Esporte não encontrado:', sportName);\n    }\n  };\n\n  // Funções para informações dinâmicas baseadas no esporte\n  const getDynamicClassTitle = () => {\n    if (!currentSport) return 'Treino de Vôlei'; // Fallback\n    \n    const subjectParts = classData.subject?.split(' - ') || [];\n    const classType = subjectParts[1] || 'TREINO';\n    \n    return `${currentSport.name} - ${classType}`;\n  };\n\n  const getDynamicXP = () => {\n    if (!currentSport) return 60; // Fallback\n    \n    // XP baseado no tipo de aula\n    const subjectParts = classData.subject?.split(' - ') || [];\n    const classType = subjectParts[1] || 'TREINO';\n    \n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return 20;\n      case 'TREINO':\n        return 60;\n      case 'PRATICA':\n        return 80;\n      case 'COMPETICAO':\n        return 100;\n      default:\n        return 60;\n    }\n  };\n\n  const getDynamicDuration = () => {\n    if (!currentSport) return '60min'; // Fallback\n    \n    const subjectParts = classData.subject?.split(' - ') || [];\n    const classType = subjectParts[1] || 'TREINO';\n    \n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return '30min';\n      case 'TREINO':\n        return '60min';\n      case 'PRATICA':\n        return '90min';\n      case 'COMPETICAO':\n        return '120min';\n      default:\n        return '60min';\n    }\n  };\n\n  // Verificar se a chamada já foi realizada\n  const checkAttendanceStatus = async () => {\n    if (!classData?.id) return;\n    \n    try {\n      console.log('🔵 ClassScreen - Verificando status da chamada para aula:', classData.id);\n      const response = await apiService.getClassAttendance(classData.id, classData.date);\n      \n      // CORREÇÃO: Verificar se as presenças são da aula específica\n      // A API retorna presenças da turma na data, mas precisamos verificar se são da aula específica\n      if (response.success && response.data.attendances && response.data.attendances.length > 0) {\n        // Verificar se todas as presenças são da aula específica (teacherClass.id)\n        const allAttendancesFromThisClass = response.data.attendances.every(attendance => \n          attendance.teacherClassId === classData.id\n        );\n        \n        if (allAttendancesFromThisClass) {\n          console.log('🔵 ClassScreen - Chamada já foi realizada para esta aula específica');\n          setAttendanceTaken(true);\n        } else {\n          console.log('🔵 ClassScreen - Presenças encontradas são de outras aulas da mesma turma');\n          setAttendanceTaken(false);\n        }\n      } else {\n        console.log('🔵 ClassScreen - Chamada ainda não foi realizada');\n        setAttendanceTaken(false);\n      }\n    } catch (error) {\n      console.error('🔴 ClassScreen - Erro ao verificar status da chamada:', error);\n      setAttendanceTaken(false);\n    }\n  };\n\n  const loadStudents = async () => {\n    try {\n      console.log('🔵 Carregando alunos para a aula:', classData);\n      console.log('🔵 classData.classId:', classData.classId);\n      console.log('🔵 classData.id:', classData.id);\n      \n      // Se a aula tem classId (ID da turma), buscar alunos da turma\n      if (classData.classId) {\n        console.log('🔵 Buscando alunos da turma:', classData.classId);\n        const response = await apiService.getClassStudents(classData.classId);\n        console.log('🔵 Resposta da API getClassStudents:', response);\n        if (response.success) {\n          const students = response.data.map(item => item.student);\n          console.log(`🔵 ${students.length} alunos encontrados na turma:`, students.map(s => s.name));\n          setStudents(students);\n        } else {\n          console.error('❌ Erro ao buscar alunos da turma:', response.message);\n        }\n      } else {\n        console.log('🔵 Aula sem turma associada, usando alunos passados via navegação');\n        // Usar alunos passados via navegação (fallback)\n        if (classData.students && Array.isArray(classData.students)) {\n          console.log('🔵 Usando alunos passados via navegação:', classData.students.length);\n          setStudents(classData.students);\n        } else {\n          console.log('🔵 Nenhum aluno encontrado');\n          setStudents([]);\n        }\n      }\n    } catch (error) {\n      console.error('❌ Erro ao carregar alunos:', error);\n    }\n  };\n\n  const loadSports = async () => {\n    try {\n      const response = await apiService.getSports();\n      if (response.success) {\n        setSports(response.data.sports || []);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar esportes:', error);\n    }\n  };\n\n  // Dados de exemplo dos exercícios (em produção viria da API)\n  const workoutSections = [\n    {\n      id: 'aquecimento',\n      title: 'Aquecimento',\n      duration: '7min',\n      exercises: [\n        { name: 'Corrida Leve', repetitions: '5 minutos' },\n        { name: 'Alongamento Dinâmico', repetitions: '2 minutos' },\n        { name: 'Aquecimento Articular', repetitions: '1 série' },\n      ],\n    },\n    {\n      id: 'treino',\n      title: 'Treino',\n      duration: '30min',\n      exercises: [\n        { name: 'Saque', repetitions: '20 repetições' },\n        { name: 'Recepção', repetitions: '20 repetições' },\n        { name: 'Levantamento', repetitions: '20 repetições' },\n        { name: 'Ataque', repetitions: '20 repetições' },\n        { name: 'Bloqueio', repetitions: '20 repetições' },\n        { name: 'Defesa', repetitions: '20 repetições' },\n      ],\n    },\n    {\n      id: 'desaquecimento',\n      title: 'Desaquecimento',\n      duration: '8min',\n      exercises: [\n        { name: 'Alongamento Final', repetitions: '5 minutos' },\n        { name: 'Relaxamento', repetitions: '3 minutos' },\n      ],\n    },\n  ];\n\n  const handleTakeAttendance = async () => {\n    try {\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n\n      // Salvar presença de todos os alunos\n      const attendancePromises = students.map(async (student) => {\n        const status = attendanceData[student.id] || 'present'; // Default: presente\n        \n        try {\n          const response = await apiService.saveAttendance(classData.classId, {\n            studentId: student.id,\n            isPresent: status === 'present',\n            date: classData.date\n          });\n          \n          if (!response.success) {\n            console.error(`Erro ao salvar presença do aluno ${student.name}:`, response.message);\n          }\n        } catch (error) {\n          console.error(`Erro ao salvar presença do aluno ${student.name}:`, error);\n        }\n      });\n\n      await Promise.all(attendancePromises);\n      \n      setAttendanceTaken(true);\n      showSuccess('Sucesso! 🎉', 'Chamada realizada com sucesso!');\n    } catch (error) {\n      showError('❌ Erro', 'Erro ao realizar a chamada');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCompleteClass = () => {\n    setShowCompletionModal(true);\n  };\n\n  const confirmCompleteClass = async () => {\n    try {\n      setLoading(true);\n      \n      console.log('🔵 ClassData:', classData);\n      console.log('🔵 Class ID:', classData.id);\n      \n      if (!classData.id) {\n        throw new Error('ID da aula não encontrado');\n      }\n      \n      // Chamar API para marcar aula como concluída\n      const response = await apiService.completeClass(classData.id, true);\n      \n      if (response.success) {\n        setClassCompleted(true);\n        setShowCompletionModal(false);\n        \n        // Marcar que a aula foi concluída nos parâmetros de navegação\n        if (window.navigationParams) {\n          window.navigationParams.classCompleted = true;\n        }\n        \n        showSuccess('Sucesso! 🎉', 'Aula concluída com sucesso!');\n        \n        // Navegar de volta para a lista de aulas\n        onNavigate('teacherClasses');\n      } else {\n        throw new Error(response.message || 'Erro ao concluir a aula');\n      }\n    } catch (error) {\n      console.error('Erro ao concluir aula:', error);\n      showError('❌ Erro', error.message || 'Erro ao concluir a aula');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpenScoring = () => {\n    setShowScoringModal(true);\n  };\n\n  // Funções para avaliação em lote\n  const toggleStudentSelection = (studentId) => {\n    setSelectedStudents(prev => \n      prev.includes(studentId) \n        ? prev.filter(id => id !== studentId)\n        : [...prev, studentId]\n    );\n  };\n\n\n  const handleBatchSaveScores = async () => {\n    try {\n      if (selectedStudents.length === 0) {\n        showError('❌ Erro', 'Selecione pelo menos um aluno');\n        return;\n      }\n\n      if (!batchScore) {\n        showError('❌ Erro', 'Digite uma pontuação');\n        return;\n      }\n\n      const scoreValue = parseInt(batchScore);\n      if (scoreValue < 0 || scoreValue > 100) {\n        showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n        return;\n      }\n\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n\n      // Buscar o esporte da aula automaticamente\n      // O esporte está no campo 'subject' no formato \"Nome do Esporte - Tipo da Aula\"\n      const subjectParts = classData.subject?.split(' - ') || [];\n      const sportName = subjectParts[0]; // Primeira parte é o nome do esporte\n      \n      const classSport = sports.find(sport => \n        sport.name.toLowerCase() === sportName?.toLowerCase()\n      );\n\n      if (!classSport) {\n        showError('❌ Erro', `Esporte \"${sportName}\" da aula não encontrado`);\n        return;\n      }\n\n      // Salvar pontuação para todos os alunos selecionados\n      const scorePromises = selectedStudents.map(async (studentId) => {\n        try {\n          console.log('🔵 ClassScreen - Salvando pontuação:', {\n            classId: classData.classId,\n            studentId,\n            sportId: classSport.id,\n            score: scoreValue,\n            notes: batchNotes.trim() || null,\n            lessonDate: classData.date\n          });\n          \n          const response = await apiService.saveClassScore(\n            classData.classId,\n            studentId,\n            classSport.id,\n            scoreValue,\n            batchNotes.trim() || null,\n            classData.date\n          );\n          \n          console.log('🔵 ClassScreen - Resposta da API:', response);\n          \n          if (!response.success) {\n            console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, response.message);\n            throw new Error(response.message || 'Erro ao salvar pontuação');\n          }\n        } catch (error) {\n          console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, error);\n          throw error;\n        }\n      });\n\n      await Promise.all(scorePromises);\n\n      // CORREÇÃO: Só salvar presenças se a chamada ainda não foi realizada\n      if (!attendanceTaken) {\n        // Salvar presença de todos os alunos usando a nova API em lote\n        const attendances = students.map(student => ({\n          studentId: student.id,\n          isPresent: true // Por padrão, todos presentes quando há pontuação\n        }));\n\n        console.log('🔵 ClassScreen - Salvando presenças:', {\n          classId: classData.id, // ← CORREÇÃO: Usar ID da aula específica\n          attendances,\n          lessonDate: classData.date\n        });\n\n        try {\n          const attendanceResponse = await apiService.saveBatchAttendance(\n            classData.id, // ← CORREÇÃO: Usar ID da aula específica\n            attendances, \n            classData.date\n          );\n          \n          console.log('🔵 ClassScreen - Resposta da API de presença:', attendanceResponse);\n          \n          if (!attendanceResponse.success) {\n            console.error('🔴 Erro ao salvar presenças:', attendanceResponse.message);\n          } else {\n            setAttendanceTaken(true); // Marcar chamada como realizada\n          }\n        } catch (error) {\n          console.error('🔴 Erro ao salvar presenças:', error);\n        }\n      } else {\n        console.log('🔵 ClassScreen - Chamada já realizada, não alterando presenças');\n      }\n\n      if (attendanceTaken) {\n        showSuccess('Sucesso! 🎉', `Pontuações salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n      } else {\n        showSuccess('Sucesso! 🎉', `Pontuações e presenças salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n      }\n      \n      // Limpar estados\n      setSelectedStudents([]);\n      setBatchScore('');\n      setBatchNotes('');\n      setShowScoringModal(false);\n      setAttendanceTaken(true);\n      \n      loadStudents(); // Recarregar dados\n    } catch (error) {\n      console.error('Erro ao salvar avaliações:', error);\n      showError('❌ Erro', 'Erro ao salvar avaliações');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveScore = async () => {\n    try {\n      if (!selectedStudent || !selectedSport || !score) {\n        showError('❌ Erro', 'Preencha todos os campos obrigatórios');\n        return;\n      }\n\n      const scoreValue = parseInt(score);\n      if (scoreValue < 0 || scoreValue > 100) {\n        showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n        return;\n      }\n\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n      \n      const response = await apiService.saveClassScore(\n        classData.classId,\n        selectedStudent.id,\n        selectedSport.id,\n        scoreValue,\n        notes.trim() || null\n      );\n\n      if (response.success) {\n        showSuccess('Sucesso! 🎉', 'Pontuação salva com sucesso!');\n        setShowScoringModal(false);\n        setSelectedStudent(null);\n        setSelectedSport(null);\n        setScore('');\n        setNotes('');\n        loadStudents(); // Recarregar dados\n      } else {\n        throw new Error(response.message || 'Erro ao salvar pontuação');\n      }\n    } catch (error) {\n      console.error('Erro ao salvar pontuação:', error);\n      showError('❌ Erro', error.message || 'Erro ao salvar pontuação');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderWorkoutCard = (section) => (\n    <TouchableOpacity\n      key={section.id}\n      style={[\n        styles.workoutCard,\n        expandedCard === section.id && styles.expandedCard\n      ]}\n      onPress={() => setExpandedCard(expandedCard === section.id ? null : section.id)}\n    >\n      <View style={styles.cardHeader}>\n        <View style={styles.cardTitleContainer}>\n          <Text style={styles.cardTitle}>{section.title}</Text>\n          <Text style={styles.cardDuration}>{section.duration}</Text>\n        </View>\n        <View style={styles.expandIcon}>\n          <Text style={styles.expandIconText}>\n            {expandedCard === section.id ? '⌄' : '>'}\n          </Text>\n        </View>\n      </View>\n      \n      {expandedCard === section.id && (\n        <View style={styles.exercisesList}>\n          {section.exercises.map((exercise, index) => (\n            <View key={index} style={styles.exerciseItem}>\n              <View style={styles.exerciseInfo}>\n                <Text style={styles.exerciseName}>{exercise.name}</Text>\n                <Text style={styles.exerciseReps}>{exercise.repetitions}</Text>\n              </View>\n            </View>\n          ))}\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* Background com imagem do esporte */}\n      {currentSport?.icon && (\n        <View style={styles.sportBackgroundContainer}>\n          <Image \n            source={{ uri: currentSport.icon }} \n            style={styles.sportBackgroundImage}\n            tintColor={currentSport.color || '#F9BB55'}\n            resizeMode=\"contain\"\n          />\n        </View>\n      )}\n      \n      {/* Header */}\n      <View style={styles.header}>\n        <View style={styles.headerTop}>\n          <Text style={styles.logo}>Muvz</Text>\n          <TouchableOpacity \n            style={styles.menuLines}\n            onPress={() => setIsMenuVisible(true)}\n          >\n            <View style={styles.menuLine} />\n            <View style={styles.menuLine} />\n            <View style={styles.menuLine} />\n          </TouchableOpacity>\n        </View>\n        \n        <Text style={styles.title}>Início da Aula</Text>\n        <Text style={styles.subtitle}>\n          Vamos começar a aula da {classData?.grade || 'turma'}?\n        </Text>\n        \n        <View style={styles.divider} />\n        \n        <View style={styles.classTitleContainer}>\n          {currentSport?.icon && (\n            <Image \n              source={{ uri: currentSport.icon }} \n            style={styles.classTitleIcon}\n            tintColor={currentSport.color || '#F9BB55'}\n              resizeMode=\"contain\"\n            />\n          )}\n          <Text style={styles.classTitle}>{getDynamicClassTitle()}</Text>\n        </View>\n        <Text style={styles.classInfo}>\n          Duração: {getDynamicDuration()} • Esse treino vale {getDynamicXP()}xp para seus alunos\n        </Text>\n      </View>\n\n      {/* Status da Chamada */}\n      {attendanceTaken && (\n        <View style={styles.attendanceStatusContainer}>\n          <Text style={styles.attendanceStatusText}>✅ Chamada realizada com sucesso!</Text>\n        </View>\n      )}\n\n      {/* Seções de Exercícios */}\n      <View style={styles.workoutContainer}>\n        {workoutSections.map(renderWorkoutCard)}\n      </View>\n\n      {/* Botões de Ação */}\n      <View style={styles.actionButtonsContainer}>\n        {/* Botão de Lista de Presença */}\n        <TouchableOpacity \n          style={[\n            styles.actionButton, \n            styles.attendanceButton,\n            attendanceTaken && styles.attendanceButtonCompleted\n          ]}\n          onPress={() => {\n            console.log('🔵 ClassScreen - Navegando para attendanceList com classData:', classData);\n            onNavigate('attendanceList', { classData });\n          }}\n          disabled={loading}\n        >\n          <Text style={styles.actionButtonText}>\n            {(() => {\n              const text = attendanceTaken ? '✅ Chamada Realizada' : '📋 Lista de Presença';\n              console.log('🔵 ClassScreen - Botão Lista de Presença:', text, 'attendanceTaken:', attendanceTaken);\n              return text;\n            })()}\n          </Text>\n        </TouchableOpacity>\n\n        {/* Botão de Pontuação */}\n        <TouchableOpacity \n          style={[styles.actionButton, styles.scoringButton]}\n          onPress={handleOpenScoring}\n          disabled={loading}\n        >\n          <Text style={styles.actionButtonText}>⭐ Avaliar Alunos</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Botão de Conclusão */}\n      <TouchableOpacity \n        style={[styles.completeButton, classCompleted && styles.completeButtonCompleted]}\n        onPress={handleCompleteClass}\n        disabled={classCompleted || loading}\n      >\n        <Text style={styles.completeButtonText}>\n          {classCompleted ? 'Aula Concluída' : 'Concluir Aula'}\n        </Text>\n      </TouchableOpacity>\n\n      {/* Modal de Confirmação de Conclusão */}\n      {showCompletionModal && (\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Concluir Aula</Text>\n            <Text style={styles.modalMessage}>\n              Tem certeza que deseja concluir esta aula? Esta ação não pode ser desfeita.\n            </Text>\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setShowCompletionModal(false)}\n              >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.confirmButton]}\n                onPress={confirmCompleteClass}\n                disabled={loading}\n              >\n                <Text style={styles.confirmButtonText}>\n                  {loading ? 'Concluindo...' : 'Confirmar'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      )}\n\n      {/* Modal de Avaliação Completa */}\n      <Modal\n        visible={showScoringModal}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={() => setShowScoringModal(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.scoringModalContent}>\n            <Text style={styles.scoringModalTitle}>Avaliar Alunos e Presença</Text>\n            \n            {/* Lista de Alunos com Seleção e Presença */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Alunos da Turma</Text>\n              <ScrollView style={styles.studentList} nestedScrollEnabled>\n                {students.map((student) => (\n                  <View key={student.id} style={styles.studentRow}>\n                    {/* Checkbox para seleção */}\n                    <TouchableOpacity\n                      style={styles.checkboxContainer}\n                      onPress={() => toggleStudentSelection(student.id)}\n                    >\n                      <View style={[\n                        styles.checkbox,\n                        selectedStudents.includes(student.id) && styles.checkboxChecked\n                      ]}>\n                        {selectedStudents.includes(student.id) && (\n                          <Text style={styles.checkmark}>✓</Text>\n                        )}\n                      </View>\n                    </TouchableOpacity>\n                    \n                    {/* Informações do aluno */}\n                    <View style={styles.studentInfo}>\n                      <Text style={styles.studentName}>{student.name}</Text>\n                      <Text style={styles.studentEmail}>{student.email}</Text>\n                    </View>\n                    \n                    {/* Toggle de presença */}\n                  </View>\n                ))}\n              </ScrollView>\n            </View>\n\n            {/* Esporte da Aula */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Esporte da Aula</Text>\n              <View style={styles.sportDisplayContainer}>\n                <Text style={styles.sportDisplayText}>\n                  🏆 {(() => {\n                    const subjectParts = classData.subject?.split(' - ') || [];\n                    return subjectParts[0] || 'Esporte não definido';\n                  })()}\n                </Text>\n              </View>\n            </View>\n\n            {/* Pontuação */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Pontuação (0-100) *</Text>\n              <TextInput\n                style={styles.scoreInput}\n                placeholder=\"Digite a pontuação\"\n                value={batchScore}\n                onChangeText={setBatchScore}\n                keyboardType=\"numeric\"\n                maxLength={3}\n              />\n            </View>\n\n            {/* Observações */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Observações</Text>\n              <TextInput\n                style={styles.notesInput}\n                placeholder=\"Observações sobre o desempenho (opcional)\"\n                value={batchNotes}\n                onChangeText={setBatchNotes}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            {/* Resumo */}\n            <View style={styles.summaryContainer}>\n              <Text style={styles.summaryText}>\n                📊 {selectedStudents.length} aluno(s) selecionado(s) para avaliação\n              </Text>\n              <Text style={styles.summaryText}>\n                🏆 Esporte: {(() => {\n                  const subjectParts = classData.subject?.split(' - ') || [];\n                  return subjectParts[0] || 'Não definido';\n                })()}\n              </Text>\n              <Text style={styles.summaryText}>\n                📝 Presença será salva para todos os alunos\n              </Text>\n            </View>\n\n            {/* Botões */}\n            <View style={styles.scoringModalButtons}>\n              <TouchableOpacity\n                style={[styles.scoringModalButton, styles.cancelButton]}\n                onPress={() => {\n                  setShowScoringModal(false);\n                  setSelectedStudents([]);\n                  setBatchScore('');\n                  setBatchNotes('');\n                }}\n              >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.scoringModalButton, styles.saveButton]}\n                onPress={handleBatchSaveScores}\n                disabled={loading}\n              >\n                <Text style={styles.saveButtonText}>\n                  {loading ? 'Salvando...' : 'Salvar Tudo'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n      \n      <SideMenu \n        isVisible={isMenuVisible} \n        onClose={() => setIsMenuVisible(false)} \n        onNavigate={onNavigate}\n        currentUser={currentUser}\n        onLogout={onLogout}\n        userType=\"TEACHER\"\n      />\n      \n      <CustomAlert\n        visible={alert.visible}\n        title={alert.title}\n        message={alert.message}\n        type={alert.type}\n        onClose={hideAlert}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EDED',\n  },\n  sportBackgroundContainer: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: width > 768 ? '50%' : '60%', // Responsivo para desktop/tablet\n    height: '35%',\n    zIndex: 0,\n    opacity: 0.06,\n  },\n  sportBackgroundImage: {\n    width: '100%',\n    height: '100%',\n  },\n  header: {\n    padding: 20,\n    paddingTop: 40,\n    position: 'relative',\n    zIndex: 1,\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  menuLines: {\n    flexDirection: 'column',\n    gap: 3,\n  },\n  menuLine: {\n    width: 39,\n    height: 6,\n    backgroundColor: '#D9D9D9',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 10,\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#000',\n    marginBottom: 20,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#000',\n    marginBottom: 20,\n  },\n  classTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n  },\n  classTitleIcon: {\n    width: width > 768 ? 48 : 40, // Responsivo\n    height: width > 768 ? 48 : 40,\n    marginRight: 12,\n  },\n  classTitle: {\n    fontSize: width > 768 ? 36 : 32, // Responsivo\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    textShadow: '1px 1px 2px rgba(0, 0, 0, 0.1)',\n  },\n  classInfo: {\n    fontSize: 18,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: '500',\n    lineHeight: 24,\n  },\n  attendanceButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50',\n  },\n  attendanceButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n  },\n  workoutContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 20,\n  },\n  workoutCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: 15,\n    padding: 20,\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    elevation: 3,\n  },\n  expandedCard: {\n    shadowOpacity: 0.2,\n    elevation: 5,\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  cardTitleContainer: {\n    flex: 1,\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5,\n  },\n  cardDuration: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n  },\n  expandIcon: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: '#F9BB55',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  expandIconText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  exercisesList: {\n    marginTop: 15,\n    paddingTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n  },\n  exerciseItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#F8F9FA',\n    borderRadius: 10,\n    marginBottom: 8,\n  },\n  exerciseInfo: {\n    flex: 1,\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 4,\n  },\n  exerciseReps: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n  },\n  completeButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 40,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  completeButtonCompleted: {\n    backgroundColor: '#4CAF50',\n  },\n  completeButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 30,\n    marginHorizontal: 20,\n    maxWidth: 400,\n    width: '100%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8,\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  modalMessage: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 25,\n    lineHeight: 22,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15,\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  cancelButton: {\n    backgroundColor: '#E0E0E0',\n  },\n  confirmButton: {\n    backgroundColor: '#F9BB55',\n  },\n  cancelButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#666',\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n  },\n  // Estilos dos botões de ação\n  actionButtonsContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    marginBottom: 15,\n    gap: 10,\n  },\n  actionButton: {\n    flex: 1,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  attendanceButton: {\n    backgroundColor: '#2196F3',\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50', // Verde para indicar que foi realizada\n  },\n  scoringButton: {\n    backgroundColor: '#F9BB55',\n  },\n  actionButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n  },\n  scoringModalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    marginHorizontal: 10,\n    maxHeight: '90%',\n    width: '95%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8,\n  },\n  scoringModalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  inputGroup: {\n    marginBottom: 15,\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 6,\n  },\n  studentList: {\n    maxHeight: 150,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n  },\n  studentItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n  },\n  selectedStudentItem: {\n    backgroundColor: '#F9BB55',\n  },\n  studentName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n  },\n  studentEmail: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 2,\n  },\n  sportList: {\n    maxHeight: 100,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n  },\n  sportItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n  },\n  selectedSportItem: {\n    backgroundColor: '#F9BB55',\n  },\n  sportName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n  },\n  scoreInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n  },\n  notesInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n    textAlignVertical: 'top',\n    minHeight: 60,\n  },\n  scoringModalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 8,\n  },\n  scoringModalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  saveButton: {\n    backgroundColor: '#4CAF50',\n  },\n  saveButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#fff',\n  },\n  // Novos estilos para avaliação em lote\n  studentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n    backgroundColor: '#fff',\n  },\n  checkboxContainer: {\n    marginRight: 8,\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderWidth: 2,\n    borderColor: '#E0E0E0',\n    borderRadius: 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  checkboxChecked: {\n    backgroundColor: '#F9BB55',\n    borderColor: '#F9BB55',\n  },\n  checkmark: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  studentInfo: {\n    flex: 1,\n  },\n  summaryContainer: {\n    backgroundColor: '#F8F9FA',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 12,\n  },\n  summaryText: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 3,\n    fontFamily: 'Poppins',\n  },\n  sportDisplayContainer: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    alignItems: 'center',\n  },\n  sportDisplayText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1976D2',\n    textAlign: 'center',\n  },\n  attendanceStatusContainer: {\n    backgroundColor: '#E8F5E8',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 10,\n    borderLeftWidth: 4,\n    borderLeftColor: '#4CAF50',\n  },\n  attendanceStatusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2E7D32',\n    textAlign: 'center',\n  },\n});\n\nexport default ClassScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}