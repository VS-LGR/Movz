{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport CustomAlert from \"../../components/CustomAlert\";\nimport useCustomAlert from \"../../hooks/useCustomAlert\";\nimport apiService from \"../../services/apiService\";\nimport SideMenu from \"../../components/SideMenu\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar ClassScreen = function ClassScreen(_ref) {\n  var _window$navigationPar;\n  var isMenuVisible = _ref.isMenuVisible,\n    setIsMenuVisible = _ref.setIsMenuVisible,\n    onNavigate = _ref.onNavigate,\n    currentUser = _ref.currentUser,\n    onLogout = _ref.onLogout;\n  var classData = ((_window$navigationPar = window.navigationParams) == null ? void 0 : _window$navigationPar.classData) || {};\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    attendanceTaken = _useState2[0],\n    setAttendanceTaken = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    classCompleted = _useState4[0],\n    setClassCompleted = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState('aquecimento'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    expandedCard = _useState8[0],\n    setExpandedCard = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showCompletionModal = _useState0[0],\n    setShowCompletionModal = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    showScoringModal = _useState10[0],\n    setShowScoringModal = _useState10[1];\n  var cardAnimations = useRef({\n    aquecimento: new Animated.Value(0),\n    treino: new Animated.Value(0),\n    alongamento: new Animated.Value(0),\n    desaquecimento: new Animated.Value(0)\n  }).current;\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    students = _useState12[0],\n    setStudents = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    sports = _useState14[0],\n    setSports = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentSport = _useState16[0],\n    setCurrentSport = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedStudent = _useState18[0],\n    setSelectedStudent = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedSport = _useState20[0],\n    setSelectedSport = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    score = _useState22[0],\n    setScore = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    notes = _useState24[0],\n    setNotes = _useState24[1];\n  var _useState25 = useState({}),\n    _useState26 = _slicedToArray(_useState25, 2),\n    scoresData = _useState26[0],\n    setScoresData = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedStudents = _useState28[0],\n    setSelectedStudents = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    batchScore = _useState30[0],\n    setBatchScore = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    batchNotes = _useState32[0],\n    setBatchNotes = _useState32[1];\n  var _useState33 = useState(null),\n    _useState34 = _slicedToArray(_useState33, 2),\n    selectedSportForScoring = _useState34[0],\n    setSelectedSportForScoring = _useState34[1];\n  var _useCustomAlert = useCustomAlert(),\n    alert = _useCustomAlert.alert,\n    showSuccess = _useCustomAlert.showSuccess,\n    showError = _useCustomAlert.showError,\n    hideAlert = _useCustomAlert.hideAlert;\n  useEffect(function () {\n    console.log('🔵 ClassScreen - classData recebido:', classData);\n    console.log('🔵 ClassScreen - subject:', classData.subject);\n    loadStudents();\n    loadSports();\n    checkAttendanceStatus();\n  }, []);\n  useEffect(function () {\n    if (sports.length > 0 && classData.subject) {\n      identifyCurrentSport();\n    }\n  }, [sports, classData.subject]);\n  var identifyCurrentSport = function identifyCurrentSport() {\n    if (!classData.subject || sports.length === 0) return;\n    var subjectParts = classData.subject.split(' - ');\n    var sportName = subjectParts[0];\n    var sport = sports.find(function (s) {\n      return s.name.toLowerCase() === sportName.toLowerCase();\n    });\n    if (sport) {\n      console.log('🔵 ClassScreen - Esporte identificado:', sport);\n      setCurrentSport(sport);\n    } else {\n      console.log('🔴 ClassScreen - Esporte não encontrado:', sportName);\n    }\n  };\n  var isFreeClass = function isFreeClass() {\n    if (!classData.subject) return false;\n    var subjectParts = classData.subject.split(' - ');\n    var sportName = subjectParts[0];\n    return sportName === 'Aula Livre';\n  };\n  var animateCard = function animateCard(cardId, isExpanding) {\n    var animation = cardAnimations[cardId];\n    if (!animation) {\n      console.log('🔴 ClassScreen - Animação não encontrada para cardId:', cardId);\n      return;\n    }\n    console.log('🔵 ClassScreen - Animando card:', cardId, 'isExpanding:', isExpanding);\n    Animated.timing(animation, {\n      toValue: isExpanding ? 1 : 0,\n      duration: 300,\n      useNativeDriver: false\n    }).start();\n  };\n  var getDynamicClassTitle = function getDynamicClassTitle() {\n    var _classData$subject;\n    if (!currentSport) return 'Treino de Vôlei';\n    var subjectParts = ((_classData$subject = classData.subject) == null ? void 0 : _classData$subject.split(' - ')) || [];\n    var classType = subjectParts[1] || 'TREINO';\n    return `${currentSport.name} - ${classType}`;\n  };\n  var getDynamicXP = function getDynamicXP() {\n    var _classData$subject2;\n    if (!currentSport) return 60;\n    var subjectParts = ((_classData$subject2 = classData.subject) == null ? void 0 : _classData$subject2.split(' - ')) || [];\n    var classType = subjectParts[1] || 'TREINO';\n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return 20;\n      case 'TREINO':\n        return 60;\n      case 'PRATICA':\n        return 80;\n      case 'COMPETICAO':\n        return 100;\n      default:\n        return 60;\n    }\n  };\n  var getDynamicDuration = function getDynamicDuration() {\n    var _classData$subject3;\n    if (!currentSport) return '60min';\n    var subjectParts = ((_classData$subject3 = classData.subject) == null ? void 0 : _classData$subject3.split(' - ')) || [];\n    var classType = subjectParts[1] || 'TREINO';\n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return '30min';\n      case 'TREINO':\n        return '60min';\n      case 'PRATICA':\n        return '90min';\n      case 'COMPETICAO':\n        return '120min';\n      default:\n        return '60min';\n    }\n  };\n  var checkAttendanceStatus = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!(classData != null && classData.id)) return;\n      try {\n        console.log('🔵 ClassScreen - Verificando status da chamada para aula:', classData.id);\n        var response = yield apiService.getClassAttendance(classData.id, classData.date);\n        if (response.success && response.data.attendances && response.data.attendances.length > 0) {\n          var allAttendancesFromThisClass = response.data.attendances.every(function (attendance) {\n            return attendance.teacherClassId === classData.id;\n          });\n          if (allAttendancesFromThisClass) {\n            console.log('🔵 ClassScreen - Chamada já foi realizada para esta aula específica');\n            setAttendanceTaken(true);\n          } else {\n            console.log('🔵 ClassScreen - Presenças encontradas são de outras aulas da mesma turma');\n            setAttendanceTaken(false);\n          }\n        } else {\n          console.log('🔵 ClassScreen - Chamada ainda não foi realizada');\n          setAttendanceTaken(false);\n        }\n      } catch (error) {\n        console.error('🔴 ClassScreen - Erro ao verificar status da chamada:', error);\n        setAttendanceTaken(false);\n      }\n    });\n    return function checkAttendanceStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadStudents = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        console.log('🔵 Carregando alunos para a aula:', classData);\n        console.log('🔵 classData.classId:', classData.classId);\n        console.log('🔵 classData.id:', classData.id);\n        if (classData.classId) {\n          console.log('🔵 Buscando alunos da turma:', classData.classId);\n          var response = yield apiService.getClassStudents(classData.classId);\n          console.log('🔵 Resposta da API getClassStudents:', response);\n          if (response.success) {\n            var _students = response.data.map(function (item) {\n              return item.student;\n            });\n            console.log(`🔵 ${_students.length} alunos encontrados na turma:`, _students.map(function (s) {\n              return s.name;\n            }));\n            setStudents(_students);\n          } else {\n            console.error('❌ Erro ao buscar alunos da turma:', response.message);\n          }\n        } else {\n          console.log('🔵 Aula sem turma associada, usando alunos passados via navegação');\n          if (classData.students && Array.isArray(classData.students)) {\n            console.log('🔵 Usando alunos passados via navegação:', classData.students.length);\n            setStudents(classData.students);\n          } else {\n            console.log('🔵 Nenhum aluno encontrado');\n            setStudents([]);\n          }\n        }\n      } catch (error) {\n        console.error('❌ Erro ao carregar alunos:', error);\n      }\n    });\n    return function loadStudents() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var loadSports = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield apiService.getSports();\n        if (response.success) {\n          setSports(response.data.sports || []);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar esportes:', error);\n      }\n    });\n    return function loadSports() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var workoutSections = [{\n    id: 'aquecimento',\n    title: 'Aquecimento',\n    duration: '7min',\n    exercises: [{\n      name: 'Corrida Leve',\n      repetitions: '5 minutos'\n    }, {\n      name: 'Alongamento Dinâmico',\n      repetitions: '2 minutos'\n    }, {\n      name: 'Aquecimento Articular',\n      repetitions: '1 série'\n    }]\n  }, {\n    id: 'treino',\n    title: 'Treino',\n    duration: '30min',\n    exercises: [{\n      name: 'Saque',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Recepção',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Levantamento',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Ataque',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Bloqueio',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Defesa',\n      repetitions: '20 repetições'\n    }]\n  }, {\n    id: 'desaquecimento',\n    title: 'Desaquecimento',\n    duration: '8min',\n    exercises: [{\n      name: 'Alongamento Final',\n      repetitions: '5 minutos'\n    }, {\n      name: 'Relaxamento',\n      repetitions: '3 minutos'\n    }]\n  }];\n  var handleTakeAttendance = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var attendancePromises = students.map(function () {\n          var _ref6 = _asyncToGenerator(function* (student) {\n            var status = attendanceData[student.id] || 'present';\n            try {\n              var response = yield apiService.saveAttendance(classData.classId, {\n                studentId: student.id,\n                isPresent: status === 'present',\n                date: classData.date\n              });\n              if (!response.success) {\n                console.error(`Erro ao salvar presença do aluno ${student.name}:`, response.message);\n              }\n            } catch (error) {\n              console.error(`Erro ao salvar presença do aluno ${student.name}:`, error);\n            }\n          });\n          return function (_x) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n        yield Promise.all(attendancePromises);\n        setAttendanceTaken(true);\n        showSuccess('Sucesso! 🎉', 'Chamada realizada com sucesso!');\n      } catch (error) {\n        showError('❌ Erro', 'Erro ao realizar a chamada');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleTakeAttendance() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleCompleteClass = function handleCompleteClass() {\n    setShowCompletionModal(true);\n  };\n  var confirmCompleteClass = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        console.log('🔵 ClassData:', classData);\n        console.log('🔵 Class ID:', classData.id);\n        if (!classData.id) {\n          throw new Error('ID da aula não encontrado');\n        }\n        var response = yield apiService.completeClass(classData.id, true);\n        if (response.success) {\n          setClassCompleted(true);\n          setShowCompletionModal(false);\n          if (window.navigationParams) {\n            window.navigationParams.classCompleted = true;\n          }\n          showSuccess('Sucesso! 🎉', 'Aula concluída com sucesso!');\n          onNavigate('teacherClasses');\n        } else {\n          throw new Error(response.message || 'Erro ao concluir a aula');\n        }\n      } catch (error) {\n        console.error('Erro ao concluir aula:', error);\n        showError('❌ Erro', error.message || 'Erro ao concluir a aula');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function confirmCompleteClass() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleOpenScoring = function handleOpenScoring() {\n    setShowScoringModal(true);\n  };\n  var toggleStudentSelection = function toggleStudentSelection(studentId) {\n    setSelectedStudents(function (prev) {\n      return prev.includes(studentId) ? prev.filter(function (id) {\n        return id !== studentId;\n      }) : [].concat(_toConsumableArray(prev), [studentId]);\n    });\n  };\n  var handleBatchSaveScores = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        if (selectedStudents.length === 0) {\n          showError('❌ Erro', 'Selecione pelo menos um aluno');\n          return;\n        }\n        if (!batchScore) {\n          showError('❌ Erro', 'Digite uma pontuação');\n          return;\n        }\n        var scoreValue = parseInt(batchScore);\n        if (scoreValue < 0 || scoreValue > 100) {\n          showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n          return;\n        }\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var classSport;\n        if (isFreeClass()) {\n          if (!selectedSportForScoring) {\n            showError('❌ Erro', 'Selecione um esporte para continuar');\n            return;\n          }\n          classSport = selectedSportForScoring;\n          console.log('🔵 ClassScreen - Usando esporte selecionado para \"Aula Livre\":', classSport.name);\n        } else {\n          var _classData$subject4;\n          var subjectParts = ((_classData$subject4 = classData.subject) == null ? void 0 : _classData$subject4.split(' - ')) || [];\n          var sportName = subjectParts[0];\n          classSport = sports.find(function (sport) {\n            return sport.name.toLowerCase() === (sportName == null ? void 0 : sportName.toLowerCase());\n          });\n          if (!classSport) {\n            showError('❌ Erro', `Esporte \"${sportName}\" da aula não encontrado`);\n            return;\n          }\n          console.log('🔵 ClassScreen - Usando esporte da aula:', classSport.name);\n        }\n        var scorePromises = selectedStudents.map(function () {\n          var _ref9 = _asyncToGenerator(function* (studentId) {\n            try {\n              console.log('🔵 ClassScreen - Salvando pontuação:', {\n                classId: classData.classId,\n                studentId: studentId,\n                sportId: classSport.id,\n                score: scoreValue,\n                notes: batchNotes.trim() || null,\n                lessonDate: classData.date\n              });\n              var response = yield apiService.saveClassScore(classData.classId, studentId, classSport.id, scoreValue, batchNotes.trim() || null, classData.date);\n              console.log('🔵 ClassScreen - Resposta da API:', response);\n              if (!response.success) {\n                console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, response.message);\n                throw new Error(response.message || 'Erro ao salvar pontuação');\n              }\n            } catch (error) {\n              console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, error);\n              throw error;\n            }\n          });\n          return function (_x2) {\n            return _ref9.apply(this, arguments);\n          };\n        }());\n        yield Promise.all(scorePromises);\n        if (!attendanceTaken) {\n          var attendances = students.map(function (student) {\n            return {\n              studentId: student.id,\n              isPresent: true\n            };\n          });\n          console.log('🔵 ClassScreen - Salvando presenças:', {\n            classId: classData.id,\n            attendances: attendances,\n            lessonDate: classData.date\n          });\n          try {\n            var attendanceResponse = yield apiService.saveBatchAttendance(classData.id, attendances, classData.date);\n            console.log('🔵 ClassScreen - Resposta da API de presença:', attendanceResponse);\n            if (!attendanceResponse.success) {\n              console.error('🔴 Erro ao salvar presenças:', attendanceResponse.message);\n            } else {\n              setAttendanceTaken(true);\n            }\n          } catch (error) {\n            console.error('🔴 Erro ao salvar presenças:', error);\n          }\n        } else {\n          console.log('🔵 ClassScreen - Chamada já realizada, não alterando presenças');\n        }\n        if (attendanceTaken) {\n          showSuccess('Sucesso! 🎉', `Pontuações salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n        } else {\n          showSuccess('Sucesso! 🎉', `Pontuações e presenças salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n        }\n        setSelectedStudents([]);\n        setBatchScore('');\n        setBatchNotes('');\n        setSelectedSportForScoring(null);\n        setShowScoringModal(false);\n        setAttendanceTaken(true);\n        loadStudents();\n      } catch (error) {\n        console.error('Erro ao salvar avaliações:', error);\n        showError('❌ Erro', 'Erro ao salvar avaliações');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleBatchSaveScores() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleSaveScore = function () {\n    var _ref0 = _asyncToGenerator(function* () {\n      try {\n        if (!selectedStudent || !selectedSport || !score) {\n          showError('❌ Erro', 'Preencha todos os campos obrigatórios');\n          return;\n        }\n        var scoreValue = parseInt(score);\n        if (scoreValue < 0 || scoreValue > 100) {\n          showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n          return;\n        }\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var response = yield apiService.saveClassScore(classData.classId, selectedStudent.id, selectedSport.id, scoreValue, notes.trim() || null);\n        if (response.success) {\n          showSuccess('Sucesso! 🎉', 'Pontuação salva com sucesso!');\n          setShowScoringModal(false);\n          setSelectedStudent(null);\n          setSelectedSport(null);\n          setScore('');\n          setNotes('');\n          loadStudents();\n        } else {\n          throw new Error(response.message || 'Erro ao salvar pontuação');\n        }\n      } catch (error) {\n        console.error('Erro ao salvar pontuação:', error);\n        showError('❌ Erro', error.message || 'Erro ao salvar pontuação');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSaveScore() {\n      return _ref0.apply(this, arguments);\n    };\n  }();\n  var renderWorkoutCard = function renderWorkoutCard(section) {\n    var isExpanded = expandedCard === section.id;\n    var animation = cardAnimations[section.id];\n    console.log('🔵 ClassScreen - Renderizando card:', section.id, 'animation:', !!animation);\n    if (!animation) {\n      console.log('🔴 ClassScreen - Usando fallback para card:', section.id);\n      return _jsxs(TouchableOpacity, {\n        style: [styles.workoutCard, isExpanded && styles.expandedCard],\n        onPress: function onPress() {\n          return setExpandedCard(isExpanded ? null : section.id);\n        },\n        children: [_jsxs(View, {\n          style: styles.cardHeader,\n          children: [_jsxs(View, {\n            style: styles.cardTitleContainer,\n            children: [_jsx(Text, {\n              style: styles.cardTitle,\n              children: section.title\n            }), _jsx(Text, {\n              style: styles.cardDuration,\n              children: section.duration\n            })]\n          }), _jsx(View, {\n            style: styles.expandIcon,\n            children: _jsx(Text, {\n              style: styles.expandIconText,\n              children: isExpanded ? '⌄' : '>'\n            })\n          })]\n        }), isExpanded && _jsx(View, {\n          style: styles.exercisesList,\n          children: section.exercises.map(function (exercise, index) {\n            return _jsx(View, {\n              style: styles.exerciseItem,\n              children: _jsxs(View, {\n                style: styles.exerciseInfo,\n                children: [_jsx(Text, {\n                  style: styles.exerciseName,\n                  children: exercise.name\n                }), _jsx(Text, {\n                  style: styles.exerciseReps,\n                  children: exercise.repetitions\n                })]\n              })\n            }, index);\n          })\n        })]\n      }, section.id);\n    }\n    return _jsxs(TouchableOpacity, {\n      style: [styles.workoutCard, isExpanded && styles.expandedCard],\n      onPress: function onPress() {\n        var newExpandedCard = isExpanded ? null : section.id;\n        setExpandedCard(newExpandedCard);\n        animateCard(section.id, !isExpanded);\n      },\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsxs(View, {\n          style: styles.cardTitleContainer,\n          children: [_jsx(Text, {\n            style: styles.cardTitle,\n            children: section.title\n          }), _jsx(Text, {\n            style: styles.cardDuration,\n            children: section.duration\n          })]\n        }), _jsx(View, {\n          style: styles.expandIcon,\n          children: _jsx(Animated.Text, {\n            style: [styles.expandIconText, {\n              transform: [{\n                rotate: animation.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: ['0deg', '90deg']\n                })\n              }]\n            }],\n            children: \">\"\n          })\n        })]\n      }), _jsx(Animated.View, {\n        style: [styles.exercisesList, {\n          opacity: animation,\n          maxHeight: animation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 200]\n          })\n        }],\n        children: section.exercises.map(function (exercise, index) {\n          return _jsx(View, {\n            style: styles.exerciseItem,\n            children: _jsxs(View, {\n              style: styles.exerciseInfo,\n              children: [_jsx(Text, {\n                style: styles.exerciseName,\n                children: exercise.name\n              }), _jsx(Text, {\n                style: styles.exerciseReps,\n                children: exercise.repetitions\n              })]\n            })\n          }, index);\n        })\n      })]\n    }, section.id);\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [(currentSport == null ? void 0 : currentSport.icon) && _jsx(View, {\n      style: styles.sportBackgroundContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: currentSport.icon\n        },\n        style: styles.sportBackgroundImage,\n        tintColor: currentSport.color || '#F9BB55',\n        resizeMode: \"contain\"\n      })\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsxs(View, {\n        style: styles.headerTop,\n        children: [_jsx(Text, {\n          style: styles.logo,\n          children: \"Muvz\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuLines,\n          onPress: function onPress() {\n            return setIsMenuVisible(true);\n          },\n          children: [_jsx(View, {\n            style: styles.menuLine\n          }), _jsx(View, {\n            style: styles.menuLine\n          }), _jsx(View, {\n            style: styles.menuLine\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"In\\xEDcio da Aula\"\n      }), _jsxs(Text, {\n        style: styles.subtitle,\n        children: [\"Vamos come\\xE7ar a aula da \", (classData == null ? void 0 : classData.grade) || 'turma', \"?\"]\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsxs(View, {\n        style: styles.classTitleContainer,\n        children: [(currentSport == null ? void 0 : currentSport.icon) && _jsx(Image, {\n          source: {\n            uri: currentSport.icon\n          },\n          style: styles.classTitleIcon,\n          tintColor: currentSport.color || '#F9BB55',\n          resizeMode: \"contain\"\n        }), _jsx(Text, {\n          style: styles.classTitle,\n          children: getDynamicClassTitle()\n        })]\n      }), _jsxs(Text, {\n        style: styles.classInfo,\n        children: [\"Dura\\xE7\\xE3o: \", getDynamicDuration(), \" \\u2022 Esse treino vale \", _jsxs(Text, {\n          style: styles.xpNumber,\n          children: [getDynamicXP(), \"xp\"]\n        }), \" para seus alunos\"]\n      })]\n    }), attendanceTaken && _jsx(View, {\n      style: styles.attendanceStatusContainer,\n      children: _jsx(Text, {\n        style: styles.attendanceStatusText,\n        children: \"\\u2705 Chamada realizada com sucesso!\"\n      })\n    }), _jsx(View, {\n      style: styles.workoutContainer,\n      children: workoutSections.map(renderWorkoutCard)\n    }), _jsxs(View, {\n      style: styles.actionButtonsContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.actionButton, styles.attendanceButton, attendanceTaken && styles.attendanceButtonCompleted],\n        onPress: function onPress() {\n          console.log('🔵 ClassScreen - Navegando para attendanceList com classData:', classData);\n          onNavigate('attendanceList', {\n            classData: classData\n          });\n        },\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.actionButtonText,\n          children: function () {\n            var text = attendanceTaken ? '✅ Chamada Realizada' : '📋 Lista de Presença';\n            console.log('🔵 ClassScreen - Botão Lista de Presença:', text, 'attendanceTaken:', attendanceTaken);\n            return text;\n          }()\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.actionButton, styles.scoringButton],\n        onPress: handleOpenScoring,\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.actionButtonText,\n          children: \"\\u2B50 Avaliar Alunos\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: [styles.completeButton, classCompleted && styles.completeButtonCompleted],\n      onPress: handleCompleteClass,\n      disabled: classCompleted || loading,\n      children: _jsx(Text, {\n        style: styles.completeButtonText,\n        children: classCompleted ? 'Aula Concluída' : 'Concluir Aula'\n      })\n    }), showCompletionModal && _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Concluir Aula\"\n        }), _jsx(Text, {\n          style: styles.modalMessage,\n          children: \"Tem certeza que deseja concluir esta aula? Esta a\\xE7\\xE3o n\\xE3o pode ser desfeita.\"\n        }), _jsxs(View, {\n          style: styles.modalButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, styles.cancelButton],\n            onPress: function onPress() {\n              return setShowCompletionModal(false);\n            },\n            children: _jsx(Text, {\n              style: styles.cancelButtonText,\n              children: \"Cancelar\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, styles.confirmButton],\n            onPress: confirmCompleteClass,\n            disabled: loading,\n            children: _jsx(Text, {\n              style: styles.confirmButtonText,\n              children: loading ? 'Concluindo...' : 'Confirmar'\n            })\n          })]\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: showScoringModal,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setShowScoringModal(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.scoringModalContent,\n          children: [_jsx(Text, {\n            style: styles.scoringModalTitle,\n            children: \"Avaliar Alunos e Presen\\xE7a\"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Alunos da Turma\"\n            }), _jsx(ScrollView, {\n              style: styles.studentList,\n              nestedScrollEnabled: true,\n              children: students.map(function (student) {\n                return _jsxs(View, {\n                  style: styles.studentRow,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.checkboxContainer,\n                    onPress: function onPress() {\n                      return toggleStudentSelection(student.id);\n                    },\n                    children: _jsx(View, {\n                      style: [styles.checkbox, selectedStudents.includes(student.id) && styles.checkboxChecked],\n                      children: selectedStudents.includes(student.id) && _jsx(Text, {\n                        style: styles.checkmark,\n                        children: \"\\u2713\"\n                      })\n                    })\n                  }), _jsxs(View, {\n                    style: styles.studentInfo,\n                    children: [_jsx(Text, {\n                      style: styles.studentName,\n                      children: student.name\n                    }), _jsx(Text, {\n                      style: styles.studentEmail,\n                      children: student.email\n                    })]\n                  })]\n                }, student.id);\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: isFreeClass() ? 'Esporte para Pontuação *' : 'Esporte da Aula'\n            }), isFreeClass() ? _jsxs(View, {\n              style: styles.sportSelectorContainer,\n              children: [_jsx(ScrollView, {\n                horizontal: true,\n                showsHorizontalScrollIndicator: false,\n                style: styles.sportSelectorScroll,\n                children: sports.filter(function (sport) {\n                  return sport.name !== 'Aula Livre';\n                }).map(function (sport) {\n                  return _jsx(TouchableOpacity, {\n                    style: [styles.sportSelectorCard, (selectedSportForScoring == null ? void 0 : selectedSportForScoring.id) === sport.id && styles.sportSelectorCardSelected],\n                    onPress: function onPress() {\n                      return setSelectedSportForScoring(sport);\n                    },\n                    children: _jsx(Text, {\n                      style: styles.sportSelectorText,\n                      children: sport.name\n                    })\n                  }, sport.id);\n                })\n              }), !selectedSportForScoring && _jsx(Text, {\n                style: styles.sportSelectorWarning,\n                children: \"\\u26A0\\uFE0F Selecione um esporte para continuar\"\n              })]\n            }) : _jsx(View, {\n              style: styles.sportDisplayContainer,\n              children: _jsxs(Text, {\n                style: styles.sportDisplayText,\n                children: [\"\\uD83C\\uDFC6 \", function (_classData$subject5) {\n                  var subjectParts = ((_classData$subject5 = classData.subject) == null ? void 0 : _classData$subject5.split(' - ')) || [];\n                  return subjectParts[0] || 'Esporte não definido';\n                }()]\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Pontua\\xE7\\xE3o (0-100) *\"\n            }), _jsx(TextInput, {\n              style: styles.scoreInput,\n              placeholder: \"Digite a pontua\\xE7\\xE3o\",\n              value: batchScore,\n              onChangeText: setBatchScore,\n              keyboardType: \"numeric\",\n              maxLength: 3\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Observa\\xE7\\xF5es\"\n            }), _jsx(TextInput, {\n              style: styles.notesInput,\n              placeholder: \"Observa\\xE7\\xF5es sobre o desempenho (opcional)\",\n              value: batchNotes,\n              onChangeText: setBatchNotes,\n              multiline: true,\n              numberOfLines: 3\n            })]\n          }), _jsxs(View, {\n            style: styles.summaryContainer,\n            children: [_jsxs(Text, {\n              style: styles.summaryText,\n              children: [\"\\uD83D\\uDCCA \", selectedStudents.length, \" aluno(s) selecionado(s) para avalia\\xE7\\xE3o\"]\n            }), _jsxs(Text, {\n              style: styles.summaryText,\n              children: [\"\\uD83C\\uDFC6 Esporte: \", isFreeClass() ? (selectedSportForScoring == null ? void 0 : selectedSportForScoring.name) || 'Não selecionado' : function (_classData$subject6) {\n                var subjectParts = ((_classData$subject6 = classData.subject) == null ? void 0 : _classData$subject6.split(' - ')) || [];\n                return subjectParts[0] || 'Não definido';\n              }()]\n            }), _jsx(Text, {\n              style: styles.summaryText,\n              children: \"\\uD83D\\uDCDD Presen\\xE7a ser\\xE1 salva para todos os alunos\"\n            })]\n          }), _jsxs(View, {\n            style: styles.scoringModalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.scoringModalButton, styles.cancelButton],\n              onPress: function onPress() {\n                setShowScoringModal(false);\n                setSelectedStudents([]);\n                setBatchScore('');\n                setBatchNotes('');\n                setSelectedSportForScoring(null);\n              },\n              children: _jsx(Text, {\n                style: styles.cancelButtonText,\n                children: \"Cancelar\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.scoringModalButton, styles.saveButton],\n              onPress: handleBatchSaveScores,\n              disabled: loading,\n              children: _jsx(Text, {\n                style: styles.saveButtonText,\n                children: loading ? 'Salvando...' : 'Salvar Tudo'\n              })\n            })]\n          })]\n        })\n      })\n    }), _jsx(SideMenu, {\n      isVisible: isMenuVisible,\n      onClose: function onClose() {\n        return setIsMenuVisible(false);\n      },\n      onNavigate: onNavigate,\n      currentUser: currentUser,\n      onLogout: onLogout,\n      userType: \"TEACHER\"\n    }), _jsx(CustomAlert, {\n      visible: alert.visible,\n      title: alert.title,\n      message: alert.message,\n      type: alert.type,\n      onClose: hideAlert\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EDED'\n  },\n  sportBackgroundContainer: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: width > 768 ? '50%' : '60%',\n    height: '35%',\n    zIndex: 0,\n    opacity: 0.06\n  },\n  sportBackgroundImage: {\n    width: '100%',\n    height: '100%'\n  },\n  header: {\n    padding: 20,\n    paddingTop: 40,\n    position: 'relative',\n    zIndex: 1\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  menuLines: {\n    flexDirection: 'column',\n    gap: 3\n  },\n  menuLine: {\n    width: 39,\n    height: 6,\n    backgroundColor: '#D9D9D9'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 10\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#000',\n    marginBottom: 20\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#000',\n    marginBottom: 20\n  },\n  classTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  classTitleIcon: {\n    width: width > 768 ? 48 : 40,\n    height: width > 768 ? 48 : 40,\n    marginRight: 12\n  },\n  classTitle: {\n    fontSize: width > 768 ? 36 : 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    textShadow: '1px 1px 2px rgba(0, 0, 0, 0.1)'\n  },\n  classInfo: {\n    fontSize: 18,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: '500',\n    lineHeight: 24\n  },\n  xpNumber: {\n    color: '#2FD4CD',\n    fontWeight: 'bold'\n  },\n  attendanceButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  attendanceButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000'\n  },\n  workoutContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  workoutCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: 15,\n    padding: 20,\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    elevation: 3\n  },\n  expandedCard: {\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\n    elevation: 5\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  cardTitleContainer: {\n    flex: 1\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5\n  },\n  cardDuration: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  expandIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 12,\n    minWidth: 40,\n    minHeight: 40\n  },\n  expandIconText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#F9BB55',\n    textAlign: 'center',\n    lineHeight: 32\n  },\n  exercisesList: {\n    marginTop: 15,\n    paddingTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n    overflow: 'hidden'\n  },\n  exerciseItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#F8F9FA',\n    borderRadius: 10,\n    marginBottom: 8\n  },\n  exerciseInfo: {\n    flex: 1\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 4\n  },\n  exerciseReps: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  completeButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 40,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  completeButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  completeButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000'\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 30,\n    marginHorizontal: 20,\n    maxWidth: 400,\n    width: '100%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  modalMessage: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 25,\n    lineHeight: 22\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  cancelButton: {\n    backgroundColor: '#E0E0E0'\n  },\n  confirmButton: {\n    backgroundColor: '#F9BB55'\n  },\n  cancelButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#666'\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000'\n  },\n  actionButtonsContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    marginBottom: 15,\n    gap: 10\n  },\n  actionButton: {\n    flex: 1,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  attendanceButton: {\n    backgroundColor: '#2196F3'\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  scoringButton: {\n    backgroundColor: '#F9BB55'\n  },\n  actionButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000'\n  },\n  scoringModalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    marginHorizontal: 10,\n    maxHeight: '90%',\n    width: '95%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8\n  },\n  scoringModalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  inputGroup: {\n    marginBottom: 15\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 6\n  },\n  studentList: {\n    maxHeight: 150,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8\n  },\n  studentItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0'\n  },\n  selectedStudentItem: {\n    backgroundColor: '#F9BB55'\n  },\n  studentName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333'\n  },\n  studentEmail: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 2\n  },\n  sportList: {\n    maxHeight: 100,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8\n  },\n  sportItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0'\n  },\n  selectedSportItem: {\n    backgroundColor: '#F9BB55'\n  },\n  sportName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333'\n  },\n  scoreInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff'\n  },\n  notesInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n    textAlignVertical: 'top',\n    minHeight: 60\n  },\n  scoringModalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 8\n  },\n  scoringModalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  saveButton: {\n    backgroundColor: '#4CAF50'\n  },\n  saveButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#fff'\n  },\n  studentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n    backgroundColor: '#fff'\n  },\n  checkboxContainer: {\n    marginRight: 8\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderWidth: 2,\n    borderColor: '#E0E0E0',\n    borderRadius: 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  checkboxChecked: {\n    backgroundColor: '#F9BB55',\n    borderColor: '#F9BB55'\n  },\n  checkmark: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  studentInfo: {\n    flex: 1\n  },\n  summaryContainer: {\n    backgroundColor: '#F8F9FA',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 12\n  },\n  summaryText: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 3,\n    fontFamily: 'Poppins'\n  },\n  sportDisplayContainer: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    alignItems: 'center'\n  },\n  sportDisplayText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1976D2',\n    textAlign: 'center'\n  },\n  attendanceStatusContainer: {\n    backgroundColor: '#E8F5E8',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 10,\n    borderLeftWidth: 4,\n    borderLeftColor: '#4CAF50'\n  },\n  attendanceStatusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2E7D32',\n    textAlign: 'center'\n  }\n});\nexport default ClassScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","Image","Dimensions","TextInput","Modal","Animated","CustomAlert","useCustomAlert","apiService","SideMenu","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","ClassScreen","_ref","_window$navigationPar","isMenuVisible","setIsMenuVisible","onNavigate","currentUser","onLogout","classData","window","navigationParams","_useState","_useState2","_slicedToArray","attendanceTaken","setAttendanceTaken","_useState3","_useState4","classCompleted","setClassCompleted","_useState5","_useState6","loading","setLoading","_useState7","_useState8","expandedCard","setExpandedCard","_useState9","_useState0","showCompletionModal","setShowCompletionModal","_useState1","_useState10","showScoringModal","setShowScoringModal","cardAnimations","aquecimento","Value","treino","alongamento","desaquecimento","current","_useState11","_useState12","students","setStudents","_useState13","_useState14","sports","setSports","_useState15","_useState16","currentSport","setCurrentSport","_useState17","_useState18","selectedStudent","setSelectedStudent","_useState19","_useState20","selectedSport","setSelectedSport","_useState21","_useState22","score","setScore","_useState23","_useState24","notes","setNotes","_useState25","_useState26","scoresData","setScoresData","_useState27","_useState28","selectedStudents","setSelectedStudents","_useState29","_useState30","batchScore","setBatchScore","_useState31","_useState32","batchNotes","setBatchNotes","_useState33","_useState34","selectedSportForScoring","setSelectedSportForScoring","_useCustomAlert","alert","showSuccess","showError","hideAlert","console","log","subject","loadStudents","loadSports","checkAttendanceStatus","length","identifyCurrentSport","subjectParts","split","sportName","sport","find","s","name","toLowerCase","isFreeClass","animateCard","cardId","isExpanding","animation","timing","toValue","duration","useNativeDriver","start","getDynamicClassTitle","_classData$subject","classType","getDynamicXP","_classData$subject2","toUpperCase","getDynamicDuration","_classData$subject3","_ref2","_asyncToGenerator","id","response","getClassAttendance","date","success","data","attendances","allAttendancesFromThisClass","every","attendance","teacherClassId","error","apply","arguments","_ref3","classId","getClassStudents","map","item","student","message","Array","isArray","_ref4","getSports","workoutSections","title","exercises","repetitions","handleTakeAttendance","_ref5","attendancePromises","_ref6","status","attendanceData","saveAttendance","studentId","isPresent","_x","Promise","all","handleCompleteClass","confirmCompleteClass","_ref7","Error","completeClass","handleOpenScoring","toggleStudentSelection","prev","includes","filter","concat","_toConsumableArray","handleBatchSaveScores","_ref8","scoreValue","parseInt","classSport","_classData$subject4","scorePromises","_ref9","sportId","trim","lessonDate","saveClassScore","_x2","attendanceResponse","saveBatchAttendance","handleSaveScore","_ref0","renderWorkoutCard","section","isExpanded","style","styles","workoutCard","onPress","children","cardHeader","cardTitleContainer","cardTitle","cardDuration","expandIcon","expandIconText","exercisesList","exercise","index","exerciseItem","exerciseInfo","exerciseName","exerciseReps","newExpandedCard","transform","rotate","interpolate","inputRange","outputRange","opacity","maxHeight","container","icon","sportBackgroundContainer","source","uri","sportBackgroundImage","tintColor","color","resizeMode","header","headerTop","logo","menuLines","menuLine","subtitle","grade","divider","classTitleContainer","classTitleIcon","classTitle","classInfo","xpNumber","attendanceStatusContainer","attendanceStatusText","workoutContainer","actionButtonsContainer","actionButton","attendanceButton","attendanceButtonCompleted","disabled","actionButtonText","text","scoringButton","completeButton","completeButtonCompleted","completeButtonText","modalOverlay","modalContent","modalTitle","modalMessage","modalButtons","modalButton","cancelButton","cancelButtonText","confirmButton","confirmButtonText","visible","animationType","transparent","onRequestClose","scoringModalContent","scoringModalTitle","inputGroup","inputLabel","studentList","nestedScrollEnabled","studentRow","checkboxContainer","checkbox","checkboxChecked","checkmark","studentInfo","studentName","studentEmail","email","sportSelectorContainer","horizontal","showsHorizontalScrollIndicator","sportSelectorScroll","sportSelectorCard","sportSelectorCardSelected","sportSelectorText","sportSelectorWarning","sportDisplayContainer","sportDisplayText","_classData$subject5","scoreInput","placeholder","value","onChangeText","keyboardType","maxLength","notesInput","multiline","numberOfLines","summaryContainer","summaryText","_classData$subject6","scoringModalButtons","scoringModalButton","saveButton","saveButtonText","isVisible","onClose","userType","type","create","flex","backgroundColor","position","top","right","height","zIndex","padding","paddingTop","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","gap","marginRight","textAlign","textShadow","lineHeight","marginHorizontal","paddingVertical","borderRadius","attendanceButtonText","paddingHorizontal","boxShadow","elevation","fontFamily","minWidth","minHeight","marginTop","borderTopWidth","borderTopColor","overflow","left","bottom","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderWidth","borderColor","studentItem","borderBottomWidth","borderBottomColor","selectedStudentItem","sportList","sportItem","selectedSportItem","textAlignVertical","borderLeftWidth","borderLeftColor"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/screens/teacher/ClassScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  Image,\n  Dimensions,\n  TextInput,\n  Modal,\n  Animated,\n} from 'react-native';\nimport CustomAlert from '../../components/CustomAlert';\nimport useCustomAlert from '../../hooks/useCustomAlert';\nimport apiService from '../../services/apiService';\nimport SideMenu from '../../components/SideMenu';\n\nconst { width } = Dimensions.get('window');\n\nconst ClassScreen = ({ isMenuVisible, setIsMenuVisible, onNavigate, currentUser, onLogout }) => {\n  // Usar parâmetros passados via navegação\n  const classData = window.navigationParams?.classData || {};\n  \n\n  const [attendanceTaken, setAttendanceTaken] = useState(false);\n  const [classCompleted, setClassCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [expandedCard, setExpandedCard] = useState('aquecimento');\n  const [showCompletionModal, setShowCompletionModal] = useState(false);\n  const [showScoringModal, setShowScoringModal] = useState(false);\n  \n  // Animações para os cards\n  const cardAnimations = useRef({\n    aquecimento: new Animated.Value(0),\n    treino: new Animated.Value(0),\n    alongamento: new Animated.Value(0),\n    desaquecimento: new Animated.Value(0), // CORREÇÃO: Adicionar animação para desaquecimento\n  }).current;\n  const [students, setStudents] = useState([]);\n  const [sports, setSports] = useState([]);\n  const [currentSport, setCurrentSport] = useState(null); // Esporte atual da aula\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [selectedSport, setSelectedSport] = useState(null);\n  const [score, setScore] = useState('');\n  const [notes, setNotes] = useState('');\n  const [scoresData, setScoresData] = useState({}); // { studentId: { sportId: { score, notes } } }\n  \n  // Estados para avaliação em lote\n  const [selectedStudents, setSelectedStudents] = useState([]); // Array de IDs dos alunos selecionados\n  const [batchScore, setBatchScore] = useState('');\n  const [batchNotes, setBatchNotes] = useState('');\n  const [selectedSportForScoring, setSelectedSportForScoring] = useState(null); // Esporte específico para pontuação\n  const { alert, showSuccess, showError, hideAlert } = useCustomAlert();\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    console.log('🔵 ClassScreen - classData recebido:', classData);\n    console.log('🔵 ClassScreen - subject:', classData.subject);\n    loadStudents();\n    loadSports();\n    checkAttendanceStatus(); // Verificar se chamada já foi realizada\n  }, []);\n\n  // Identificar esporte atual quando sports carregarem\n  useEffect(() => {\n    if (sports.length > 0 && classData.subject) {\n      identifyCurrentSport();\n    }\n  }, [sports, classData.subject]);\n\n  // Função para identificar o esporte atual da aula\n  const identifyCurrentSport = () => {\n    if (!classData.subject || sports.length === 0) return;\n    \n    // Extrair nome do esporte do subject (formato: \"Nome do Esporte - Tipo da Aula\")\n    const subjectParts = classData.subject.split(' - ');\n    const sportName = subjectParts[0];\n    \n    // Encontrar o esporte correspondente\n    const sport = sports.find(s => \n      s.name.toLowerCase() === sportName.toLowerCase()\n    );\n    \n    if (sport) {\n      console.log('🔵 ClassScreen - Esporte identificado:', sport);\n      setCurrentSport(sport);\n    } else {\n      console.log('🔴 ClassScreen - Esporte não encontrado:', sportName);\n    }\n  };\n\n  // Função para verificar se é \"Aula Livre\"\n  const isFreeClass = () => {\n    if (!classData.subject) return false;\n    const subjectParts = classData.subject.split(' - ');\n    const sportName = subjectParts[0];\n    return sportName === 'Aula Livre';\n  };\n\n  // Função para animar os cards\n  const animateCard = (cardId, isExpanding) => {\n    const animation = cardAnimations[cardId];\n    if (!animation) {\n      console.log('🔴 ClassScreen - Animação não encontrada para cardId:', cardId);\n      return;\n    }\n\n    console.log('🔵 ClassScreen - Animando card:', cardId, 'isExpanding:', isExpanding);\n    \n    Animated.timing(animation, {\n      toValue: isExpanding ? 1 : 0,\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  // Funções para informações dinâmicas baseadas no esporte\n  const getDynamicClassTitle = () => {\n    if (!currentSport) return 'Treino de Vôlei'; // Fallback\n    \n    const subjectParts = classData.subject?.split(' - ') || [];\n    const classType = subjectParts[1] || 'TREINO';\n    \n    return `${currentSport.name} - ${classType}`;\n  };\n\n  const getDynamicXP = () => {\n    if (!currentSport) return 60; // Fallback\n    \n    // XP baseado no tipo de aula\n    const subjectParts = classData.subject?.split(' - ') || [];\n    const classType = subjectParts[1] || 'TREINO';\n    \n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return 20;\n      case 'TREINO':\n        return 60;\n      case 'PRATICA':\n        return 80;\n      case 'COMPETICAO':\n        return 100;\n      default:\n        return 60;\n    }\n  };\n\n  const getDynamicDuration = () => {\n    if (!currentSport) return '60min'; // Fallback\n    \n    const subjectParts = classData.subject?.split(' - ') || [];\n    const classType = subjectParts[1] || 'TREINO';\n    \n    switch (classType.toUpperCase()) {\n      case 'AQUECIMENTO':\n        return '30min';\n      case 'TREINO':\n        return '60min';\n      case 'PRATICA':\n        return '90min';\n      case 'COMPETICAO':\n        return '120min';\n      default:\n        return '60min';\n    }\n  };\n\n  // Verificar se a chamada já foi realizada\n  const checkAttendanceStatus = async () => {\n    if (!classData?.id) return;\n    \n    try {\n      console.log('🔵 ClassScreen - Verificando status da chamada para aula:', classData.id);\n      const response = await apiService.getClassAttendance(classData.id, classData.date);\n      \n      // CORREÇÃO: Verificar se as presenças são da aula específica\n      // A API retorna presenças da turma na data, mas precisamos verificar se são da aula específica\n      if (response.success && response.data.attendances && response.data.attendances.length > 0) {\n        // Verificar se todas as presenças são da aula específica (teacherClass.id)\n        const allAttendancesFromThisClass = response.data.attendances.every(attendance => \n          attendance.teacherClassId === classData.id\n        );\n        \n        if (allAttendancesFromThisClass) {\n          console.log('🔵 ClassScreen - Chamada já foi realizada para esta aula específica');\n          setAttendanceTaken(true);\n        } else {\n          console.log('🔵 ClassScreen - Presenças encontradas são de outras aulas da mesma turma');\n          setAttendanceTaken(false);\n        }\n      } else {\n        console.log('🔵 ClassScreen - Chamada ainda não foi realizada');\n        setAttendanceTaken(false);\n      }\n    } catch (error) {\n      console.error('🔴 ClassScreen - Erro ao verificar status da chamada:', error);\n      setAttendanceTaken(false);\n    }\n  };\n\n  const loadStudents = async () => {\n    try {\n      console.log('🔵 Carregando alunos para a aula:', classData);\n      console.log('🔵 classData.classId:', classData.classId);\n      console.log('🔵 classData.id:', classData.id);\n      \n      // Se a aula tem classId (ID da turma), buscar alunos da turma\n      if (classData.classId) {\n        console.log('🔵 Buscando alunos da turma:', classData.classId);\n        const response = await apiService.getClassStudents(classData.classId);\n        console.log('🔵 Resposta da API getClassStudents:', response);\n        if (response.success) {\n          const students = response.data.map(item => item.student);\n          console.log(`🔵 ${students.length} alunos encontrados na turma:`, students.map(s => s.name));\n          setStudents(students);\n        } else {\n          console.error('❌ Erro ao buscar alunos da turma:', response.message);\n        }\n      } else {\n        console.log('🔵 Aula sem turma associada, usando alunos passados via navegação');\n        // Usar alunos passados via navegação (fallback)\n        if (classData.students && Array.isArray(classData.students)) {\n          console.log('🔵 Usando alunos passados via navegação:', classData.students.length);\n          setStudents(classData.students);\n        } else {\n          console.log('🔵 Nenhum aluno encontrado');\n          setStudents([]);\n        }\n      }\n    } catch (error) {\n      console.error('❌ Erro ao carregar alunos:', error);\n    }\n  };\n\n  const loadSports = async () => {\n    try {\n      const response = await apiService.getSports();\n      if (response.success) {\n        setSports(response.data.sports || []);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar esportes:', error);\n    }\n  };\n\n  // Dados de exemplo dos exercícios (em produção viria da API)\n  const workoutSections = [\n    {\n      id: 'aquecimento',\n      title: 'Aquecimento',\n      duration: '7min',\n      exercises: [\n        { name: 'Corrida Leve', repetitions: '5 minutos' },\n        { name: 'Alongamento Dinâmico', repetitions: '2 minutos' },\n        { name: 'Aquecimento Articular', repetitions: '1 série' },\n      ],\n    },\n    {\n      id: 'treino',\n      title: 'Treino',\n      duration: '30min',\n      exercises: [\n        { name: 'Saque', repetitions: '20 repetições' },\n        { name: 'Recepção', repetitions: '20 repetições' },\n        { name: 'Levantamento', repetitions: '20 repetições' },\n        { name: 'Ataque', repetitions: '20 repetições' },\n        { name: 'Bloqueio', repetitions: '20 repetições' },\n        { name: 'Defesa', repetitions: '20 repetições' },\n      ],\n    },\n    {\n      id: 'desaquecimento',\n      title: 'Desaquecimento',\n      duration: '8min',\n      exercises: [\n        { name: 'Alongamento Final', repetitions: '5 minutos' },\n        { name: 'Relaxamento', repetitions: '3 minutos' },\n      ],\n    },\n  ];\n\n  const handleTakeAttendance = async () => {\n    try {\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n\n      // Salvar presença de todos os alunos\n      const attendancePromises = students.map(async (student) => {\n        const status = attendanceData[student.id] || 'present'; // Default: presente\n        \n        try {\n          const response = await apiService.saveAttendance(classData.classId, {\n            studentId: student.id,\n            isPresent: status === 'present',\n            date: classData.date\n          });\n          \n          if (!response.success) {\n            console.error(`Erro ao salvar presença do aluno ${student.name}:`, response.message);\n          }\n        } catch (error) {\n          console.error(`Erro ao salvar presença do aluno ${student.name}:`, error);\n        }\n      });\n\n      await Promise.all(attendancePromises);\n      \n      setAttendanceTaken(true);\n      showSuccess('Sucesso! 🎉', 'Chamada realizada com sucesso!');\n    } catch (error) {\n      showError('❌ Erro', 'Erro ao realizar a chamada');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCompleteClass = () => {\n    setShowCompletionModal(true);\n  };\n\n  const confirmCompleteClass = async () => {\n    try {\n      setLoading(true);\n      \n      console.log('🔵 ClassData:', classData);\n      console.log('🔵 Class ID:', classData.id);\n      \n      if (!classData.id) {\n        throw new Error('ID da aula não encontrado');\n      }\n      \n      // Chamar API para marcar aula como concluída\n      const response = await apiService.completeClass(classData.id, true);\n      \n      if (response.success) {\n        setClassCompleted(true);\n        setShowCompletionModal(false);\n        \n        // Marcar que a aula foi concluída nos parâmetros de navegação\n        if (window.navigationParams) {\n          window.navigationParams.classCompleted = true;\n        }\n        \n        showSuccess('Sucesso! 🎉', 'Aula concluída com sucesso!');\n        \n        // Navegar de volta para a lista de aulas\n        onNavigate('teacherClasses');\n      } else {\n        throw new Error(response.message || 'Erro ao concluir a aula');\n      }\n    } catch (error) {\n      console.error('Erro ao concluir aula:', error);\n      showError('❌ Erro', error.message || 'Erro ao concluir a aula');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpenScoring = () => {\n    setShowScoringModal(true);\n  };\n\n  // Funções para avaliação em lote\n  const toggleStudentSelection = (studentId) => {\n    setSelectedStudents(prev => \n      prev.includes(studentId) \n        ? prev.filter(id => id !== studentId)\n        : [...prev, studentId]\n    );\n  };\n\n\n  const handleBatchSaveScores = async () => {\n    try {\n      if (selectedStudents.length === 0) {\n        showError('❌ Erro', 'Selecione pelo menos um aluno');\n        return;\n      }\n\n      if (!batchScore) {\n        showError('❌ Erro', 'Digite uma pontuação');\n        return;\n      }\n\n      const scoreValue = parseInt(batchScore);\n      if (scoreValue < 0 || scoreValue > 100) {\n        showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n        return;\n      }\n\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n\n      // Determinar o esporte para pontuação\n      let classSport;\n      \n      if (isFreeClass()) {\n        // Para \"Aula Livre\", usar o esporte selecionado pelo professor\n        if (!selectedSportForScoring) {\n          showError('❌ Erro', 'Selecione um esporte para continuar');\n          return;\n        }\n        classSport = selectedSportForScoring;\n        console.log('🔵 ClassScreen - Usando esporte selecionado para \"Aula Livre\":', classSport.name);\n      } else {\n        // Para outros esportes, usar o esporte da aula automaticamente\n        const subjectParts = classData.subject?.split(' - ') || [];\n        const sportName = subjectParts[0]; // Primeira parte é o nome do esporte\n        \n        classSport = sports.find(sport => \n          sport.name.toLowerCase() === sportName?.toLowerCase()\n        );\n\n        if (!classSport) {\n          showError('❌ Erro', `Esporte \"${sportName}\" da aula não encontrado`);\n          return;\n        }\n        console.log('🔵 ClassScreen - Usando esporte da aula:', classSport.name);\n      }\n\n      // Salvar pontuação para todos os alunos selecionados\n      const scorePromises = selectedStudents.map(async (studentId) => {\n        try {\n          console.log('🔵 ClassScreen - Salvando pontuação:', {\n            classId: classData.classId,\n            studentId,\n            sportId: classSport.id,\n            score: scoreValue,\n            notes: batchNotes.trim() || null,\n            lessonDate: classData.date\n          });\n          \n          const response = await apiService.saveClassScore(\n            classData.classId,\n            studentId,\n            classSport.id,\n            scoreValue,\n            batchNotes.trim() || null,\n            classData.date\n          );\n          \n          console.log('🔵 ClassScreen - Resposta da API:', response);\n          \n          if (!response.success) {\n            console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, response.message);\n            throw new Error(response.message || 'Erro ao salvar pontuação');\n          }\n        } catch (error) {\n          console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, error);\n          throw error;\n        }\n      });\n\n      await Promise.all(scorePromises);\n\n      // CORREÇÃO: Só salvar presenças se a chamada ainda não foi realizada\n      if (!attendanceTaken) {\n        // Salvar presença de todos os alunos usando a nova API em lote\n        const attendances = students.map(student => ({\n          studentId: student.id,\n          isPresent: true // Por padrão, todos presentes quando há pontuação\n        }));\n\n        console.log('🔵 ClassScreen - Salvando presenças:', {\n          classId: classData.id, // ← CORREÇÃO: Usar ID da aula específica\n          attendances,\n          lessonDate: classData.date\n        });\n\n        try {\n          const attendanceResponse = await apiService.saveBatchAttendance(\n            classData.id, // ← CORREÇÃO: Usar ID da aula específica\n            attendances, \n            classData.date\n          );\n          \n          console.log('🔵 ClassScreen - Resposta da API de presença:', attendanceResponse);\n          \n          if (!attendanceResponse.success) {\n            console.error('🔴 Erro ao salvar presenças:', attendanceResponse.message);\n          } else {\n            setAttendanceTaken(true); // Marcar chamada como realizada\n          }\n        } catch (error) {\n          console.error('🔴 Erro ao salvar presenças:', error);\n        }\n      } else {\n        console.log('🔵 ClassScreen - Chamada já realizada, não alterando presenças');\n      }\n\n      if (attendanceTaken) {\n        showSuccess('Sucesso! 🎉', `Pontuações salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n      } else {\n        showSuccess('Sucesso! 🎉', `Pontuações e presenças salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n      }\n      \n      // Limpar estados\n      setSelectedStudents([]);\n      setBatchScore('');\n      setBatchNotes('');\n      setSelectedSportForScoring(null); // Limpar seleção de esporte\n      setShowScoringModal(false);\n      setAttendanceTaken(true);\n      \n      loadStudents(); // Recarregar dados\n    } catch (error) {\n      console.error('Erro ao salvar avaliações:', error);\n      showError('❌ Erro', 'Erro ao salvar avaliações');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveScore = async () => {\n    try {\n      if (!selectedStudent || !selectedSport || !score) {\n        showError('❌ Erro', 'Preencha todos os campos obrigatórios');\n        return;\n      }\n\n      const scoreValue = parseInt(score);\n      if (scoreValue < 0 || scoreValue > 100) {\n        showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n        return;\n      }\n\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n      \n      const response = await apiService.saveClassScore(\n        classData.classId,\n        selectedStudent.id,\n        selectedSport.id,\n        scoreValue,\n        notes.trim() || null\n      );\n\n      if (response.success) {\n        showSuccess('Sucesso! 🎉', 'Pontuação salva com sucesso!');\n        setShowScoringModal(false);\n        setSelectedStudent(null);\n        setSelectedSport(null);\n        setScore('');\n        setNotes('');\n        loadStudents(); // Recarregar dados\n      } else {\n        throw new Error(response.message || 'Erro ao salvar pontuação');\n      }\n    } catch (error) {\n      console.error('Erro ao salvar pontuação:', error);\n      showError('❌ Erro', error.message || 'Erro ao salvar pontuação');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderWorkoutCard = (section) => {\n    const isExpanded = expandedCard === section.id;\n    const animation = cardAnimations[section.id];\n    \n    console.log('🔵 ClassScreen - Renderizando card:', section.id, 'animation:', !!animation);\n    \n    // Verificação de segurança para a animação\n    if (!animation) {\n      console.log('🔴 ClassScreen - Usando fallback para card:', section.id);\n      return (\n        <TouchableOpacity\n          key={section.id}\n          style={[\n            styles.workoutCard,\n            isExpanded && styles.expandedCard\n          ]}\n          onPress={() => setExpandedCard(isExpanded ? null : section.id)}\n        >\n          <View style={styles.cardHeader}>\n            <View style={styles.cardTitleContainer}>\n              <Text style={styles.cardTitle}>{section.title}</Text>\n              <Text style={styles.cardDuration}>{section.duration}</Text>\n            </View>\n            <View style={styles.expandIcon}>\n              <Text style={styles.expandIconText}>\n                {isExpanded ? '⌄' : '>'}\n              </Text>\n            </View>\n          </View>\n          \n          {isExpanded && (\n            <View style={styles.exercisesList}>\n              {section.exercises.map((exercise, index) => (\n                <View key={index} style={styles.exerciseItem}>\n                  <View style={styles.exerciseInfo}>\n                    <Text style={styles.exerciseName}>{exercise.name}</Text>\n                    <Text style={styles.exerciseReps}>{exercise.repetitions}</Text>\n                  </View>\n                </View>\n              ))}\n            </View>\n          )}\n        </TouchableOpacity>\n      );\n    }\n    \n    return (\n      <TouchableOpacity\n        key={section.id}\n        style={[\n          styles.workoutCard,\n          isExpanded && styles.expandedCard\n        ]}\n        onPress={() => {\n          const newExpandedCard = isExpanded ? null : section.id;\n          setExpandedCard(newExpandedCard);\n          animateCard(section.id, !isExpanded);\n        }}\n      >\n        <View style={styles.cardHeader}>\n          <View style={styles.cardTitleContainer}>\n            <Text style={styles.cardTitle}>{section.title}</Text>\n            <Text style={styles.cardDuration}>{section.duration}</Text>\n          </View>\n          <View style={styles.expandIcon}>\n            <Animated.Text \n              style={[\n                styles.expandIconText,\n                {\n                  transform: [{\n                    rotate: animation.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: ['0deg', '90deg']\n                    })\n                  }]\n                }\n              ]}\n            >\n              >\n            </Animated.Text>\n          </View>\n        </View>\n        \n        <Animated.View \n          style={[\n            styles.exercisesList,\n            {\n              opacity: animation,\n              maxHeight: animation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, 200]\n              })\n            }\n          ]}\n        >\n          {section.exercises.map((exercise, index) => (\n            <View key={index} style={styles.exerciseItem}>\n              <View style={styles.exerciseInfo}>\n                <Text style={styles.exerciseName}>{exercise.name}</Text>\n                <Text style={styles.exerciseReps}>{exercise.repetitions}</Text>\n              </View>\n            </View>\n          ))}\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* Background com imagem do esporte */}\n      {currentSport?.icon && (\n        <View style={styles.sportBackgroundContainer}>\n          <Image \n            source={{ uri: currentSport.icon }} \n            style={styles.sportBackgroundImage}\n            tintColor={currentSport.color || '#F9BB55'}\n            resizeMode=\"contain\"\n          />\n        </View>\n      )}\n      \n      {/* Header */}\n      <View style={styles.header}>\n        <View style={styles.headerTop}>\n          <Text style={styles.logo}>Muvz</Text>\n          <TouchableOpacity \n            style={styles.menuLines}\n            onPress={() => setIsMenuVisible(true)}\n          >\n            <View style={styles.menuLine} />\n            <View style={styles.menuLine} />\n            <View style={styles.menuLine} />\n          </TouchableOpacity>\n        </View>\n        \n        <Text style={styles.title}>Início da Aula</Text>\n        <Text style={styles.subtitle}>\n          Vamos começar a aula da {classData?.grade || 'turma'}?\n        </Text>\n        \n        <View style={styles.divider} />\n        \n        <View style={styles.classTitleContainer}>\n          {currentSport?.icon && (\n            <Image \n              source={{ uri: currentSport.icon }} \n            style={styles.classTitleIcon}\n            tintColor={currentSport.color || '#F9BB55'}\n              resizeMode=\"contain\"\n            />\n          )}\n          <Text style={styles.classTitle}>{getDynamicClassTitle()}</Text>\n        </View>\n        <Text style={styles.classInfo}>\n          Duração: {getDynamicDuration()} • Esse treino vale <Text style={styles.xpNumber}>{getDynamicXP()}xp</Text> para seus alunos\n        </Text>\n      </View>\n\n      {/* Status da Chamada */}\n      {attendanceTaken && (\n        <View style={styles.attendanceStatusContainer}>\n          <Text style={styles.attendanceStatusText}>✅ Chamada realizada com sucesso!</Text>\n        </View>\n      )}\n\n      {/* Seções de Exercícios */}\n      <View style={styles.workoutContainer}>\n        {workoutSections.map(renderWorkoutCard)}\n      </View>\n\n      {/* Botões de Ação */}\n      <View style={styles.actionButtonsContainer}>\n        {/* Botão de Lista de Presença */}\n        <TouchableOpacity \n          style={[\n            styles.actionButton, \n            styles.attendanceButton,\n            attendanceTaken && styles.attendanceButtonCompleted\n          ]}\n          onPress={() => {\n            console.log('🔵 ClassScreen - Navegando para attendanceList com classData:', classData);\n            onNavigate('attendanceList', { classData });\n          }}\n          disabled={loading}\n        >\n          <Text style={styles.actionButtonText}>\n            {(() => {\n              const text = attendanceTaken ? '✅ Chamada Realizada' : '📋 Lista de Presença';\n              console.log('🔵 ClassScreen - Botão Lista de Presença:', text, 'attendanceTaken:', attendanceTaken);\n              return text;\n            })()}\n          </Text>\n        </TouchableOpacity>\n\n        {/* Botão de Pontuação */}\n        <TouchableOpacity \n          style={[styles.actionButton, styles.scoringButton]}\n          onPress={handleOpenScoring}\n          disabled={loading}\n        >\n          <Text style={styles.actionButtonText}>⭐ Avaliar Alunos</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Botão de Conclusão */}\n      <TouchableOpacity \n        style={[styles.completeButton, classCompleted && styles.completeButtonCompleted]}\n        onPress={handleCompleteClass}\n        disabled={classCompleted || loading}\n      >\n        <Text style={styles.completeButtonText}>\n          {classCompleted ? 'Aula Concluída' : 'Concluir Aula'}\n        </Text>\n      </TouchableOpacity>\n\n      {/* Modal de Confirmação de Conclusão */}\n      {showCompletionModal && (\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Concluir Aula</Text>\n            <Text style={styles.modalMessage}>\n              Tem certeza que deseja concluir esta aula? Esta ação não pode ser desfeita.\n            </Text>\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setShowCompletionModal(false)}\n              >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.confirmButton]}\n                onPress={confirmCompleteClass}\n                disabled={loading}\n              >\n                <Text style={styles.confirmButtonText}>\n                  {loading ? 'Concluindo...' : 'Confirmar'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      )}\n\n      {/* Modal de Avaliação Completa */}\n      <Modal\n        visible={showScoringModal}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={() => setShowScoringModal(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.scoringModalContent}>\n            <Text style={styles.scoringModalTitle}>Avaliar Alunos e Presença</Text>\n            \n            {/* Lista de Alunos com Seleção e Presença */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Alunos da Turma</Text>\n              <ScrollView style={styles.studentList} nestedScrollEnabled>\n                {students.map((student) => (\n                  <View key={student.id} style={styles.studentRow}>\n                    {/* Checkbox para seleção */}\n                    <TouchableOpacity\n                      style={styles.checkboxContainer}\n                      onPress={() => toggleStudentSelection(student.id)}\n                    >\n                      <View style={[\n                        styles.checkbox,\n                        selectedStudents.includes(student.id) && styles.checkboxChecked\n                      ]}>\n                        {selectedStudents.includes(student.id) && (\n                          <Text style={styles.checkmark}>✓</Text>\n                        )}\n                      </View>\n                    </TouchableOpacity>\n                    \n                    {/* Informações do aluno */}\n                    <View style={styles.studentInfo}>\n                      <Text style={styles.studentName}>{student.name}</Text>\n                      <Text style={styles.studentEmail}>{student.email}</Text>\n                    </View>\n                    \n                    {/* Toggle de presença */}\n                  </View>\n                ))}\n              </ScrollView>\n            </View>\n\n            {/* Esporte da Aula */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>\n                {isFreeClass() ? 'Esporte para Pontuação *' : 'Esporte da Aula'}\n              </Text>\n              {isFreeClass() ? (\n                <View style={styles.sportSelectorContainer}>\n                  <ScrollView \n                    horizontal \n                    showsHorizontalScrollIndicator={false}\n                    style={styles.sportSelectorScroll}\n                  >\n                    {sports.filter(sport => sport.name !== 'Aula Livre').map((sport) => (\n                      <TouchableOpacity\n                        key={sport.id}\n                        style={[\n                          styles.sportSelectorCard,\n                          selectedSportForScoring?.id === sport.id && styles.sportSelectorCardSelected\n                        ]}\n                        onPress={() => setSelectedSportForScoring(sport)}\n                      >\n                        <Text style={styles.sportSelectorText}>{sport.name}</Text>\n                      </TouchableOpacity>\n                    ))}\n                  </ScrollView>\n                  {!selectedSportForScoring && (\n                    <Text style={styles.sportSelectorWarning}>\n                      ⚠️ Selecione um esporte para continuar\n                    </Text>\n                  )}\n                </View>\n              ) : (\n                <View style={styles.sportDisplayContainer}>\n                  <Text style={styles.sportDisplayText}>\n                    🏆 {(() => {\n                      const subjectParts = classData.subject?.split(' - ') || [];\n                      return subjectParts[0] || 'Esporte não definido';\n                    })()}\n                  </Text>\n                </View>\n              )}\n            </View>\n\n            {/* Pontuação */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Pontuação (0-100) *</Text>\n              <TextInput\n                style={styles.scoreInput}\n                placeholder=\"Digite a pontuação\"\n                value={batchScore}\n                onChangeText={setBatchScore}\n                keyboardType=\"numeric\"\n                maxLength={3}\n              />\n            </View>\n\n            {/* Observações */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Observações</Text>\n              <TextInput\n                style={styles.notesInput}\n                placeholder=\"Observações sobre o desempenho (opcional)\"\n                value={batchNotes}\n                onChangeText={setBatchNotes}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            {/* Resumo */}\n            <View style={styles.summaryContainer}>\n              <Text style={styles.summaryText}>\n                📊 {selectedStudents.length} aluno(s) selecionado(s) para avaliação\n              </Text>\n              <Text style={styles.summaryText}>\n                🏆 Esporte: {isFreeClass() \n                  ? (selectedSportForScoring?.name || 'Não selecionado')\n                  : (() => {\n                      const subjectParts = classData.subject?.split(' - ') || [];\n                      return subjectParts[0] || 'Não definido';\n                    })()\n                }\n              </Text>\n              <Text style={styles.summaryText}>\n                📝 Presença será salva para todos os alunos\n              </Text>\n            </View>\n\n            {/* Botões */}\n            <View style={styles.scoringModalButtons}>\n              <TouchableOpacity\n                style={[styles.scoringModalButton, styles.cancelButton]}\n                onPress={() => {\n                  setShowScoringModal(false);\n                  setSelectedStudents([]);\n                  setBatchScore('');\n                  setBatchNotes('');\n                  setSelectedSportForScoring(null);\n                }}\n              >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.scoringModalButton, styles.saveButton]}\n                onPress={handleBatchSaveScores}\n                disabled={loading}\n              >\n                <Text style={styles.saveButtonText}>\n                  {loading ? 'Salvando...' : 'Salvar Tudo'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n      \n      <SideMenu \n        isVisible={isMenuVisible} \n        onClose={() => setIsMenuVisible(false)} \n        onNavigate={onNavigate}\n        currentUser={currentUser}\n        onLogout={onLogout}\n        userType=\"TEACHER\"\n      />\n      \n      <CustomAlert\n        visible={alert.visible}\n        title={alert.title}\n        message={alert.message}\n        type={alert.type}\n        onClose={hideAlert}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EDED',\n  },\n  sportBackgroundContainer: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: width > 768 ? '50%' : '60%', // Responsivo para desktop/tablet\n    height: '35%',\n    zIndex: 0,\n    opacity: 0.06,\n  },\n  sportBackgroundImage: {\n    width: '100%',\n    height: '100%',\n  },\n  header: {\n    padding: 20,\n    paddingTop: 40,\n    position: 'relative',\n    zIndex: 1,\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  menuLines: {\n    flexDirection: 'column',\n    gap: 3,\n  },\n  menuLine: {\n    width: 39,\n    height: 6,\n    backgroundColor: '#D9D9D9',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 10,\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#000',\n    marginBottom: 20,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#000',\n    marginBottom: 20,\n  },\n  classTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 10,\n  },\n  classTitleIcon: {\n    width: width > 768 ? 48 : 40, // Responsivo\n    height: width > 768 ? 48 : 40,\n    marginRight: 12,\n  },\n  classTitle: {\n    fontSize: width > 768 ? 36 : 32, // Responsivo\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    textShadow: '1px 1px 2px rgba(0, 0, 0, 0.1)',\n  },\n  classInfo: {\n    fontSize: 18,\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: '500',\n    lineHeight: 24,\n  },\n  xpNumber: {\n    color: '#2FD4CD',\n    fontWeight: 'bold',\n  },\n  attendanceButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50',\n  },\n  attendanceButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n  },\n  workoutContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 20,\n  },\n  workoutCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: 15,\n    padding: 20,\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    elevation: 3,\n  },\n  expandedCard: {\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\n    elevation: 5,\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  cardTitleContainer: {\n    flex: 1,\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5,\n  },\n  cardDuration: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n  },\n  expandIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 12,\n    minWidth: 40,\n    minHeight: 40,\n  },\n  expandIconText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#F9BB55',\n    textAlign: 'center',\n    lineHeight: 32,\n  },\n  exercisesList: {\n    marginTop: 15,\n    paddingTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n    overflow: 'hidden',\n  },\n  exerciseItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#F8F9FA',\n    borderRadius: 10,\n    marginBottom: 8,\n  },\n  exerciseInfo: {\n    flex: 1,\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 4,\n  },\n  exerciseReps: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n  },\n  completeButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 40,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  completeButtonCompleted: {\n    backgroundColor: '#4CAF50',\n  },\n  completeButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 30,\n    marginHorizontal: 20,\n    maxWidth: 400,\n    width: '100%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8,\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  modalMessage: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 25,\n    lineHeight: 22,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15,\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  cancelButton: {\n    backgroundColor: '#E0E0E0',\n  },\n  confirmButton: {\n    backgroundColor: '#F9BB55',\n  },\n  cancelButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#666',\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n  },\n  // Estilos dos botões de ação\n  actionButtonsContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    marginBottom: 15,\n    gap: 10,\n  },\n  actionButton: {\n    flex: 1,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  attendanceButton: {\n    backgroundColor: '#2196F3',\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50', // Verde para indicar que foi realizada\n  },\n  scoringButton: {\n    backgroundColor: '#F9BB55',\n  },\n  actionButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n  },\n  scoringModalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    marginHorizontal: 10,\n    maxHeight: '90%',\n    width: '95%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8,\n  },\n  scoringModalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  inputGroup: {\n    marginBottom: 15,\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 6,\n  },\n  studentList: {\n    maxHeight: 150,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n  },\n  studentItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n  },\n  selectedStudentItem: {\n    backgroundColor: '#F9BB55',\n  },\n  studentName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n  },\n  studentEmail: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 2,\n  },\n  sportList: {\n    maxHeight: 100,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n  },\n  sportItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n  },\n  selectedSportItem: {\n    backgroundColor: '#F9BB55',\n  },\n  sportName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n  },\n  scoreInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n  },\n  notesInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n    textAlignVertical: 'top',\n    minHeight: 60,\n  },\n  scoringModalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 8,\n  },\n  scoringModalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  saveButton: {\n    backgroundColor: '#4CAF50',\n  },\n  saveButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#fff',\n  },\n  // Novos estilos para avaliação em lote\n  studentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n    backgroundColor: '#fff',\n  },\n  checkboxContainer: {\n    marginRight: 8,\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderWidth: 2,\n    borderColor: '#E0E0E0',\n    borderRadius: 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  checkboxChecked: {\n    backgroundColor: '#F9BB55',\n    borderColor: '#F9BB55',\n  },\n  checkmark: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  studentInfo: {\n    flex: 1,\n  },\n  summaryContainer: {\n    backgroundColor: '#F8F9FA',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 12,\n  },\n  summaryText: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 3,\n    fontFamily: 'Poppins',\n  },\n  sportDisplayContainer: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    alignItems: 'center',\n  },\n  sportDisplayText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1976D2',\n    textAlign: 'center',\n  },\n  attendanceStatusContainer: {\n    backgroundColor: '#E8F5E8',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 10,\n    borderLeftWidth: 4,\n    borderLeftColor: '#4CAF50',\n  },\n  attendanceStatusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2E7D32',\n    textAlign: 'center',\n  },\n});\n\nexport default ClassScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}