{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport SideMenu from \"../../components/SideMenu\";\nimport apiService from \"../../services/apiService\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar AchievementsScreen = function AchievementsScreen(_ref) {\n  var _profileData$achievem, _profileData$achievem2;\n  var isMenuVisible = _ref.isMenuVisible,\n    setIsMenuVisible = _ref.setIsMenuVisible,\n    onNavigate = _ref.onNavigate,\n    currentUser = _ref.currentUser,\n    onLogout = _ref.onLogout;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    profileData = _useState2[0],\n    setProfileData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  useEffect(function () {\n    loadAchievementsData();\n  }, []);\n  var loadAchievementsData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      setError(null);\n      try {\n        var token = localStorage.getItem('authToken');\n        if (token) {\n          apiService.setToken(token);\n        } else {\n          console.error('Token não encontrado');\n          setError('Token de autenticação não encontrado');\n          return;\n        }\n        var response = yield apiService.getStudentProfile();\n        if (response.success) {\n          setProfileData(response.data);\n        } else {\n          setError(response.message || 'Erro ao carregar conquistas');\n        }\n      } catch (err) {\n        console.error('Erro ao carregar conquistas:', err);\n        setError('Não foi possível carregar as conquistas. Tente novamente.');\n      } finally {\n        setIsLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function loadAchievementsData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    loadAchievementsData();\n  };\n  var isAchievementUnlocked = function isAchievementUnlocked(achievement) {\n    if (!profileData) return false;\n    return profileData.achievements.unlocked.some(function (unlockedAchievement) {\n      return unlockedAchievement.id === achievement.id;\n    });\n  };\n  var renderAchievementCard = function renderAchievementCard(achievement) {\n    var isUnlocked = isAchievementUnlocked(achievement);\n    return _jsxs(View, {\n      style: [styles.achievementCard, isUnlocked && styles.achievementCardUnlocked],\n      children: [_jsxs(View, {\n        style: styles.achievementHeader,\n        children: [_jsx(View, {\n          style: styles.achievementIconContainer,\n          children: isUnlocked ? _jsx(Image, {\n            source: {\n              uri: achievement.icon\n            },\n            style: styles.achievementIcon,\n            resizeMode: \"contain\"\n          }) : _jsx(View, {\n            style: styles.lockedIconContainer,\n            children: _jsx(Text, {\n              style: styles.lockedIcon,\n              children: \"\\uD83D\\uDD12\"\n            })\n          })\n        }), isUnlocked && _jsx(View, {\n          style: styles.checkmarkContainer,\n          children: _jsx(Text, {\n            style: styles.checkmark,\n            children: \"\\u2705\"\n          })\n        })]\n      }), _jsx(Text, {\n        style: [styles.achievementName, !isUnlocked && styles.achievementNameLocked],\n        children: achievement.name\n      }), _jsx(Text, {\n        style: [styles.achievementDescription, !isUnlocked && styles.achievementDescriptionLocked],\n        children: achievement.description\n      }), _jsxs(View, {\n        style: styles.achievementFooter,\n        children: [_jsx(Text, {\n          style: [styles.achievementCategory, !isUnlocked && styles.achievementCategoryLocked],\n          children: achievement.category\n        }), _jsx(Text, {\n          style: [styles.achievementRarity, !isUnlocked && styles.achievementRarityLocked],\n          children: achievement.rarity\n        })]\n      }), _jsx(View, {\n        style: styles.achievementStatus,\n        children: _jsx(Text, {\n          style: [styles.achievementStatusText, !isUnlocked && styles.achievementStatusTextLocked],\n          children: isUnlocked ? 'Desbloqueada' : `${achievement.requirement}`\n        })\n      })]\n    }, achievement.id);\n  };\n  if (isLoading) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.loadingContainer,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#F9BB55\"\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: \"Carregando conquistas...\"\n        })]\n      })\n    });\n  }\n  if (error) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.errorContainer,\n        children: [_jsx(Text, {\n          style: styles.errorText,\n          children: error\n        }), _jsx(TouchableOpacity, {\n          style: styles.retryButton,\n          onPress: loadAchievementsData,\n          children: _jsx(Text, {\n            style: styles.retryButtonText,\n            children: \"Tentar Novamente\"\n          })\n        })]\n      })\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(ScrollView, {\n      style: styles.scrollView,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        colors: ['#F9BB55']\n      }),\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"\\uD83C\\uDFC6 Conquistas\"\n        }), profileData && _jsxs(Text, {\n          style: styles.subtitle,\n          children: [profileData.achievements.stats.unlocked, \" de \", profileData.achievements.stats.total, \" conquistas obtidas\"]\n        })]\n      }), _jsx(View, {\n        style: styles.achievementsGrid,\n        children: profileData == null ? void 0 : (_profileData$achievem = profileData.achievements) == null ? void 0 : (_profileData$achievem2 = _profileData$achievem.available) == null ? void 0 : _profileData$achievem2.map(function (achievement) {\n          return renderAchievementCard(achievement);\n        })\n      })]\n    }), _jsx(SideMenu, {\n      isVisible: isMenuVisible,\n      onClose: function onClose() {\n        return setIsMenuVisible(false);\n      },\n      onNavigate: onNavigate,\n      currentUser: currentUser,\n      onLogout: onLogout,\n      userType: \"STUDENT\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EDED'\n  },\n  scrollView: {\n    flex: 1\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#D9493C',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontFamily: 'Poppins'\n  },\n  retryButton: {\n    backgroundColor: '#F9BB55',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8\n  },\n  retryButtonText: {\n    color: '#000',\n    fontWeight: 'bold',\n    fontFamily: 'Poppins'\n  },\n  header: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    paddingBottom: 10\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#000',\n    fontFamily: 'Poppins'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginTop: 5,\n    fontFamily: 'Poppins'\n  },\n  achievementsGrid: {\n    paddingHorizontal: 20,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  achievementCard: {\n    width: (width - 60) / 2,\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 15,\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    elevation: 3\n  },\n  achievementCardUnlocked: {\n    borderWidth: 2,\n    borderColor: '#F9BB55'\n  },\n  achievementHeader: {\n    position: 'relative',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  achievementIconContainer: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: '#F5F5F5',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  achievementIcon: {\n    width: 50,\n    height: 50\n  },\n  lockedIconContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#E5E7EB',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  lockedIcon: {\n    fontSize: 24,\n    color: '#9CA3AF'\n  },\n  checkmarkContainer: {\n    position: 'absolute',\n    top: -5,\n    right: -5,\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    backgroundColor: '#4CAF50',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  checkmark: {\n    fontSize: 12,\n    color: '#fff'\n  },\n  achievementName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5,\n    textAlign: 'center',\n    fontFamily: 'Poppins'\n  },\n  achievementNameLocked: {\n    color: '#9CA3AF'\n  },\n  achievementDescription: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 8,\n    textAlign: 'center',\n    fontFamily: 'Poppins'\n  },\n  achievementDescriptionLocked: {\n    color: '#9CA3AF'\n  },\n  achievementFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8\n  },\n  achievementCategory: {\n    fontSize: 10,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  achievementCategoryLocked: {\n    color: '#9CA3AF'\n  },\n  achievementRarity: {\n    fontSize: 10,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  achievementRarityLocked: {\n    color: '#9CA3AF'\n  },\n  achievementStatus: {\n    alignItems: 'center'\n  },\n  achievementStatusText: {\n    fontSize: 12,\n    color: '#4CAF50',\n    fontWeight: '600',\n    fontFamily: 'Poppins'\n  },\n  achievementStatusTextLocked: {\n    color: '#9CA3AF'\n  }\n});\nexport default AchievementsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Dimensions","SafeAreaView","Image","ActivityIndicator","RefreshControl","SideMenu","apiService","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","AchievementsScreen","_ref","_profileData$achievem","_profileData$achievem2","isMenuVisible","setIsMenuVisible","onNavigate","currentUser","onLogout","_useState","_useState2","_slicedToArray","profileData","setProfileData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","_useState8","error","setError","loadAchievementsData","_ref2","_asyncToGenerator","token","localStorage","getItem","setToken","console","response","getStudentProfile","success","data","message","err","apply","arguments","onRefresh","isAchievementUnlocked","achievement","achievements","unlocked","some","unlockedAchievement","id","renderAchievementCard","isUnlocked","style","styles","achievementCard","achievementCardUnlocked","children","achievementHeader","achievementIconContainer","source","uri","icon","achievementIcon","resizeMode","lockedIconContainer","lockedIcon","checkmarkContainer","checkmark","achievementName","achievementNameLocked","name","achievementDescription","achievementDescriptionLocked","description","achievementFooter","achievementCategory","achievementCategoryLocked","category","achievementRarity","achievementRarityLocked","rarity","achievementStatus","achievementStatusText","achievementStatusTextLocked","requirement","container","loadingContainer","size","color","loadingText","errorContainer","errorText","retryButton","onPress","retryButtonText","scrollView","refreshControl","colors","header","title","subtitle","stats","total","achievementsGrid","available","map","isVisible","onClose","userType","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","fontFamily","paddingHorizontal","textAlign","marginBottom","paddingVertical","borderRadius","fontWeight","paddingTop","paddingBottom","flexDirection","flexWrap","padding","boxShadow","elevation","borderWidth","borderColor","position","top","right"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/screens/student/AchievementsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  Image,\r\n  ActivityIndicator,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport SideMenu from '../../components/SideMenu';\r\nimport apiService from '../../services/apiService';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst AchievementsScreen = ({ isMenuVisible, setIsMenuVisible, onNavigate, currentUser, onLogout }) => {\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadAchievementsData();\r\n  }, []);\r\n\r\n  const loadAchievementsData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Configurar token de autenticação\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        apiService.setToken(token);\r\n      } else {\r\n        console.error('Token não encontrado');\r\n        setError('Token de autenticação não encontrado');\r\n        return;\r\n      }\r\n      \r\n      const response = await apiService.getStudentProfile();\r\n      if (response.success) {\r\n        setProfileData(response.data);\r\n      } else {\r\n        setError(response.message || 'Erro ao carregar conquistas');\r\n      }\r\n    } catch (err) {\r\n      console.error('Erro ao carregar conquistas:', err);\r\n      setError('Não foi possível carregar as conquistas. Tente novamente.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    loadAchievementsData();\r\n  };\r\n\r\n  const isAchievementUnlocked = (achievement) => {\r\n    if (!profileData) return false;\r\n    return profileData.achievements.unlocked.some(unlockedAchievement => unlockedAchievement.id === achievement.id);\r\n  };\r\n\r\n  const renderAchievementCard = (achievement) => {\r\n    const isUnlocked = isAchievementUnlocked(achievement);\r\n    \r\n    return (\r\n      <View key={achievement.id} style={[\r\n        styles.achievementCard,\r\n        isUnlocked && styles.achievementCardUnlocked\r\n      ]}>\r\n        <View style={styles.achievementHeader}>\r\n          <View style={styles.achievementIconContainer}>\r\n            {isUnlocked ? (\r\n              <Image \r\n                source={{ uri: achievement.icon }} \r\n                style={styles.achievementIcon}\r\n                resizeMode=\"contain\"\r\n              />\r\n            ) : (\r\n              <View style={styles.lockedIconContainer}>\r\n                <Text style={styles.lockedIcon}>🔒</Text>\r\n              </View>\r\n            )}\r\n          </View>\r\n          \r\n          {isUnlocked && (\r\n            <View style={styles.checkmarkContainer}>\r\n              <Text style={styles.checkmark}>✅</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        <Text style={[\r\n          styles.achievementName,\r\n          !isUnlocked && styles.achievementNameLocked\r\n        ]}>\r\n          {achievement.name}\r\n        </Text>\r\n\r\n        <Text style={[\r\n          styles.achievementDescription,\r\n          !isUnlocked && styles.achievementDescriptionLocked\r\n        ]}>\r\n          {achievement.description}\r\n        </Text>\r\n\r\n        <View style={styles.achievementFooter}>\r\n          <Text style={[\r\n            styles.achievementCategory,\r\n            !isUnlocked && styles.achievementCategoryLocked\r\n          ]}>\r\n            {achievement.category}\r\n          </Text>\r\n          \r\n          <Text style={[\r\n            styles.achievementRarity,\r\n            !isUnlocked && styles.achievementRarityLocked\r\n          ]}>\r\n            {achievement.rarity}\r\n          </Text>\r\n        </View>\r\n\r\n        <View style={styles.achievementStatus}>\r\n          <Text style={[\r\n            styles.achievementStatusText,\r\n            !isUnlocked && styles.achievementStatusTextLocked\r\n          ]}>\r\n            {isUnlocked ? 'Desbloqueada' : `${achievement.requirement}`}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#F9BB55\" />\r\n          <Text style={styles.loadingText}>Carregando conquistas...</Text>\r\n        </View>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <View style={styles.errorContainer}>\r\n          <Text style={styles.errorText}>{error}</Text>\r\n          <TouchableOpacity style={styles.retryButton} onPress={loadAchievementsData}>\r\n            <Text style={styles.retryButtonText}>Tentar Novamente</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView\r\n        style={styles.scrollView}\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} colors={['#F9BB55']} />\r\n        }\r\n      >\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>🏆 Conquistas</Text>\r\n          {profileData && (\r\n            <Text style={styles.subtitle}>\r\n              {profileData.achievements.stats.unlocked} de {profileData.achievements.stats.total} conquistas obtidas\r\n            </Text>\r\n          )}\r\n        </View>\r\n\r\n        <View style={styles.achievementsGrid}>\r\n          {profileData?.achievements?.available?.map(achievement => renderAchievementCard(achievement))}\r\n        </View>\r\n      </ScrollView>\r\n      \r\n      <SideMenu \r\n        isVisible={isMenuVisible} \r\n        onClose={() => setIsMenuVisible(false)}\r\n        onNavigate={onNavigate}\r\n        currentUser={currentUser}\r\n        onLogout={onLogout}\r\n        userType=\"STUDENT\"\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8EDED',\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  errorText: {\r\n    fontSize: 16,\r\n    color: '#D9493C',\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n    fontFamily: 'Poppins',\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#F9BB55',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n  },\r\n  retryButtonText: {\r\n    color: '#000',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  header: {\r\n    paddingHorizontal: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 10,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    marginTop: 5,\r\n    fontFamily: 'Poppins',\r\n  },\r\n  achievementsGrid: {\r\n    paddingHorizontal: 20,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  achievementCard: {\r\n    width: (width - 60) / 2,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    padding: 15,\r\n    marginBottom: 15,\r\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\r\n    elevation: 3,\r\n  },\r\n  achievementCardUnlocked: {\r\n    borderWidth: 2,\r\n    borderColor: '#F9BB55',\r\n  },\r\n  achievementHeader: {\r\n    position: 'relative',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  achievementIconContainer: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    backgroundColor: '#F5F5F5',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  achievementIcon: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  lockedIconContainer: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    backgroundColor: '#E5E7EB',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  lockedIcon: {\r\n    fontSize: 24,\r\n    color: '#9CA3AF',\r\n  },\r\n  checkmarkContainer: {\r\n    position: 'absolute',\r\n    top: -5,\r\n    right: -5,\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: '#4CAF50',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  checkmark: {\r\n    fontSize: 12,\r\n    color: '#fff',\r\n  },\r\n  achievementName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    marginBottom: 5,\r\n    textAlign: 'center',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  achievementNameLocked: {\r\n    color: '#9CA3AF',\r\n  },\r\n  achievementDescription: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginBottom: 8,\r\n    textAlign: 'center',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  achievementDescriptionLocked: {\r\n    color: '#9CA3AF',\r\n  },\r\n  achievementFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8,\r\n  },\r\n  achievementCategory: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  achievementCategoryLocked: {\r\n    color: '#9CA3AF',\r\n  },\r\n  achievementRarity: {\r\n    fontSize: 10,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  achievementRarityLocked: {\r\n    color: '#9CA3AF',\r\n  },\r\n  achievementStatus: {\r\n    alignItems: 'center',\r\n  },\r\n  achievementStatusText: {\r\n    fontSize: 12,\r\n    color: '#4CAF50',\r\n    fontWeight: '600',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  achievementStatusTextLocked: {\r\n    color: '#9CA3AF',\r\n  },\r\n});\r\n\r\nexport default AchievementsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}