{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://your-api-domain.com/api' : 'http://localhost:3001/api';\nvar ApiService = function () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n    this.token = null;\n  }\n  return _createClass(ApiService, [{\n    key: \"setToken\",\n    value: function setToken(token) {\n      this.token = token;\n    }\n  }, {\n    key: \"clearToken\",\n    value: function clearToken() {\n      this.token = null;\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator(function* (endpoint) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var url = `${API_BASE_URL}${endpoint}`;\n        var config = _objectSpread({\n          headers: _objectSpread({\n            'Content-Type': 'application/json'\n          }, options.headers)\n        }, options);\n        if (this.token) {\n          config.headers.Authorization = `Bearer ${this.token}`;\n        }\n        try {\n          var response = yield fetch(url, config);\n          var data = yield response.json();\n          if (!response.ok) {\n            return {\n              success: false,\n              message: data.message || 'Erro na requisição',\n              status: response.status\n            };\n          }\n          return data;\n        } catch (error) {\n          console.error('Erro na API:', error);\n          return {\n            success: false,\n            message: error.message || 'Erro de conexão',\n            status: 0\n          };\n        }\n      });\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(function* (userData) {\n        console.log('🔵 apiService.register chamado com:', userData);\n        var result = yield this.request('/auth/register', {\n          method: 'POST',\n          body: JSON.stringify(userData)\n        });\n        console.log('🔵 apiService.register retornou:', result);\n        return result;\n      });\n      function register(_x2) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* (email, password) {\n        var userType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'STUDENT';\n        return this.request('/auth/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            userType: userType\n          })\n        });\n      });\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"verifyToken\",\n    value: function () {\n      var _verifyToken = _asyncToGenerator(function* () {\n        return this.request('/auth/verify');\n      });\n      function verifyToken() {\n        return _verifyToken.apply(this, arguments);\n      }\n      return verifyToken;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator(function* () {\n        return this.request('/auth/logout', {\n          method: 'POST'\n        });\n      });\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }()\n  }, {\n    key: \"getStudentClass\",\n    value: function () {\n      var _getStudentClass = _asyncToGenerator(function* () {\n        return this.request('/auth/student/class');\n      });\n      function getStudentClass() {\n        return _getStudentClass.apply(this, arguments);\n      }\n      return getStudentClass;\n    }()\n  }, {\n    key: \"getUserProfile\",\n    value: function () {\n      var _getUserProfile = _asyncToGenerator(function* () {\n        return this.request('/users/profile');\n      });\n      function getUserProfile() {\n        return _getUserProfile.apply(this, arguments);\n      }\n      return getUserProfile;\n    }()\n  }, {\n    key: \"updateUserProfile\",\n    value: function () {\n      var _updateUserProfile = _asyncToGenerator(function* (userData) {\n        return this.request('/users/profile', {\n          method: 'PUT',\n          body: JSON.stringify(userData)\n        });\n      });\n      function updateUserProfile(_x5) {\n        return _updateUserProfile.apply(this, arguments);\n      }\n      return updateUserProfile;\n    }()\n  }, {\n    key: \"changePassword\",\n    value: function () {\n      var _changePassword = _asyncToGenerator(function* (currentPassword, newPassword) {\n        return this.request('/users/password', {\n          method: 'PUT',\n          body: JSON.stringify({\n            currentPassword: currentPassword,\n            newPassword: newPassword\n          })\n        });\n      });\n      function changePassword(_x6, _x7) {\n        return _changePassword.apply(this, arguments);\n      }\n      return changePassword;\n    }()\n  }, {\n    key: \"getUserStats\",\n    value: function () {\n      var _getUserStats = _asyncToGenerator(function* () {\n        return this.request('/users/stats');\n      });\n      function getUserStats() {\n        return _getUserStats.apply(this, arguments);\n      }\n      return getUserStats;\n    }()\n  }, {\n    key: \"addFavoriteSport\",\n    value: function () {\n      var _addFavoriteSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/favorite`, {\n          method: 'POST'\n        });\n      });\n      function addFavoriteSport(_x8) {\n        return _addFavoriteSport.apply(this, arguments);\n      }\n      return addFavoriteSport;\n    }()\n  }, {\n    key: \"removeFavoriteSport\",\n    value: function () {\n      var _removeFavoriteSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/favorite`, {\n          method: 'DELETE'\n        });\n      });\n      function removeFavoriteSport(_x9) {\n        return _removeFavoriteSport.apply(this, arguments);\n      }\n      return removeFavoriteSport;\n    }()\n  }, {\n    key: \"getFavoriteSports\",\n    value: function () {\n      var _getFavoriteSports = _asyncToGenerator(function* () {\n        return this.request('/sports/favorites');\n      });\n      function getFavoriteSports() {\n        return _getFavoriteSports.apply(this, arguments);\n      }\n      return getFavoriteSports;\n    }()\n  }, {\n    key: \"getSports\",\n    value: function () {\n      var _getSports = _asyncToGenerator(function* () {\n        return this.request('/sports');\n      });\n      function getSports() {\n        return _getSports.apply(this, arguments);\n      }\n      return getSports;\n    }()\n  }, {\n    key: \"getSportById\",\n    value: function () {\n      var _getSportById = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}`);\n      });\n      function getSportById(_x0) {\n        return _getSportById.apply(this, arguments);\n      }\n      return getSportById;\n    }()\n  }, {\n    key: \"joinSport\",\n    value: function () {\n      var _joinSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/join`, {\n          method: 'POST'\n        });\n      });\n      function joinSport(_x1) {\n        return _joinSport.apply(this, arguments);\n      }\n      return joinSport;\n    }()\n  }, {\n    key: \"leaveSport\",\n    value: function () {\n      var _leaveSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/leave`, {\n          method: 'DELETE'\n        });\n      });\n      function leaveSport(_x10) {\n        return _leaveSport.apply(this, arguments);\n      }\n      return leaveSport;\n    }()\n  }, {\n    key: \"getUserSports\",\n    value: function () {\n      var _getUserSports = _asyncToGenerator(function* () {\n        return this.request('/sports/user/my-sports');\n      });\n      function getUserSports() {\n        return _getUserSports.apply(this, arguments);\n      }\n      return getUserSports;\n    }()\n  }, {\n    key: \"getSportRanking\",\n    value: function () {\n      var _getSportRanking = _asyncToGenerator(function* (sportId) {\n        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n        var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\n      });\n      function getSportRanking(_x11) {\n        return _getSportRanking.apply(this, arguments);\n      }\n      return getSportRanking;\n    }()\n  }, {\n    key: \"getContentsBySport\",\n    value: function () {\n      var _getContentsBySport = _asyncToGenerator(function* (sportId) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.type) params.append('type', filters.type);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/sport/${sportId}?${params.toString()}`);\n      });\n      function getContentsBySport(_x12) {\n        return _getContentsBySport.apply(this, arguments);\n      }\n      return getContentsBySport;\n    }()\n  }, {\n    key: \"getContentById\",\n    value: function () {\n      var _getContentById = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}`);\n      });\n      function getContentById(_x13) {\n        return _getContentById.apply(this, arguments);\n      }\n      return getContentById;\n    }()\n  }, {\n    key: \"getContentsByType\",\n    value: function () {\n      var _getContentsByType = _asyncToGenerator(function* (type) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/type/${type}?${params.toString()}`);\n      });\n      function getContentsByType(_x14) {\n        return _getContentsByType.apply(this, arguments);\n      }\n      return getContentsByType;\n    }()\n  }, {\n    key: \"getContentProgress\",\n    value: function () {\n      var _getContentProgress = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}/progress`);\n      });\n      function getContentProgress(_x15) {\n        return _getContentProgress.apply(this, arguments);\n      }\n      return getContentProgress;\n    }()\n  }, {\n    key: \"updateContentProgress\",\n    value: function () {\n      var _updateContentProgress = _asyncToGenerator(function* (contentId, progress) {\n        return this.request(`/contents/${contentId}/progress`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            progress: progress\n          })\n        });\n      });\n      function updateContentProgress(_x16, _x17) {\n        return _updateContentProgress.apply(this, arguments);\n      }\n      return updateContentProgress;\n    }()\n  }, {\n    key: \"getCompletedContents\",\n    value: function () {\n      var _getCompletedContents = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\n      });\n      function getCompletedContents() {\n        return _getCompletedContents.apply(this, arguments);\n      }\n      return getCompletedContents;\n    }()\n  }, {\n    key: \"submitScore\",\n    value: function () {\n      var _submitScore = _asyncToGenerator(function* (sportId, score, level) {\n        return this.request('/scores', {\n          method: 'POST',\n          body: JSON.stringify({\n            sportId: sportId,\n            score: score,\n            level: level\n          })\n        });\n      });\n      function submitScore(_x18, _x19, _x20) {\n        return _submitScore.apply(this, arguments);\n      }\n      return submitScore;\n    }()\n  }, {\n    key: \"getUserScores\",\n    value: function () {\n      var _getUserScores = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\n      });\n      function getUserScores() {\n        return _getUserScores.apply(this, arguments);\n      }\n      return getUserScores;\n    }()\n  }, {\n    key: \"getUserScoreBySport\",\n    value: function () {\n      var _getUserScoreBySport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/scores/user/${sportId}`);\n      });\n      function getUserScoreBySport(_x21) {\n        return _getUserScoreBySport.apply(this, arguments);\n      }\n      return getUserScoreBySport;\n    }()\n  }, {\n    key: \"getRanking\",\n    value: function () {\n      var _getRanking = _asyncToGenerator(function* () {\n        var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/scores/ranking?${params.toString()}`);\n      });\n      function getRanking() {\n        return _getRanking.apply(this, arguments);\n      }\n      return getRanking;\n    }()\n  }, {\n    key: \"getScoreStats\",\n    value: function () {\n      var _getScoreStats = _asyncToGenerator(function* () {\n        return this.request('/scores/stats');\n      });\n      function getScoreStats() {\n        return _getScoreStats.apply(this, arguments);\n      }\n      return getScoreStats;\n    }()\n  }, {\n    key: \"getStudentSportsScores\",\n    value: function () {\n      var _getStudentSportsScores = _asyncToGenerator(function* () {\n        return this.request('/scores/student/sports');\n      });\n      function getStudentSportsScores() {\n        return _getStudentSportsScores.apply(this, arguments);\n      }\n      return getStudentSportsScores;\n    }()\n  }, {\n    key: \"sendMessage\",\n    value: function () {\n      var _sendMessage = _asyncToGenerator(function* (message) {\n        return this.request('/chat/send', {\n          method: 'POST',\n          body: JSON.stringify({\n            message: message\n          })\n        });\n      });\n      function sendMessage(_x22) {\n        return _sendMessage.apply(this, arguments);\n      }\n      return sendMessage;\n    }()\n  }, {\n    key: \"getMessages\",\n    value: function () {\n      var _getMessages = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var before = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var params = new URLSearchParams();\n        if (limit) params.append('limit', limit);\n        if (offset) params.append('offset', offset);\n        if (before) params.append('before', before);\n        return this.request(`/chat/messages?${params.toString()}`);\n      });\n      function getMessages() {\n        return _getMessages.apply(this, arguments);\n      }\n      return getMessages;\n    }()\n  }, {\n    key: \"markMessagesAsRead\",\n    value: function () {\n      var _markMessagesAsRead = _asyncToGenerator(function* () {\n        return this.request('/chat/mark-read', {\n          method: 'PUT'\n        });\n      });\n      function markMessagesAsRead() {\n        return _markMessagesAsRead.apply(this, arguments);\n      }\n      return markMessagesAsRead;\n    }()\n  }, {\n    key: \"getChatStats\",\n    value: function () {\n      var _getChatStats = _asyncToGenerator(function* () {\n        return this.request('/chat/stats');\n      });\n      function getChatStats() {\n        return _getChatStats.apply(this, arguments);\n      }\n      return getChatStats;\n    }()\n  }, {\n    key: \"deleteMessage\",\n    value: function () {\n      var _deleteMessage = _asyncToGenerator(function* (messageId) {\n        return this.request(`/chat/${messageId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteMessage(_x23) {\n        return _deleteMessage.apply(this, arguments);\n      }\n      return deleteMessage;\n    }()\n  }, {\n    key: \"getTeacherClasses\",\n    value: function () {\n      var _getTeacherClasses = _asyncToGenerator(function* () {\n        var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var params = new URLSearchParams();\n        if (month) params.append('month', month);\n        if (year) params.append('year', year);\n        return this.request(`/classes?${params.toString()}`);\n      });\n      function getTeacherClasses() {\n        return _getTeacherClasses.apply(this, arguments);\n      }\n      return getTeacherClasses;\n    }()\n  }, {\n    key: \"createOrUpdateClass\",\n    value: function () {\n      var _createOrUpdateClass = _asyncToGenerator(function* (classData) {\n        console.log('apiService.createOrUpdateClass chamado com:', classData);\n        console.log('Token atual:', this.token);\n        return this.request('/classes', {\n          method: 'POST',\n          body: JSON.stringify(classData)\n        });\n      });\n      function createOrUpdateClass(_x24) {\n        return _createOrUpdateClass.apply(this, arguments);\n      }\n      return createOrUpdateClass;\n    }()\n  }, {\n    key: \"deleteClass\",\n    value: function () {\n      var _deleteClass = _asyncToGenerator(function* (classId) {\n        return this.request(`/class-management/classes/${classId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteClass(_x25) {\n        return _deleteClass.apply(this, arguments);\n      }\n      return deleteClass;\n    }()\n  }, {\n    key: \"completeClass\",\n    value: function () {\n      var _completeClass = _asyncToGenerator(function* (classId) {\n        var isCompleted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return this.request(`/classes/${classId}/complete`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            isCompleted: isCompleted\n          })\n        });\n      });\n      function completeClass(_x26) {\n        return _completeClass.apply(this, arguments);\n      }\n      return completeClass;\n    }()\n  }, {\n    key: \"getClassStats\",\n    value: function () {\n      var _getClassStats = _asyncToGenerator(function* () {\n        var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var params = new URLSearchParams();\n        if (month) params.append('month', month);\n        if (year) params.append('year', year);\n        return this.request(`/classes/stats?${params.toString()}`);\n      });\n      function getClassStats() {\n        return _getClassStats.apply(this, arguments);\n      }\n      return getClassStats;\n    }()\n  }, {\n    key: \"getClasses\",\n    value: function () {\n      var _getClasses = _asyncToGenerator(function* () {\n        return this.request('/class-management/classes');\n      });\n      function getClasses() {\n        return _getClasses.apply(this, arguments);\n      }\n      return getClasses;\n    }()\n  }, {\n    key: \"createClass\",\n    value: function () {\n      var _createClass2 = _asyncToGenerator(function* (classData) {\n        return this.request('/class-management/classes', {\n          method: 'POST',\n          body: JSON.stringify(classData)\n        });\n      });\n      function createClass(_x27) {\n        return _createClass2.apply(this, arguments);\n      }\n      return createClass;\n    }()\n  }, {\n    key: \"updateClass\",\n    value: function () {\n      var _updateClass = _asyncToGenerator(function* (classId, classData) {\n        return this.request(`/class-management/classes/${classId}`, {\n          method: 'PUT',\n          body: JSON.stringify(classData)\n        });\n      });\n      function updateClass(_x28, _x29) {\n        return _updateClass.apply(this, arguments);\n      }\n      return updateClass;\n    }()\n  }, {\n    key: \"getAvailableStudents\",\n    value: function () {\n      var _getAvailableStudents = _asyncToGenerator(function* () {\n        var classId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        var params = new URLSearchParams();\n        if (classId) params.append('classId', classId);\n        if (search) params.append('search', search);\n        return this.request(`/class-management/students/available?${params.toString()}`);\n      });\n      function getAvailableStudents() {\n        return _getAvailableStudents.apply(this, arguments);\n      }\n      return getAvailableStudents;\n    }()\n  }, {\n    key: \"addStudentToClass\",\n    value: function () {\n      var _addStudentToClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/class-management/classes/${classId}/students`, {\n          method: 'POST',\n          body: JSON.stringify({\n            studentId: studentId\n          })\n        });\n      });\n      function addStudentToClass(_x30, _x31) {\n        return _addStudentToClass.apply(this, arguments);\n      }\n      return addStudentToClass;\n    }()\n  }, {\n    key: \"removeStudentFromClass\",\n    value: function () {\n      var _removeStudentFromClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/class-management/classes/${classId}/students/${studentId}`, {\n          method: 'DELETE'\n        });\n      });\n      function removeStudentFromClass(_x32, _x33) {\n        return _removeStudentFromClass.apply(this, arguments);\n      }\n      return removeStudentFromClass;\n    }()\n  }, {\n    key: \"getClassManagementStats\",\n    value: function () {\n      var _getClassManagementStats = _asyncToGenerator(function* () {\n        return this.request('/class-management/classes/stats');\n      });\n      function getClassManagementStats() {\n        return _getClassManagementStats.apply(this, arguments);\n      }\n      return getClassManagementStats;\n    }()\n  }, {\n    key: \"registerInstitution\",\n    value: function () {\n      var _registerInstitution = _asyncToGenerator(function* (institutionData) {\n        return this.request('/institutions/register', {\n          method: 'POST',\n          body: JSON.stringify(institutionData)\n        });\n      });\n      function registerInstitution(_x34) {\n        return _registerInstitution.apply(this, arguments);\n      }\n      return registerInstitution;\n    }()\n  }, {\n    key: \"loginInstitution\",\n    value: function () {\n      var _loginInstitution = _asyncToGenerator(function* (email, password) {\n        return this.request('/institutions/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n      });\n      function loginInstitution(_x35, _x36) {\n        return _loginInstitution.apply(this, arguments);\n      }\n      return loginInstitution;\n    }()\n  }, {\n    key: \"searchUserByCPF\",\n    value: function () {\n      var _searchUserByCPF = _asyncToGenerator(function* (cpf) {\n        return this.request(`/institutions/users/search?cpf=${cpf}`);\n      });\n      function searchUserByCPF(_x37) {\n        return _searchUserByCPF.apply(this, arguments);\n      }\n      return searchUserByCPF;\n    }()\n  }, {\n    key: \"addUserToInstitution\",\n    value: function () {\n      var _addUserToInstitution = _asyncToGenerator(function* (userId) {\n        return this.request(`/institutions/users/${userId}/add`, {\n          method: 'POST'\n        });\n      });\n      function addUserToInstitution(_x38) {\n        return _addUserToInstitution.apply(this, arguments);\n      }\n      return addUserToInstitution;\n    }()\n  }, {\n    key: \"removeUserFromInstitution\",\n    value: function () {\n      var _removeUserFromInstitution = _asyncToGenerator(function* (userId) {\n        return this.request(`/institutions/users/${userId}/remove`, {\n          method: 'DELETE'\n        });\n      });\n      function removeUserFromInstitution(_x39) {\n        return _removeUserFromInstitution.apply(this, arguments);\n      }\n      return removeUserFromInstitution;\n    }()\n  }, {\n    key: \"getInstitutionUsers\",\n    value: function () {\n      var _getInstitutionUsers = _asyncToGenerator(function* () {\n        var userType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        var params = new URLSearchParams();\n        if (userType) params.append('userType', userType);\n        if (search) params.append('search', search);\n        return this.request(`/institutions/users?${params.toString()}`);\n      });\n      function getInstitutionUsers() {\n        return _getInstitutionUsers.apply(this, arguments);\n      }\n      return getInstitutionUsers;\n    }()\n  }, {\n    key: \"getInstitutionClasses\",\n    value: function () {\n      var _getInstitutionClasses = _asyncToGenerator(function* () {\n        return this.request('/institutions/classes');\n      });\n      function getInstitutionClasses() {\n        return _getInstitutionClasses.apply(this, arguments);\n      }\n      return getInstitutionClasses;\n    }()\n  }, {\n    key: \"createInstitutionClass\",\n    value: function () {\n      var _createInstitutionClass = _asyncToGenerator(function* (classData) {\n        return this.request('/institutions/classes', {\n          method: 'POST',\n          body: JSON.stringify(classData)\n        });\n      });\n      function createInstitutionClass(_x40) {\n        return _createInstitutionClass.apply(this, arguments);\n      }\n      return createInstitutionClass;\n    }()\n  }, {\n    key: \"addStudentToInstitutionClass\",\n    value: function () {\n      var _addStudentToInstitutionClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/institutions/classes/${classId}/students`, {\n          method: 'POST',\n          body: JSON.stringify({\n            studentId: studentId\n          })\n        });\n      });\n      function addStudentToInstitutionClass(_x41, _x42) {\n        return _addStudentToInstitutionClass.apply(this, arguments);\n      }\n      return addStudentToInstitutionClass;\n    }()\n  }, {\n    key: \"removeStudentFromInstitutionClass\",\n    value: function () {\n      var _removeStudentFromInstitutionClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/institutions/classes/${classId}/students/${studentId}`, {\n          method: 'DELETE'\n        });\n      });\n      function removeStudentFromInstitutionClass(_x43, _x44) {\n        return _removeStudentFromInstitutionClass.apply(this, arguments);\n      }\n      return removeStudentFromInstitutionClass;\n    }()\n  }, {\n    key: \"deleteInstitutionClass\",\n    value: function () {\n      var _deleteInstitutionClass = _asyncToGenerator(function* (classId) {\n        return this.request(`/institutions/classes/${classId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteInstitutionClass(_x45) {\n        return _deleteInstitutionClass.apply(this, arguments);\n      }\n      return deleteInstitutionClass;\n    }()\n  }, {\n    key: \"getInstitutionStats\",\n    value: function () {\n      var _getInstitutionStats = _asyncToGenerator(function* () {\n        return this.request('/institutions/stats');\n      });\n      function getInstitutionStats() {\n        return _getInstitutionStats.apply(this, arguments);\n      }\n      return getInstitutionStats;\n    }()\n  }]);\n}();\nvar apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","NODE_ENV","ApiService","_classCallCheck","token","_createClass","key","value","setToken","clearToken","_request","_asyncToGenerator","endpoint","options","arguments","length","undefined","url","config","_objectSpread","headers","Authorization","response","fetch","data","json","ok","success","message","status","error","console","request","_x","apply","_register","userData","log","result","method","body","JSON","stringify","register","_x2","_login","email","password","userType","login","_x3","_x4","_verifyToken","verifyToken","_logout","logout","_getStudentClass","getStudentClass","_getUserProfile","getUserProfile","_updateUserProfile","updateUserProfile","_x5","_changePassword","currentPassword","newPassword","changePassword","_x6","_x7","_getUserStats","getUserStats","_addFavoriteSport","sportId","addFavoriteSport","_x8","_removeFavoriteSport","removeFavoriteSport","_x9","_getFavoriteSports","getFavoriteSports","_getSports","getSports","_getSportById","getSportById","_x0","_joinSport","joinSport","_x1","_leaveSport","leaveSport","_x10","_getUserSports","getUserSports","_getSportRanking","limit","offset","getSportRanking","_x11","_getContentsBySport","filters","params","URLSearchParams","type","append","difficulty","toString","getContentsBySport","_x12","_getContentById","contentId","getContentById","_x13","_getContentsByType","getContentsByType","_x14","_getContentProgress","getContentProgress","_x15","_updateContentProgress","progress","updateContentProgress","_x16","_x17","_getCompletedContents","getCompletedContents","_submitScore","score","level","submitScore","_x18","_x19","_x20","_getUserScores","getUserScores","_getUserScoreBySport","getUserScoreBySport","_x21","_getRanking","getRanking","_getScoreStats","getScoreStats","_getStudentSportsScores","getStudentSportsScores","_sendMessage","sendMessage","_x22","_getMessages","before","getMessages","_markMessagesAsRead","markMessagesAsRead","_getChatStats","getChatStats","_deleteMessage","messageId","deleteMessage","_x23","_getTeacherClasses","month","year","getTeacherClasses","_createOrUpdateClass","classData","createOrUpdateClass","_x24","_deleteClass","classId","deleteClass","_x25","_completeClass","isCompleted","completeClass","_x26","_getClassStats","getClassStats","_getClasses","getClasses","_createClass2","createClass","_x27","_updateClass","updateClass","_x28","_x29","_getAvailableStudents","search","getAvailableStudents","_addStudentToClass","studentId","addStudentToClass","_x30","_x31","_removeStudentFromClass","removeStudentFromClass","_x32","_x33","_getClassManagementStats","getClassManagementStats","_registerInstitution","institutionData","registerInstitution","_x34","_loginInstitution","loginInstitution","_x35","_x36","_searchUserByCPF","cpf","searchUserByCPF","_x37","_addUserToInstitution","userId","addUserToInstitution","_x38","_removeUserFromInstitution","removeUserFromInstitution","_x39","_getInstitutionUsers","getInstitutionUsers","_getInstitutionClasses","getInstitutionClasses","_createInstitutionClass","createInstitutionClass","_x40","_addStudentToInstitutionClass","addStudentToInstitutionClass","_x41","_x42","_removeStudentFromInstitutionClass","removeStudentFromInstitutionClass","_x43","_x44","_deleteInstitutionClass","deleteInstitutionClass","_x45","_getInstitutionStats","getInstitutionStats","apiService"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/src/services/apiService.js"],"sourcesContent":["// Serviço para comunicação com a API\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://your-api-domain.com/api' \n  : 'http://localhost:3001/api';\n\nclass ApiService {\n  constructor() {\n    this.token = null;\n  }\n\n  // Configurar token de autenticação\n  setToken(token) {\n    this.token = token;\n  }\n\n  // Remover token\n  clearToken() {\n    this.token = null;\n  }\n\n  // Fazer requisição HTTP\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    \n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    // Adicionar token se disponível\n    if (this.token) {\n      config.headers.Authorization = `Bearer ${this.token}`;\n    }\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        // Retornar a resposta de erro em vez de lançar exceção\n        return {\n          success: false,\n          message: data.message || 'Erro na requisição',\n          status: response.status\n        };\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Erro na API:', error);\n      return {\n        success: false,\n        message: error.message || 'Erro de conexão',\n        status: 0\n      };\n    }\n  }\n\n  // ===== AUTENTICAÇÃO =====\n  \n  async register(userData) {\n    console.log('🔵 apiService.register chamado com:', userData);\n    const result = await this.request('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n    console.log('🔵 apiService.register retornou:', result);\n    return result;\n  }\n\n  async login(email, password, userType = 'STUDENT') {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password, userType }),\n    });\n  }\n\n  async verifyToken() {\n    return this.request('/auth/verify');\n  }\n\n  async logout() {\n    return this.request('/auth/logout', {\n      method: 'POST',\n    });\n  }\n\n  async getStudentClass() {\n    return this.request('/auth/student/class');\n  }\n\n  // ===== USUÁRIOS =====\n\n  async getUserProfile() {\n    return this.request('/users/profile');\n  }\n\n  async updateUserProfile(userData) {\n    return this.request('/users/profile', {\n      method: 'PUT',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async changePassword(currentPassword, newPassword) {\n    return this.request('/users/password', {\n      method: 'PUT',\n      body: JSON.stringify({ currentPassword, newPassword }),\n    });\n  }\n\n  async getUserStats() {\n    return this.request('/users/stats');\n  }\n\n  async addFavoriteSport(sportId) {\n    return this.request(`/sports/${sportId}/favorite`, {\n      method: 'POST',\n    });\n  }\n\n  async removeFavoriteSport(sportId) {\n    return this.request(`/sports/${sportId}/favorite`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getFavoriteSports() {\n    return this.request('/sports/favorites');\n  }\n\n  // ===== ESPORTES =====\n\n  async getSports() {\n    return this.request('/sports');\n  }\n\n  async getSportById(sportId) {\n    return this.request(`/sports/${sportId}`);\n  }\n\n  async joinSport(sportId) {\n    return this.request(`/sports/${sportId}/join`, {\n      method: 'POST',\n    });\n  }\n\n  async leaveSport(sportId) {\n    return this.request(`/sports/${sportId}/leave`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getUserSports() {\n    return this.request('/sports/user/my-sports');\n  }\n\n  async getSportRanking(sportId, limit = 10, offset = 0) {\n    return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\n  }\n\n  // ===== CONTEÚDOS =====\n\n  async getContentsBySport(sportId, filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.type) params.append('type', filters.type);\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/contents/sport/${sportId}?${params.toString()}`);\n  }\n\n  async getContentById(contentId) {\n    return this.request(`/contents/${contentId}`);\n  }\n\n  async getContentsByType(type, filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.sportId) params.append('sportId', filters.sportId);\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/contents/type/${type}?${params.toString()}`);\n  }\n\n  async getContentProgress(contentId) {\n    return this.request(`/contents/${contentId}/progress`);\n  }\n\n  async updateContentProgress(contentId, progress) {\n    return this.request(`/contents/${contentId}/progress`, {\n      method: 'PUT',\n      body: JSON.stringify({ progress }),\n    });\n  }\n\n  async getCompletedContents(limit = 20, offset = 0) {\n    return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\n  }\n\n  // ===== PONTUAÇÕES =====\n\n  async submitScore(sportId, score, level) {\n    return this.request('/scores', {\n      method: 'POST',\n      body: JSON.stringify({ sportId, score, level }),\n    });\n  }\n\n  async getUserScores(limit = 20, offset = 0) {\n    return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\n  }\n\n  async getUserScoreBySport(sportId) {\n    return this.request(`/scores/user/${sportId}`);\n  }\n\n  async getRanking(filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.sportId) params.append('sportId', filters.sportId);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/scores/ranking?${params.toString()}`);\n  }\n\n  async getScoreStats() {\n    return this.request('/scores/stats');\n  }\n\n  async getStudentSportsScores() {\n    return this.request('/scores/student/sports');\n  }\n\n  // ===== CHAT =====\n\n  async sendMessage(message) {\n    return this.request('/chat/send', {\n      method: 'POST',\n      body: JSON.stringify({ message }),\n    });\n  }\n\n  async getMessages(limit = 50, offset = 0, before = null) {\n    const params = new URLSearchParams();\n    if (limit) params.append('limit', limit);\n    if (offset) params.append('offset', offset);\n    if (before) params.append('before', before);\n\n    return this.request(`/chat/messages?${params.toString()}`);\n  }\n\n  async markMessagesAsRead() {\n    return this.request('/chat/mark-read', {\n      method: 'PUT',\n    });\n  }\n\n  async getChatStats() {\n    return this.request('/chat/stats');\n  }\n\n  async deleteMessage(messageId) {\n    return this.request(`/chat/${messageId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // ===== AULAS DE PROFESSOR =====\n\n  async getTeacherClasses(month = null, year = null) {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n\n    return this.request(`/classes?${params.toString()}`);\n  }\n\n  async createOrUpdateClass(classData) {\n    console.log('apiService.createOrUpdateClass chamado com:', classData);\n    console.log('Token atual:', this.token);\n    return this.request('/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async deleteClass(classId) {\n    return this.request(`/classes/${classId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async completeClass(classId, isCompleted = true) {\n    return this.request(`/classes/${classId}/complete`, {\n      method: 'PUT',\n      body: JSON.stringify({ isCompleted }),\n    });\n  }\n\n  async getClassStats(month = null, year = null) {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n\n    return this.request(`/classes/stats?${params.toString()}`);\n  }\n\n  // ===== GERENCIAMENTO DE TURMAS =====\n\n  async getClasses() {\n    return this.request('/class-management/classes');\n  }\n\n  async createClass(classData) {\n    return this.request('/class-management/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async updateClass(classId, classData) {\n    return this.request(`/class-management/classes/${classId}`, {\n      method: 'PUT',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async deleteClass(classId) {\n    return this.request(`/class-management/classes/${classId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getAvailableStudents(classId = null, search = '') {\n    const params = new URLSearchParams();\n    if (classId) params.append('classId', classId);\n    if (search) params.append('search', search);\n\n    return this.request(`/class-management/students/available?${params.toString()}`);\n  }\n\n  async addStudentToClass(classId, studentId) {\n    return this.request(`/class-management/classes/${classId}/students`, {\n      method: 'POST',\n      body: JSON.stringify({ studentId }),\n    });\n  }\n\n  async removeStudentFromClass(classId, studentId) {\n    return this.request(`/class-management/classes/${classId}/students/${studentId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getClassManagementStats() {\n    return this.request('/class-management/classes/stats');\n  }\n\n  // ===== INSTITUIÇÕES =====\n\n  async registerInstitution(institutionData) {\n    return this.request('/institutions/register', {\n      method: 'POST',\n      body: JSON.stringify(institutionData),\n    });\n  }\n\n  async loginInstitution(email, password) {\n    return this.request('/institutions/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password }),\n    });\n  }\n\n  async searchUserByCPF(cpf) {\n    return this.request(`/institutions/users/search?cpf=${cpf}`);\n  }\n\n  async addUserToInstitution(userId) {\n    return this.request(`/institutions/users/${userId}/add`, {\n      method: 'POST',\n    });\n  }\n\n  async removeUserFromInstitution(userId) {\n    return this.request(`/institutions/users/${userId}/remove`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getInstitutionUsers(userType = null, search = '') {\n    const params = new URLSearchParams();\n    if (userType) params.append('userType', userType);\n    if (search) params.append('search', search);\n\n    return this.request(`/institutions/users?${params.toString()}`);\n  }\n\n  async getInstitutionClasses() {\n    return this.request('/institutions/classes');\n  }\n\n  async createInstitutionClass(classData) {\n    return this.request('/institutions/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async addStudentToInstitutionClass(classId, studentId) {\n    return this.request(`/institutions/classes/${classId}/students`, {\n      method: 'POST',\n      body: JSON.stringify({ studentId }),\n    });\n  }\n\n  async removeStudentFromInstitutionClass(classId, studentId) {\n    return this.request(`/institutions/classes/${classId}/students/${studentId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async deleteInstitutionClass(classId) {\n    return this.request(`/institutions/classes/${classId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getInstitutionStats() {\n    return this.request('/institutions/stats');\n  }\n}\n\n// Instância singleton\nconst apiService = new ApiService();\n\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}