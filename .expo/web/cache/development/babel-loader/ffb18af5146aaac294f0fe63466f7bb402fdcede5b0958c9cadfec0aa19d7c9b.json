{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://your-api-domain.com/api' : 'http://localhost:3001/api';\nvar ApiService = function () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n    this.token = null;\n  }\n  return _createClass(ApiService, [{\n    key: \"setToken\",\n    value: function setToken(token) {\n      this.token = token;\n    }\n  }, {\n    key: \"clearToken\",\n    value: function clearToken() {\n      this.token = null;\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator(function* (endpoint) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var url = `${API_BASE_URL}${endpoint}`;\n        var config = _objectSpread({\n          headers: _objectSpread({\n            'Content-Type': 'application/json'\n          }, options.headers)\n        }, options);\n        if (this.token) {\n          config.headers.Authorization = `Bearer ${this.token}`;\n        }\n        try {\n          var response = yield fetch(url, config);\n          var data = yield response.json();\n          if (!response.ok) {\n            throw new Error(data.message || 'Erro na requisição');\n          }\n          return data;\n        } catch (error) {\n          console.error('Erro na API:', error);\n          throw error;\n        }\n      });\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(function* (userData) {\n        console.log('🔵 apiService.register chamado com:', userData);\n        var result = yield this.request('/auth/register', {\n          method: 'POST',\n          body: JSON.stringify(userData)\n        });\n        console.log('🔵 apiService.register retornou:', result);\n        return result;\n      });\n      function register(_x2) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* (email, password) {\n        return this.request('/auth/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n      });\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"verifyToken\",\n    value: function () {\n      var _verifyToken = _asyncToGenerator(function* () {\n        return this.request('/auth/verify');\n      });\n      function verifyToken() {\n        return _verifyToken.apply(this, arguments);\n      }\n      return verifyToken;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator(function* () {\n        return this.request('/auth/logout', {\n          method: 'POST'\n        });\n      });\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }()\n  }, {\n    key: \"getUserProfile\",\n    value: function () {\n      var _getUserProfile = _asyncToGenerator(function* () {\n        return this.request('/users/profile');\n      });\n      function getUserProfile() {\n        return _getUserProfile.apply(this, arguments);\n      }\n      return getUserProfile;\n    }()\n  }, {\n    key: \"updateUserProfile\",\n    value: function () {\n      var _updateUserProfile = _asyncToGenerator(function* (userData) {\n        return this.request('/users/profile', {\n          method: 'PUT',\n          body: JSON.stringify(userData)\n        });\n      });\n      function updateUserProfile(_x5) {\n        return _updateUserProfile.apply(this, arguments);\n      }\n      return updateUserProfile;\n    }()\n  }, {\n    key: \"changePassword\",\n    value: function () {\n      var _changePassword = _asyncToGenerator(function* (currentPassword, newPassword) {\n        return this.request('/users/password', {\n          method: 'PUT',\n          body: JSON.stringify({\n            currentPassword: currentPassword,\n            newPassword: newPassword\n          })\n        });\n      });\n      function changePassword(_x6, _x7) {\n        return _changePassword.apply(this, arguments);\n      }\n      return changePassword;\n    }()\n  }, {\n    key: \"getUserStats\",\n    value: function () {\n      var _getUserStats = _asyncToGenerator(function* () {\n        return this.request('/users/stats');\n      });\n      function getUserStats() {\n        return _getUserStats.apply(this, arguments);\n      }\n      return getUserStats;\n    }()\n  }, {\n    key: \"getSports\",\n    value: function () {\n      var _getSports = _asyncToGenerator(function* () {\n        return this.request('/sports');\n      });\n      function getSports() {\n        return _getSports.apply(this, arguments);\n      }\n      return getSports;\n    }()\n  }, {\n    key: \"getSportById\",\n    value: function () {\n      var _getSportById = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}`);\n      });\n      function getSportById(_x8) {\n        return _getSportById.apply(this, arguments);\n      }\n      return getSportById;\n    }()\n  }, {\n    key: \"joinSport\",\n    value: function () {\n      var _joinSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/join`, {\n          method: 'POST'\n        });\n      });\n      function joinSport(_x9) {\n        return _joinSport.apply(this, arguments);\n      }\n      return joinSport;\n    }()\n  }, {\n    key: \"leaveSport\",\n    value: function () {\n      var _leaveSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/leave`, {\n          method: 'DELETE'\n        });\n      });\n      function leaveSport(_x0) {\n        return _leaveSport.apply(this, arguments);\n      }\n      return leaveSport;\n    }()\n  }, {\n    key: \"getUserSports\",\n    value: function () {\n      var _getUserSports = _asyncToGenerator(function* () {\n        return this.request('/sports/user/my-sports');\n      });\n      function getUserSports() {\n        return _getUserSports.apply(this, arguments);\n      }\n      return getUserSports;\n    }()\n  }, {\n    key: \"getSportRanking\",\n    value: function () {\n      var _getSportRanking = _asyncToGenerator(function* (sportId) {\n        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n        var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\n      });\n      function getSportRanking(_x1) {\n        return _getSportRanking.apply(this, arguments);\n      }\n      return getSportRanking;\n    }()\n  }, {\n    key: \"getContentsBySport\",\n    value: function () {\n      var _getContentsBySport = _asyncToGenerator(function* (sportId) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.type) params.append('type', filters.type);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/sport/${sportId}?${params.toString()}`);\n      });\n      function getContentsBySport(_x10) {\n        return _getContentsBySport.apply(this, arguments);\n      }\n      return getContentsBySport;\n    }()\n  }, {\n    key: \"getContentById\",\n    value: function () {\n      var _getContentById = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}`);\n      });\n      function getContentById(_x11) {\n        return _getContentById.apply(this, arguments);\n      }\n      return getContentById;\n    }()\n  }, {\n    key: \"getContentsByType\",\n    value: function () {\n      var _getContentsByType = _asyncToGenerator(function* (type) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/type/${type}?${params.toString()}`);\n      });\n      function getContentsByType(_x12) {\n        return _getContentsByType.apply(this, arguments);\n      }\n      return getContentsByType;\n    }()\n  }, {\n    key: \"getContentProgress\",\n    value: function () {\n      var _getContentProgress = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}/progress`);\n      });\n      function getContentProgress(_x13) {\n        return _getContentProgress.apply(this, arguments);\n      }\n      return getContentProgress;\n    }()\n  }, {\n    key: \"updateContentProgress\",\n    value: function () {\n      var _updateContentProgress = _asyncToGenerator(function* (contentId, progress) {\n        return this.request(`/contents/${contentId}/progress`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            progress: progress\n          })\n        });\n      });\n      function updateContentProgress(_x14, _x15) {\n        return _updateContentProgress.apply(this, arguments);\n      }\n      return updateContentProgress;\n    }()\n  }, {\n    key: \"getCompletedContents\",\n    value: function () {\n      var _getCompletedContents = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\n      });\n      function getCompletedContents() {\n        return _getCompletedContents.apply(this, arguments);\n      }\n      return getCompletedContents;\n    }()\n  }, {\n    key: \"submitScore\",\n    value: function () {\n      var _submitScore = _asyncToGenerator(function* (sportId, score, level) {\n        return this.request('/scores', {\n          method: 'POST',\n          body: JSON.stringify({\n            sportId: sportId,\n            score: score,\n            level: level\n          })\n        });\n      });\n      function submitScore(_x16, _x17, _x18) {\n        return _submitScore.apply(this, arguments);\n      }\n      return submitScore;\n    }()\n  }, {\n    key: \"getUserScores\",\n    value: function () {\n      var _getUserScores = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\n      });\n      function getUserScores() {\n        return _getUserScores.apply(this, arguments);\n      }\n      return getUserScores;\n    }()\n  }, {\n    key: \"getUserScoreBySport\",\n    value: function () {\n      var _getUserScoreBySport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/scores/user/${sportId}`);\n      });\n      function getUserScoreBySport(_x19) {\n        return _getUserScoreBySport.apply(this, arguments);\n      }\n      return getUserScoreBySport;\n    }()\n  }, {\n    key: \"getRanking\",\n    value: function () {\n      var _getRanking = _asyncToGenerator(function* () {\n        var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/scores/ranking?${params.toString()}`);\n      });\n      function getRanking() {\n        return _getRanking.apply(this, arguments);\n      }\n      return getRanking;\n    }()\n  }, {\n    key: \"getScoreStats\",\n    value: function () {\n      var _getScoreStats = _asyncToGenerator(function* () {\n        return this.request('/scores/stats');\n      });\n      function getScoreStats() {\n        return _getScoreStats.apply(this, arguments);\n      }\n      return getScoreStats;\n    }()\n  }, {\n    key: \"sendMessage\",\n    value: function () {\n      var _sendMessage = _asyncToGenerator(function* (message) {\n        return this.request('/chat/send', {\n          method: 'POST',\n          body: JSON.stringify({\n            message: message\n          })\n        });\n      });\n      function sendMessage(_x20) {\n        return _sendMessage.apply(this, arguments);\n      }\n      return sendMessage;\n    }()\n  }, {\n    key: \"getMessages\",\n    value: function () {\n      var _getMessages = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var before = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var params = new URLSearchParams();\n        if (limit) params.append('limit', limit);\n        if (offset) params.append('offset', offset);\n        if (before) params.append('before', before);\n        return this.request(`/chat/messages?${params.toString()}`);\n      });\n      function getMessages() {\n        return _getMessages.apply(this, arguments);\n      }\n      return getMessages;\n    }()\n  }, {\n    key: \"markMessagesAsRead\",\n    value: function () {\n      var _markMessagesAsRead = _asyncToGenerator(function* () {\n        return this.request('/chat/mark-read', {\n          method: 'PUT'\n        });\n      });\n      function markMessagesAsRead() {\n        return _markMessagesAsRead.apply(this, arguments);\n      }\n      return markMessagesAsRead;\n    }()\n  }, {\n    key: \"getChatStats\",\n    value: function () {\n      var _getChatStats = _asyncToGenerator(function* () {\n        return this.request('/chat/stats');\n      });\n      function getChatStats() {\n        return _getChatStats.apply(this, arguments);\n      }\n      return getChatStats;\n    }()\n  }, {\n    key: \"deleteMessage\",\n    value: function () {\n      var _deleteMessage = _asyncToGenerator(function* (messageId) {\n        return this.request(`/chat/${messageId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteMessage(_x21) {\n        return _deleteMessage.apply(this, arguments);\n      }\n      return deleteMessage;\n    }()\n  }]);\n}();\nvar apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","NODE_ENV","ApiService","_classCallCheck","token","_createClass","key","value","setToken","clearToken","_request","_asyncToGenerator","endpoint","options","arguments","length","undefined","url","config","_objectSpread","headers","Authorization","response","fetch","data","json","ok","Error","message","error","console","request","_x","apply","_register","userData","log","result","method","body","JSON","stringify","register","_x2","_login","email","password","login","_x3","_x4","_verifyToken","verifyToken","_logout","logout","_getUserProfile","getUserProfile","_updateUserProfile","updateUserProfile","_x5","_changePassword","currentPassword","newPassword","changePassword","_x6","_x7","_getUserStats","getUserStats","_getSports","getSports","_getSportById","sportId","getSportById","_x8","_joinSport","joinSport","_x9","_leaveSport","leaveSport","_x0","_getUserSports","getUserSports","_getSportRanking","limit","offset","getSportRanking","_x1","_getContentsBySport","filters","params","URLSearchParams","type","append","difficulty","toString","getContentsBySport","_x10","_getContentById","contentId","getContentById","_x11","_getContentsByType","getContentsByType","_x12","_getContentProgress","getContentProgress","_x13","_updateContentProgress","progress","updateContentProgress","_x14","_x15","_getCompletedContents","getCompletedContents","_submitScore","score","level","submitScore","_x16","_x17","_x18","_getUserScores","getUserScores","_getUserScoreBySport","getUserScoreBySport","_x19","_getRanking","getRanking","_getScoreStats","getScoreStats","_sendMessage","sendMessage","_x20","_getMessages","before","getMessages","_markMessagesAsRead","markMessagesAsRead","_getChatStats","getChatStats","_deleteMessage","messageId","deleteMessage","_x21","apiService"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/apiService.js"],"sourcesContent":["// Serviço para comunicação com a API\r\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \r\n  ? 'https://your-api-domain.com/api' \r\n  : 'http://localhost:3001/api';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.token = null;\r\n  }\r\n\r\n  // Configurar token de autenticação\r\n  setToken(token) {\r\n    this.token = token;\r\n  }\r\n\r\n  // Remover token\r\n  clearToken() {\r\n    this.token = null;\r\n  }\r\n\r\n  // Fazer requisição HTTP\r\n  async request(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    // Adicionar token se disponível\r\n    if (this.token) {\r\n      config.headers.Authorization = `Bearer ${this.token}`;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Erro na requisição');\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Erro na API:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ===== AUTENTICAÇÃO =====\r\n  \r\n  async register(userData) {\r\n    console.log('🔵 apiService.register chamado com:', userData);\r\n    const result = await this.request('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n    });\r\n    console.log('🔵 apiService.register retornou:', result);\r\n    return result;\r\n  }\r\n\r\n  async login(email, password) {\r\n    return this.request('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n  }\r\n\r\n  async verifyToken() {\r\n    return this.request('/auth/verify');\r\n  }\r\n\r\n  async logout() {\r\n    return this.request('/auth/logout', {\r\n      method: 'POST',\r\n    });\r\n  }\r\n\r\n  // ===== USUÁRIOS =====\r\n\r\n  async getUserProfile() {\r\n    return this.request('/users/profile');\r\n  }\r\n\r\n  async updateUserProfile(userData) {\r\n    return this.request('/users/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(userData),\r\n    });\r\n  }\r\n\r\n  async changePassword(currentPassword, newPassword) {\r\n    return this.request('/users/password', {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ currentPassword, newPassword }),\r\n    });\r\n  }\r\n\r\n  async getUserStats() {\r\n    return this.request('/users/stats');\r\n  }\r\n\r\n  // ===== ESPORTES =====\r\n\r\n  async getSports() {\r\n    return this.request('/sports');\r\n  }\r\n\r\n  async getSportById(sportId) {\r\n    return this.request(`/sports/${sportId}`);\r\n  }\r\n\r\n  async joinSport(sportId) {\r\n    return this.request(`/sports/${sportId}/join`, {\r\n      method: 'POST',\r\n    });\r\n  }\r\n\r\n  async leaveSport(sportId) {\r\n    return this.request(`/sports/${sportId}/leave`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  async getUserSports() {\r\n    return this.request('/sports/user/my-sports');\r\n  }\r\n\r\n  async getSportRanking(sportId, limit = 10, offset = 0) {\r\n    return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\r\n  }\r\n\r\n  // ===== CONTEÚDOS =====\r\n\r\n  async getContentsBySport(sportId, filters = {}) {\r\n    const params = new URLSearchParams();\r\n    if (filters.type) params.append('type', filters.type);\r\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\r\n    if (filters.limit) params.append('limit', filters.limit);\r\n    if (filters.offset) params.append('offset', filters.offset);\r\n\r\n    return this.request(`/contents/sport/${sportId}?${params.toString()}`);\r\n  }\r\n\r\n  async getContentById(contentId) {\r\n    return this.request(`/contents/${contentId}`);\r\n  }\r\n\r\n  async getContentsByType(type, filters = {}) {\r\n    const params = new URLSearchParams();\r\n    if (filters.sportId) params.append('sportId', filters.sportId);\r\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\r\n    if (filters.limit) params.append('limit', filters.limit);\r\n    if (filters.offset) params.append('offset', filters.offset);\r\n\r\n    return this.request(`/contents/type/${type}?${params.toString()}`);\r\n  }\r\n\r\n  async getContentProgress(contentId) {\r\n    return this.request(`/contents/${contentId}/progress`);\r\n  }\r\n\r\n  async updateContentProgress(contentId, progress) {\r\n    return this.request(`/contents/${contentId}/progress`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ progress }),\r\n    });\r\n  }\r\n\r\n  async getCompletedContents(limit = 20, offset = 0) {\r\n    return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\r\n  }\r\n\r\n  // ===== PONTUAÇÕES =====\r\n\r\n  async submitScore(sportId, score, level) {\r\n    return this.request('/scores', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ sportId, score, level }),\r\n    });\r\n  }\r\n\r\n  async getUserScores(limit = 20, offset = 0) {\r\n    return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\r\n  }\r\n\r\n  async getUserScoreBySport(sportId) {\r\n    return this.request(`/scores/user/${sportId}`);\r\n  }\r\n\r\n  async getRanking(filters = {}) {\r\n    const params = new URLSearchParams();\r\n    if (filters.sportId) params.append('sportId', filters.sportId);\r\n    if (filters.limit) params.append('limit', filters.limit);\r\n    if (filters.offset) params.append('offset', filters.offset);\r\n\r\n    return this.request(`/scores/ranking?${params.toString()}`);\r\n  }\r\n\r\n  async getScoreStats() {\r\n    return this.request('/scores/stats');\r\n  }\r\n\r\n  // ===== CHAT =====\r\n\r\n  async sendMessage(message) {\r\n    return this.request('/chat/send', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ message }),\r\n    });\r\n  }\r\n\r\n  async getMessages(limit = 50, offset = 0, before = null) {\r\n    const params = new URLSearchParams();\r\n    if (limit) params.append('limit', limit);\r\n    if (offset) params.append('offset', offset);\r\n    if (before) params.append('before', before);\r\n\r\n    return this.request(`/chat/messages?${params.toString()}`);\r\n  }\r\n\r\n  async markMessagesAsRead() {\r\n    return this.request('/chat/mark-read', {\r\n      method: 'PUT',\r\n    });\r\n  }\r\n\r\n  async getChatStats() {\r\n    return this.request('/chat/stats');\r\n  }\r\n\r\n  async deleteMessage(messageId) {\r\n    return this.request(`/chat/${messageId}`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n}\r\n\r\n// Instância singleton\r\nconst apiService = new ApiService();\r\n\r\nexport default apiService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}