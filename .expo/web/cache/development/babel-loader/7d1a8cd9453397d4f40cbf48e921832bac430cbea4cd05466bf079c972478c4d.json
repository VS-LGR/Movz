{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Storage from \"./utils/storage\";\nimport apiService from \"./services/apiService\";\nimport useCustomAlert from \"./hooks/useCustomAlert\";\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport HomeScreen from \"./screens/student/HomeScreen\";\nimport MyClassScreen from \"./screens/student/MyClassScreen\";\nimport StudentScoresScreen from \"./screens/student/StudentScoresScreen\";\nimport AttendanceScreen from \"./screens/student/AttendanceScreen\";\nimport RankingScreen from \"./screens/student/RankingScreen\";\nimport TutorialScreen from \"./screens/student/TutorialScreen\";\nimport ChatScreen from \"./screens/student/ChatScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\nimport TeacherRegisterScreen from \"./screens/auth/TeacherRegisterScreen\";\nimport InstitutionRegisterScreen from \"./screens/auth/InstitutionRegisterScreen\";\nimport InstitutionLoginScreen from \"./screens/auth/InstitutionLoginScreen\";\nimport InstitutionDashboardScreen from \"./screens/institution/InstitutionDashboardScreen\";\nimport TeacherClassesScreen from \"./screens/teacher/TeacherClassesScreen\";\nimport MyClassesScreen from \"./screens/teacher/MyClassesScreen\";\nimport TeacherScheduleScreen from \"./screens/teacher/TeacherScheduleScreen\";\nimport ClassManagementScreen from \"./screens/teacher/ClassManagementScreen\";\nimport CreateClassScreen from \"./screens/teacher/CreateClassScreen\";\nimport ClassScreen from \"./screens/teacher/ClassScreen\";\nimport AchievementsScreen from \"./screens/student/AchievementsScreen\";\nimport MedalsScreen from \"./screens/student/MedalsScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('login'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentScreen = _useState2[0],\n    setCurrentScreen = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isAuthenticated = _useState4[0],\n    setIsAuthenticated = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentUser = _useState6[0],\n    setCurrentUser = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isMenuVisible = _useState8[0],\n    setIsMenuVisible = _useState8[1];\n  var _useCustomAlert = useCustomAlert(),\n    alert = _useCustomAlert.alert,\n    showError = _useCustomAlert.showError,\n    hideAlert = _useCustomAlert.hideAlert;\n  useEffect(function () {\n    checkAuthStatus();\n  }, []);\n  var checkAuthStatus = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setCurrentScreen('login');\n        setIsAuthenticated(false);\n        setCurrentUser(null);\n        yield clearAuthData();\n      } catch (error) {\n        console.error('Erro ao verificar autenticação:', error);\n        yield clearAuthData();\n      }\n    });\n    return function checkAuthStatus() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var clearAuthData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield Storage.removeItem('authToken');\n      yield Storage.removeItem('userType');\n      yield Storage.removeItem('currentUser');\n      apiService.clearToken();\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      setCurrentScreen('login');\n    });\n    return function clearAuthData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function () {\n    var _ref3 = _asyncToGenerator(function* (userData, userType) {\n      try {\n        var finalUserType = userType || userData.userType || 'STUDENT';\n        var response;\n        if (finalUserType === 'INSTITUTION') {\n          response = yield apiService.loginInstitution(userData.email, userData.password);\n        } else {\n          response = yield apiService.login(userData.email, userData.password, finalUserType);\n        }\n        if (response.success) {\n          var _response$data = response.data,\n            token = _response$data.token,\n            user = _response$data.user,\n            institution = _response$data.institution;\n          yield Storage.setItem('authToken', token);\n          yield Storage.setItem('userType', finalUserType);\n          yield Storage.setItem('currentUser', JSON.stringify(institution || user));\n          apiService.setToken(token);\n          setCurrentUser(institution || user);\n          setIsAuthenticated(true);\n          switch (finalUserType) {\n            case 'STUDENT':\n              setCurrentScreen('home');\n              break;\n            case 'TEACHER':\n              setCurrentScreen('teacherClasses');\n              break;\n            case 'INSTITUTION':\n              setCurrentScreen('institutionDashboard');\n              break;\n            default:\n              setCurrentScreen('home');\n          }\n        } else {\n          throw new Error(response.message || 'Erro no login');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      }\n    });\n    return function handleLogin(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleInstitutionLogin = function () {\n    var _ref4 = _asyncToGenerator(function* (institutionData, userType) {\n      try {\n        if (institutionData.id && institutionData.name) {\n          var token = typeof window !== 'undefined' ? localStorage.getItem('authToken') : null;\n          if (token) {\n            apiService.setToken(token);\n            yield Storage.setItem('authToken', token);\n          }\n          var institutionWithType = _objectSpread(_objectSpread({}, institutionData), {}, {\n            userType: 'INSTITUTION'\n          });\n          setCurrentUser(institutionWithType);\n          setIsAuthenticated(true);\n          setCurrentScreen('institutionDashboard');\n          return;\n        }\n        var response = yield apiService.loginInstitution(institutionData.email, institutionData.password);\n        if (response.success) {\n          yield Storage.setItem('authToken', response.data.token);\n          apiService.setToken(response.data.token);\n          var _institutionWithType = _objectSpread(_objectSpread({}, response.data.institution), {}, {\n            userType: 'INSTITUTION'\n          });\n          setCurrentUser(_institutionWithType);\n          setIsAuthenticated(true);\n          setCurrentScreen('institutionDashboard');\n        } else {\n          throw new Error(response.message || 'Erro no login da instituição');\n        }\n      } catch (error) {\n        console.error('Institution login error:', error);\n        throw error;\n      }\n    });\n    return function handleInstitutionLogin(_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleRegister = function () {\n    var _ref5 = _asyncToGenerator(function* (userData) {\n      try {\n        var response = yield apiService.register(userData);\n        if (response.success) {\n          return {\n            success: true,\n            message: 'Estudante cadastrado com sucesso! Agora você pode fazer login.'\n          };\n        } else {\n          throw new Error(response.message || 'Erro no cadastro');\n        }\n      } catch (error) {\n        console.error('Register error:', error);\n        throw error;\n      }\n    });\n    return function handleRegister(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleTeacherRegister = function () {\n    var _ref6 = _asyncToGenerator(function* (userData) {\n      try {\n        var response = yield apiService.register(_objectSpread(_objectSpread({}, userData), {}, {\n          userType: 'TEACHER'\n        }));\n        if (response.success) {\n          return {\n            success: true,\n            message: 'Professor cadastrado com sucesso! Agora você pode fazer login.'\n          };\n        } else {\n          throw new Error(response.message || 'Erro no cadastro do professor');\n        }\n      } catch (error) {\n        console.error('Teacher register error:', error);\n        throw error;\n      }\n    });\n    return function handleTeacherRegister(_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleInstitutionRegister = function () {\n    var _ref7 = _asyncToGenerator(function* (institutionData) {\n      try {\n        var response = yield apiService.registerInstitution(institutionData);\n        if (response.success) {\n          return {\n            success: true,\n            message: 'Instituição cadastrada com sucesso! Agora você pode fazer login.'\n          };\n        } else {\n          throw new Error(response.message || 'Erro no cadastro da instituição');\n        }\n      } catch (error) {\n        console.error('Institution register error:', error);\n        throw error;\n      }\n    });\n    return function handleInstitutionRegister(_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        yield apiService.logout();\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        yield clearAuthData();\n        setCurrentScreen('login');\n      }\n    });\n    return function handleLogout() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleNavigate = function handleNavigate(screen) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (screen === 'logout') {\n      handleLogout();\n    } else {\n      if (params) {\n        window.navigationParams = params;\n      } else {\n        window.navigationParams = null;\n      }\n      setCurrentScreen(screen);\n      setIsMenuVisible(false);\n    }\n  };\n  var handleNavigateToRegister = function handleNavigateToRegister() {\n    setCurrentScreen('register');\n  };\n  var handleNavigateToTeacherRegister = function handleNavigateToTeacherRegister() {\n    setCurrentScreen('teacherRegister');\n  };\n  var handleNavigateToInstitutionRegister = function handleNavigateToInstitutionRegister() {\n    setCurrentScreen('institutionRegister');\n  };\n  var handleNavigateToInstitutionLogin = function handleNavigateToInstitutionLogin() {\n    setCurrentScreen('institutionLogin');\n  };\n  var handleNavigateToLogin = function handleNavigateToLogin() {\n    setCurrentScreen('login');\n  };\n  var renderScreen = function renderScreen() {\n    switch (currentScreen) {\n      case 'login':\n        return _jsx(LoginScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          onLogin: handleLogin,\n          onNavigateToRegister: handleNavigateToRegister,\n          onNavigateToTeacherRegister: handleNavigateToTeacherRegister,\n          onNavigateToInstitutionRegister: handleNavigateToInstitutionRegister\n        });\n      case 'register':\n        return _jsx(RegisterScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          onRegister: handleRegister,\n          onNavigateToLogin: handleNavigateToLogin\n        });\n      case 'teacherRegister':\n        return _jsx(TeacherRegisterScreen, {\n          onRegister: handleTeacherRegister,\n          onNavigateToLogin: handleNavigateToLogin\n        });\n      case 'institutionRegister':\n        return _jsx(InstitutionRegisterScreen, {\n          onRegister: handleInstitutionRegister,\n          onNavigateToLogin: handleNavigateToLogin,\n          onNavigate: handleNavigate\n        });\n      case 'institutionLogin':\n        return _jsx(InstitutionLoginScreen, {\n          onNavigate: handleNavigate,\n          onLogin: handleInstitutionLogin\n        });\n      case 'institutionDashboard':\n        return _jsx(InstitutionDashboardScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'home':\n        return _jsx(HomeScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'myClass':\n        return _jsx(MyClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'studentScores':\n        return _jsx(StudentScoresScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'attendance':\n        return _jsx(AttendanceScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'achievements':\n        return _jsx(AchievementsScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'medals':\n        return _jsx(MedalsScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'ranking':\n        return _jsx(RankingScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'tutorial':\n        return _jsx(TutorialScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'chat':\n        return _jsx(ChatScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'teacherClasses':\n        return _jsx(TeacherClassesScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'myClasses':\n        return _jsx(MyClassesScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'teacherSchedule':\n        return _jsx(TeacherScheduleScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'classManagement':\n        return _jsx(ClassManagementScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'createClass':\n        return _jsx(CreateClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'class':\n        return _jsx(ClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'teacherProfile':\n        return _jsx(TeacherClassesScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      default:\n        return _jsx(LoginScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          onLogin: handleLogin,\n          onNavigateToRegister: handleNavigateToRegister,\n          onNavigateToTeacherRegister: handleNavigateToTeacherRegister,\n          onNavigateToInstitutionRegister: handleNavigateToInstitutionRegister\n        });\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), renderScreen()]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StatusBar","Storage","apiService","useCustomAlert","LoginScreen","HomeScreen","MyClassScreen","StudentScoresScreen","AttendanceScreen","RankingScreen","TutorialScreen","ChatScreen","RegisterScreen","TeacherRegisterScreen","InstitutionRegisterScreen","InstitutionLoginScreen","InstitutionDashboardScreen","TeacherClassesScreen","MyClassesScreen","TeacherScheduleScreen","ClassManagementScreen","CreateClassScreen","ClassScreen","AchievementsScreen","MedalsScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","currentScreen","setCurrentScreen","_useState3","_useState4","isAuthenticated","setIsAuthenticated","_useState5","_useState6","currentUser","setCurrentUser","_useState7","_useState8","isMenuVisible","setIsMenuVisible","_useCustomAlert","alert","showError","hideAlert","checkAuthStatus","_ref","_asyncToGenerator","clearAuthData","error","console","apply","arguments","_ref2","removeItem","clearToken","handleLogin","_ref3","userData","userType","finalUserType","response","loginInstitution","email","password","login","success","_response$data","data","token","user","institution","setItem","JSON","stringify","setToken","Error","message","_x","_x2","handleInstitutionLogin","_ref4","institutionData","id","name","window","localStorage","getItem","institutionWithType","_objectSpread","_x3","_x4","handleRegister","_ref5","register","_x5","handleTeacherRegister","_ref6","_x6","handleInstitutionRegister","_ref7","registerInstitution","_x7","handleLogout","_ref8","logout","handleNavigate","screen","params","length","undefined","navigationParams","handleNavigateToRegister","handleNavigateToTeacherRegister","handleNavigateToInstitutionRegister","handleNavigateToInstitutionLogin","handleNavigateToLogin","renderScreen","onNavigate","onLogin","onNavigateToRegister","onNavigateToTeacherRegister","onNavigateToInstitutionRegister","onRegister","onNavigateToLogin","onLogout","children","style"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport Storage from './utils/storage'; // Custom storage wrapper\r\nimport apiService from './services/apiService';\r\nimport useCustomAlert from './hooks/useCustomAlert';\r\nimport LoginScreen from './screens/auth/LoginScreen';\r\nimport HomeScreen from './screens/student/HomeScreen';\r\nimport MyClassScreen from './screens/student/MyClassScreen';\r\nimport StudentScoresScreen from './screens/student/StudentScoresScreen';\r\nimport AttendanceScreen from './screens/student/AttendanceScreen';\r\nimport RankingScreen from './screens/student/RankingScreen';\r\nimport TutorialScreen from './screens/student/TutorialScreen';\r\nimport ChatScreen from './screens/student/ChatScreen';\r\nimport RegisterScreen from './screens/auth/RegisterScreen';\r\nimport TeacherRegisterScreen from './screens/auth/TeacherRegisterScreen';\r\nimport InstitutionRegisterScreen from './screens/auth/InstitutionRegisterScreen';\r\nimport InstitutionLoginScreen from './screens/auth/InstitutionLoginScreen';\r\nimport InstitutionDashboardScreen from './screens/institution/InstitutionDashboardScreen';\r\nimport TeacherClassesScreen from './screens/teacher/TeacherClassesScreen';\r\nimport MyClassesScreen from './screens/teacher/MyClassesScreen';\r\nimport TeacherScheduleScreen from './screens/teacher/TeacherScheduleScreen';\r\nimport ClassManagementScreen from './screens/teacher/ClassManagementScreen';\r\nimport CreateClassScreen from './screens/teacher/CreateClassScreen';\r\nimport ClassScreen from './screens/teacher/ClassScreen';\r\nimport AchievementsScreen from './screens/student/AchievementsScreen';\r\nimport MedalsScreen from './screens/student/MedalsScreen';\r\n\r\nexport default function App() {\r\n  const [currentScreen, setCurrentScreen] = useState('login');\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\r\n  const { alert, showError, hideAlert } = useCustomAlert();\r\n\r\n  // Verificar status de autenticação ao carregar o app\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      // Sempre iniciar na página de login\r\n      setCurrentScreen('login');\r\n      setIsAuthenticated(false);\r\n      setCurrentUser(null);\r\n      \r\n      // Limpar dados de autenticação antigos\r\n      await clearAuthData();\r\n    } catch (error) {\r\n      console.error('Erro ao verificar autenticação:', error);\r\n      await clearAuthData();\r\n    }\r\n  };\r\n\r\n  const clearAuthData = async () => {\r\n    await Storage.removeItem('authToken');\r\n    await Storage.removeItem('userType');\r\n    await Storage.removeItem('currentUser');\r\n    apiService.clearToken();\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n    setCurrentScreen('login');\r\n  };\r\n\r\n  const handleLogin = async (userData, userType) => {\r\n    try {\r\n      // Garantir que userType não seja undefined\r\n      const finalUserType = userType || userData.userType || 'STUDENT';\r\n      \r\n      let response;\r\n      \r\n      // Se for instituição, usar a API específica de login de instituição\r\n      if (finalUserType === 'INSTITUTION') {\r\n        response = await apiService.loginInstitution(userData.email, userData.password);\r\n      } else {\r\n        response = await apiService.login(userData.email, userData.password, finalUserType);\r\n      }\r\n      \r\n      \r\n      if (response.success) {\r\n        const { token, user, institution } = response.data;\r\n        \r\n        // Salvar dados de autenticação\r\n        await Storage.setItem('authToken', token);\r\n        await Storage.setItem('userType', finalUserType);\r\n        await Storage.setItem('currentUser', JSON.stringify(institution || user));\r\n        \r\n        // Configurar token no serviço\r\n        apiService.setToken(token);\r\n        \r\n        setCurrentUser(institution || user);\r\n        setIsAuthenticated(true);\r\n        \r\n        // Navegar para a tela apropriada\r\n        switch (finalUserType) {\r\n          case 'STUDENT':\r\n            setCurrentScreen('home');\r\n            break;\r\n          case 'TEACHER':\r\n            setCurrentScreen('teacherClasses');\r\n            break;\r\n          case 'INSTITUTION':\r\n            setCurrentScreen('institutionDashboard');\r\n            break;\r\n          default:\r\n            setCurrentScreen('home');\r\n        }\r\n      } else {\r\n        throw new Error(response.message || 'Erro no login');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleInstitutionLogin = async (institutionData, userType) => {\r\n    try {\r\n      // Se institutionData já contém os dados da instituição (vem do login bem-sucedido)\r\n      if (institutionData.id && institutionData.name) {\r\n        // Configurar token do localStorage\r\n        const token = typeof window !== 'undefined' ? localStorage.getItem('authToken') : null;\r\n        if (token) {\r\n          apiService.setToken(token);\r\n          // Também salvar no Storage para consistência\r\n          await Storage.setItem('authToken', token);\r\n        }\r\n        \r\n        // Adicionar userType ao objeto da instituição\r\n        const institutionWithType = {\r\n          ...institutionData,\r\n          userType: 'INSTITUTION'\r\n        };\r\n        \r\n        setCurrentUser(institutionWithType);\r\n        setIsAuthenticated(true);\r\n        setCurrentScreen('institutionDashboard');\r\n        return;\r\n      }\r\n      \r\n      // Se institutionData contém email e senha (login inicial)\r\n      const response = await apiService.loginInstitution(institutionData.email, institutionData.password);\r\n      if (response.success) {\r\n        // Salvar token\r\n        await Storage.setItem('authToken', response.data.token);\r\n        apiService.setToken(response.data.token);\r\n        \r\n        // Adicionar userType ao objeto da instituição\r\n        const institutionWithType = {\r\n          ...response.data.institution,\r\n          userType: 'INSTITUTION'\r\n        };\r\n        \r\n        setCurrentUser(institutionWithType);\r\n        setIsAuthenticated(true);\r\n        setCurrentScreen('institutionDashboard');\r\n      } else {\r\n        throw new Error(response.message || 'Erro no login da instituição');\r\n      }\r\n    } catch (error) {\r\n      console.error('Institution login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (userData) => {\r\n    try {\r\n      const response = await apiService.register(userData);\r\n      \r\n      if (response.success) {\r\n        // Retornar sucesso sem fazer login automático\r\n        return { success: true, message: 'Estudante cadastrado com sucesso! Agora você pode fazer login.' };\r\n      } else {\r\n        throw new Error(response.message || 'Erro no cadastro');\r\n      }\r\n    } catch (error) {\r\n      console.error('Register error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleTeacherRegister = async (userData) => {\r\n    try {\r\n      const response = await apiService.register({ ...userData, userType: 'TEACHER' });\r\n      \r\n      if (response.success) {\r\n        // Retornar sucesso sem fazer login automático\r\n        return { success: true, message: 'Professor cadastrado com sucesso! Agora você pode fazer login.' };\r\n      } else {\r\n        throw new Error(response.message || 'Erro no cadastro do professor');\r\n      }\r\n    } catch (error) {\r\n      console.error('Teacher register error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleInstitutionRegister = async (institutionData) => {\r\n    try {\r\n      const response = await apiService.registerInstitution(institutionData);\r\n      \r\n      if (response.success) {\r\n        // Retornar sucesso sem fazer login automático\r\n        return { success: true, message: 'Instituição cadastrada com sucesso! Agora você pode fazer login.' };\r\n      } else {\r\n        throw new Error(response.message || 'Erro no cadastro da instituição');\r\n      }\r\n    } catch (error) {\r\n      console.error('Institution register error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await apiService.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      await clearAuthData();\r\n      setCurrentScreen('login');\r\n    }\r\n  };\r\n\r\n  const handleNavigate = (screen, params = null) => {\r\n    if (screen === 'logout') {\r\n      handleLogout();\r\n    } else {\r\n      // Armazenar parâmetros de navegação\r\n      if (params) {\r\n        window.navigationParams = params;\r\n      } else {\r\n        window.navigationParams = null;\r\n      }\r\n      setCurrentScreen(screen);\r\n      setIsMenuVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleNavigateToRegister = () => {\r\n    setCurrentScreen('register');\r\n  };\r\n\r\n  const handleNavigateToTeacherRegister = () => {\r\n    setCurrentScreen('teacherRegister');\r\n  };\r\n\r\n  const handleNavigateToInstitutionRegister = () => {\r\n    setCurrentScreen('institutionRegister');\r\n  };\r\n\r\n  const handleNavigateToInstitutionLogin = () => {\r\n    setCurrentScreen('institutionLogin');\r\n  };\r\n\r\n  const handleNavigateToLogin = () => {\r\n    setCurrentScreen('login');\r\n  };\r\n\r\n  const renderScreen = () => {\r\n    switch (currentScreen) {\r\n      case 'login':\r\n        return (\r\n          <LoginScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            onLogin={handleLogin}\r\n            onNavigateToRegister={handleNavigateToRegister}\r\n            onNavigateToTeacherRegister={handleNavigateToTeacherRegister}\r\n            onNavigateToInstitutionRegister={handleNavigateToInstitutionRegister}\r\n          />\r\n        );\r\n      case 'register':\r\n        return (\r\n          <RegisterScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            onRegister={handleRegister}\r\n            onNavigateToLogin={handleNavigateToLogin}\r\n          />\r\n        );\r\n      case 'teacherRegister':\r\n        return (\r\n          <TeacherRegisterScreen\r\n            onRegister={handleTeacherRegister}\r\n            onNavigateToLogin={handleNavigateToLogin}\r\n          />\r\n        );\r\n      case 'institutionRegister':\r\n        return (\r\n          <InstitutionRegisterScreen\r\n            onRegister={handleInstitutionRegister}\r\n            onNavigateToLogin={handleNavigateToLogin}\r\n            onNavigate={handleNavigate}\r\n          />\r\n        );\r\n      case 'institutionLogin':\r\n        return (\r\n          <InstitutionLoginScreen\r\n            onNavigate={handleNavigate}\r\n            onLogin={handleInstitutionLogin}\r\n          />\r\n        );\r\n      case 'institutionDashboard':\r\n        return (\r\n          <InstitutionDashboardScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'home':\r\n        return (\r\n          <HomeScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'myClass':\r\n        return (\r\n          <MyClassScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'studentScores':\r\n        return (\r\n          <StudentScoresScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'attendance':\r\n        return (\r\n          <AttendanceScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'achievements':\r\n        return (\r\n          <AchievementsScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'medals':\r\n        return (\r\n          <MedalsScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'ranking':\r\n        return (\r\n          <RankingScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'tutorial':\r\n        return (\r\n          <TutorialScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'chat':\r\n        return (\r\n          <ChatScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'teacherClasses':\r\n        return (\r\n          <TeacherClassesScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'myClasses':\r\n        return (\r\n          <MyClassesScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'teacherSchedule':\r\n        return (\r\n          <TeacherScheduleScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'classManagement':\r\n        return (\r\n          <ClassManagementScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'createClass':\r\n        return (\r\n          <CreateClassScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'class':\r\n        return (\r\n          <ClassScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      case 'teacherProfile':\r\n        return (\r\n          <TeacherClassesScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            currentUser={currentUser}\r\n            onLogout={handleLogout}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <LoginScreen\r\n            isMenuVisible={isMenuVisible}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            onNavigate={handleNavigate}\r\n            onLogin={handleLogin}\r\n            onNavigateToRegister={handleNavigateToRegister}\r\n            onNavigateToTeacherRegister={handleNavigateToTeacherRegister}\r\n            onNavigateToInstitutionRegister={handleNavigateToInstitutionRegister}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StatusBar style=\"auto\" />\r\n      {renderScreen()}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}