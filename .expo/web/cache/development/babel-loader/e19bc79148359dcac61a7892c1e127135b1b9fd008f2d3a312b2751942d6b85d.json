{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font';\nimport Storage from \"./utils/storage\";\nimport apiService from \"./services/apiService\";\nimport useCustomAlert from \"./hooks/useCustomAlert\";\nimport CustomAlert from \"./components/CustomAlert\";\nimport { preloadImages } from \"./utils/imageCache\";\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport HomeScreen from \"./screens/student/HomeScreen\";\nimport MyClassScreen from \"./screens/student/MyClassScreen\";\nimport StudentScoresScreen from \"./screens/student/StudentScoresScreen\";\nimport AttendanceScreen from \"./screens/student/AttendanceScreen\";\nimport RankingScreen from \"./screens/student/RankingScreen\";\nimport TutorialScreen from \"./screens/student/TutorialScreen\";\nimport ChatScreen from \"./screens/student/ChatScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\nimport TeacherRegisterScreen from \"./screens/auth/TeacherRegisterScreen\";\nimport InstitutionRegisterScreen from \"./screens/auth/InstitutionRegisterScreen\";\nimport InstitutionLoginScreen from \"./screens/auth/InstitutionLoginScreen\";\nimport InstitutionDashboardScreen from \"./screens/institution/InstitutionDashboardScreen\";\nimport TeacherClassesScreen from \"./screens/teacher/TeacherClassesScreen\";\nimport MyClassesScreen from \"./screens/teacher/MyClassesScreen\";\nimport TeacherScheduleScreen from \"./screens/teacher/TeacherScheduleScreen\";\nimport ClassManagementScreen from \"./screens/teacher/ClassManagementScreen\";\nimport CreateClassScreen from \"./screens/teacher/CreateClassScreen\";\nimport ClassScreen from \"./screens/teacher/ClassScreen\";\nimport AttendanceListScreen from \"./screens/teacher/AttendanceListScreen\";\nimport AchievementsScreen from \"./screens/student/AchievementsScreen\";\nimport MedalsScreen from \"./screens/student/MedalsScreen\";\nimport CardCustomizationScreen from \"./screens/student/CardCustomizationScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('login'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentScreen = _useState2[0],\n    setCurrentScreen = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isAuthenticated = _useState4[0],\n    setIsAuthenticated = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentUser = _useState6[0],\n    setCurrentUser = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isMenuVisible = _useState8[0],\n    setIsMenuVisible = _useState8[1];\n  var _useCustomAlert = useCustomAlert(),\n    alert = _useCustomAlert.alert,\n    showError = _useCustomAlert.showError,\n    hideAlert = _useCustomAlert.hideAlert;\n  var _useFonts = useFonts({}),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  useEffect(function () {\n    preloadImages();\n    checkAuthStatus();\n  }, []);\n  var checkAuthStatus = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield Storage.getItem('authToken');\n        var userType = yield Storage.getItem('userType');\n        var _currentUser = yield Storage.getItem('currentUser');\n        console.log('🔍 App - Verificando autenticação:');\n        console.log('  - Token:', token ? token.substring(0, 20) + '...' : 'null');\n        console.log('  - UserType:', userType);\n        console.log('  - CurrentUser:', _currentUser ? 'present' : 'null');\n        if (token && userType && _currentUser) {\n          apiService.setToken(token);\n          setCurrentUser(JSON.parse(_currentUser));\n          setIsAuthenticated(true);\n          switch (userType) {\n            case 'STUDENT':\n              setCurrentScreen('home');\n              break;\n            case 'TEACHER':\n              setCurrentScreen('teacherClasses');\n              break;\n            case 'INSTITUTION':\n              setCurrentScreen('institutionDashboard');\n              break;\n            default:\n              setCurrentScreen('home');\n          }\n          console.log('✅ App - Usuário autenticado automaticamente');\n        } else {\n          yield clearAuthData();\n          console.log('❌ App - Nenhum token válido encontrado');\n        }\n      } catch (error) {\n        console.error('Erro ao verificar autenticação:', error);\n        showError('⚠️ Erro de Inicialização', 'Ocorreu um erro ao inicializar o aplicativo. Tente recarregar a página.');\n        yield clearAuthData();\n      }\n    });\n    return function checkAuthStatus() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var clearAuthData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield Storage.removeItem('authToken');\n      yield Storage.removeItem('userType');\n      yield Storage.removeItem('currentUser');\n      apiService.clearToken();\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      setCurrentScreen('login');\n    });\n    return function clearAuthData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function () {\n    var _ref3 = _asyncToGenerator(function* (userData, userType) {\n      try {\n        var finalUserType = userType || userData.userType || 'STUDENT';\n        var response;\n        if (finalUserType === 'INSTITUTION') {\n          response = yield apiService.loginInstitution(userData.email, userData.password);\n        } else {\n          response = yield apiService.login(userData.email, userData.password, finalUserType);\n        }\n        if (response.success) {\n          var _response$data = response.data,\n            token = _response$data.token,\n            user = _response$data.user,\n            institution = _response$data.institution;\n          yield Storage.setItem('authToken', token);\n          yield Storage.setItem('userType', finalUserType);\n          yield Storage.setItem('currentUser', JSON.stringify(institution || user));\n          apiService.setToken(token);\n          setCurrentUser(institution || user);\n          setIsAuthenticated(true);\n          switch (finalUserType) {\n            case 'STUDENT':\n              setCurrentScreen('home');\n              break;\n            case 'TEACHER':\n              setCurrentScreen('teacherClasses');\n              break;\n            case 'INSTITUTION':\n              setCurrentScreen('institutionDashboard');\n              break;\n            default:\n              setCurrentScreen('home');\n          }\n        } else {\n          var errorMessage = response.message || 'Erro no login';\n          showError('❌ Erro no Login', errorMessage);\n          throw new Error(errorMessage);\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        if (error.message.includes('Failed to fetch')) {\n          showError('🌐 Erro de Conexão', 'Não foi possível conectar ao servidor. Verifique sua internet e tente novamente.');\n        } else if (error.message.includes('401') || error.message.includes('Unauthorized')) {\n          showError('🔐 Credenciais Inválidas', 'Email ou senha incorretos. Verifique seus dados e tente novamente.');\n        } else if (error.message.includes('500') || error.message.includes('Internal Server Error')) {\n          showError('⚠️ Erro do Servidor', 'Ocorreu um erro interno. Tente novamente em alguns minutos.');\n        } else {\n          showError('❌ Erro no Login', error.message || 'Ocorreu um erro inesperado. Tente novamente.');\n        }\n        throw error;\n      }\n    });\n    return function handleLogin(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleInstitutionLogin = function () {\n    var _ref4 = _asyncToGenerator(function* (institutionData, userType) {\n      try {\n        if (institutionData.id && institutionData.name) {\n          var token = typeof window !== 'undefined' ? localStorage.getItem('authToken') : null;\n          if (token) {\n            apiService.setToken(token);\n            yield Storage.setItem('authToken', token);\n          }\n          var institutionWithType = _objectSpread(_objectSpread({}, institutionData), {}, {\n            userType: 'INSTITUTION'\n          });\n          setCurrentUser(institutionWithType);\n          setIsAuthenticated(true);\n          setCurrentScreen('institutionDashboard');\n          return;\n        }\n        var response = yield apiService.loginInstitution(institutionData.email, institutionData.password);\n        if (response.success) {\n          yield Storage.setItem('authToken', response.data.token);\n          apiService.setToken(response.data.token);\n          var _institutionWithType = _objectSpread(_objectSpread({}, response.data.institution), {}, {\n            userType: 'INSTITUTION'\n          });\n          setCurrentUser(_institutionWithType);\n          setIsAuthenticated(true);\n          setCurrentScreen('institutionDashboard');\n        } else {\n          throw new Error(response.message || 'Erro no login da instituição');\n        }\n      } catch (error) {\n        console.error('Institution login error:', error);\n        throw error;\n      }\n    });\n    return function handleInstitutionLogin(_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleRegister = function () {\n    var _ref5 = _asyncToGenerator(function* (userData) {\n      try {\n        var response = yield apiService.register(userData);\n        if (response.success) {\n          return {\n            success: true,\n            message: 'Estudante cadastrado com sucesso! Agora você pode fazer login.'\n          };\n        } else {\n          throw new Error(response.message || 'Erro no cadastro');\n        }\n      } catch (error) {\n        console.error('Register error:', error);\n        throw error;\n      }\n    });\n    return function handleRegister(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleTeacherRegister = function () {\n    var _ref6 = _asyncToGenerator(function* (userData) {\n      try {\n        var response = yield apiService.register(_objectSpread(_objectSpread({}, userData), {}, {\n          userType: 'TEACHER'\n        }));\n        if (response.success) {\n          return {\n            success: true,\n            message: 'Professor cadastrado com sucesso! Agora você pode fazer login.'\n          };\n        } else {\n          throw new Error(response.message || 'Erro no cadastro do professor');\n        }\n      } catch (error) {\n        console.error('Teacher register error:', error);\n        throw error;\n      }\n    });\n    return function handleTeacherRegister(_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleInstitutionRegister = function () {\n    var _ref7 = _asyncToGenerator(function* (institutionData) {\n      try {\n        var response = yield apiService.registerInstitution(institutionData);\n        if (response.success) {\n          return {\n            success: true,\n            message: 'Instituição cadastrada com sucesso! Agora você pode fazer login.'\n          };\n        } else {\n          throw new Error(response.message || 'Erro no cadastro da instituição');\n        }\n      } catch (error) {\n        console.error('Institution register error:', error);\n        throw error;\n      }\n    });\n    return function handleInstitutionRegister(_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        yield apiService.logout();\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        yield clearAuthData();\n        setCurrentScreen('login');\n      }\n    });\n    return function handleLogout() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleNavigate = function handleNavigate(screen) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (screen === 'logout') {\n      handleLogout();\n    } else {\n      if (params) {\n        window.navigationParams = params;\n      } else {\n        window.navigationParams = null;\n      }\n      setCurrentScreen(screen);\n      setIsMenuVisible(false);\n    }\n  };\n  var handleNavigateToRegister = function handleNavigateToRegister() {\n    setCurrentScreen('register');\n  };\n  var handleNavigateToTeacherRegister = function handleNavigateToTeacherRegister() {\n    setCurrentScreen('teacherRegister');\n  };\n  var handleNavigateToInstitutionRegister = function handleNavigateToInstitutionRegister() {\n    setCurrentScreen('institutionRegister');\n  };\n  var handleNavigateToInstitutionLogin = function handleNavigateToInstitutionLogin() {\n    setCurrentScreen('institutionLogin');\n  };\n  var handleNavigateToLogin = function handleNavigateToLogin() {\n    setCurrentScreen('login');\n  };\n  var renderScreen = function renderScreen() {\n    switch (currentScreen) {\n      case 'login':\n        return _jsx(LoginScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          onLogin: handleLogin,\n          onNavigateToRegister: handleNavigateToRegister,\n          onNavigateToTeacherRegister: handleNavigateToTeacherRegister,\n          onNavigateToInstitutionRegister: handleNavigateToInstitutionRegister\n        });\n      case 'register':\n        return _jsx(RegisterScreen, {\n          onNavigate: handleNavigate,\n          onRegister: handleRegister,\n          onNavigateToLogin: handleNavigateToLogin\n        });\n      case 'teacherRegister':\n        return _jsx(TeacherRegisterScreen, {\n          onRegister: handleTeacherRegister,\n          onNavigateToLogin: handleNavigateToLogin\n        });\n      case 'institutionRegister':\n        return _jsx(InstitutionRegisterScreen, {\n          onRegister: handleInstitutionRegister,\n          onNavigateToLogin: handleNavigateToLogin,\n          onNavigate: handleNavigate\n        });\n      case 'institutionLogin':\n        return _jsx(InstitutionLoginScreen, {\n          onNavigate: handleNavigate,\n          onLogin: handleInstitutionLogin\n        });\n      case 'institutionDashboard':\n        return _jsx(InstitutionDashboardScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'home':\n        return _jsx(HomeScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'myClass':\n        return _jsx(MyClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'studentScores':\n        return _jsx(StudentScoresScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'attendance':\n        return _jsx(AttendanceScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'achievements':\n        return _jsx(AchievementsScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'card-customization':\n        return _jsx(CardCustomizationScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'medals':\n        return _jsx(MedalsScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'ranking':\n        return _jsx(RankingScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'tutorial':\n        return _jsx(TutorialScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'chat':\n        return _jsx(ChatScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'teacherClasses':\n        return _jsx(TeacherClassesScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'myClasses':\n        return _jsx(MyClassesScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'teacherSchedule':\n        return _jsx(TeacherScheduleScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'classManagement':\n        return _jsx(ClassManagementScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'createClass':\n        return _jsx(CreateClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'class':\n        return _jsx(ClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'teacherProfile':\n        return _jsx(TeacherClassesScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'attendanceList':\n        return _jsx(AttendanceListScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      default:\n        return _jsx(LoginScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: handleNavigate,\n          onLogin: handleLogin,\n          onNavigateToRegister: handleNavigateToRegister,\n          onNavigateToTeacherRegister: handleNavigateToTeacherRegister,\n          onNavigateToInstitutionRegister: handleNavigateToInstitutionRegister\n        });\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), renderScreen(), _jsx(CustomAlert, {\n      visible: alert.visible,\n      title: alert.title,\n      message: alert.message,\n      type: alert.type,\n      onClose: hideAlert\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StatusBar","useFonts","Storage","apiService","useCustomAlert","CustomAlert","preloadImages","LoginScreen","HomeScreen","MyClassScreen","StudentScoresScreen","AttendanceScreen","RankingScreen","TutorialScreen","ChatScreen","RegisterScreen","TeacherRegisterScreen","InstitutionRegisterScreen","InstitutionLoginScreen","InstitutionDashboardScreen","TeacherClassesScreen","MyClassesScreen","TeacherScheduleScreen","ClassManagementScreen","CreateClassScreen","ClassScreen","AttendanceListScreen","AchievementsScreen","MedalsScreen","CardCustomizationScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","currentScreen","setCurrentScreen","_useState3","_useState4","isAuthenticated","setIsAuthenticated","_useState5","_useState6","currentUser","setCurrentUser","_useState7","_useState8","isMenuVisible","setIsMenuVisible","_useCustomAlert","alert","showError","hideAlert","_useFonts","_useFonts2","fontsLoaded","checkAuthStatus","_ref","_asyncToGenerator","token","getItem","userType","console","log","substring","setToken","JSON","parse","clearAuthData","error","apply","arguments","_ref2","removeItem","clearToken","handleLogin","_ref3","userData","finalUserType","response","loginInstitution","email","password","login","success","_response$data","data","user","institution","setItem","stringify","errorMessage","message","Error","includes","_x","_x2","handleInstitutionLogin","_ref4","institutionData","id","name","window","localStorage","institutionWithType","_objectSpread","_x3","_x4","handleRegister","_ref5","register","_x5","handleTeacherRegister","_ref6","_x6","handleInstitutionRegister","_ref7","registerInstitution","_x7","handleLogout","_ref8","logout","handleNavigate","screen","params","length","undefined","navigationParams","handleNavigateToRegister","handleNavigateToTeacherRegister","handleNavigateToInstitutionRegister","handleNavigateToInstitutionLogin","handleNavigateToLogin","renderScreen","onNavigate","onLogin","onNavigateToRegister","onNavigateToTeacherRegister","onNavigateToInstitutionRegister","onRegister","onNavigateToLogin","onLogout","children","style","visible","title","type","onClose"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font';\nimport Storage from './utils/storage'; // Custom storage wrapper\nimport apiService from './services/apiService';\nimport useCustomAlert from './hooks/useCustomAlert';\nimport CustomAlert from './components/CustomAlert';\nimport { preloadImages } from './utils/imageCache';\nimport LoginScreen from './screens/auth/LoginScreen';\nimport HomeScreen from './screens/student/HomeScreen';\nimport MyClassScreen from './screens/student/MyClassScreen';\nimport StudentScoresScreen from './screens/student/StudentScoresScreen';\nimport AttendanceScreen from './screens/student/AttendanceScreen';\nimport RankingScreen from './screens/student/RankingScreen';\nimport TutorialScreen from './screens/student/TutorialScreen';\nimport ChatScreen from './screens/student/ChatScreen';\nimport RegisterScreen from './screens/auth/RegisterScreen';\nimport TeacherRegisterScreen from './screens/auth/TeacherRegisterScreen';\nimport InstitutionRegisterScreen from './screens/auth/InstitutionRegisterScreen';\nimport InstitutionLoginScreen from './screens/auth/InstitutionLoginScreen';\nimport InstitutionDashboardScreen from './screens/institution/InstitutionDashboardScreen';\nimport TeacherClassesScreen from './screens/teacher/TeacherClassesScreen';\nimport MyClassesScreen from './screens/teacher/MyClassesScreen';\nimport TeacherScheduleScreen from './screens/teacher/TeacherScheduleScreen';\nimport ClassManagementScreen from './screens/teacher/ClassManagementScreen';\nimport CreateClassScreen from './screens/teacher/CreateClassScreen';\nimport ClassScreen from './screens/teacher/ClassScreen';\nimport AttendanceListScreen from './screens/teacher/AttendanceListScreen';\nimport AchievementsScreen from './screens/student/AchievementsScreen';\nimport MedalsScreen from './screens/student/MedalsScreen';\nimport CardCustomizationScreen from './screens/student/CardCustomizationScreen';\n\nexport default function App() {\n  const [currentScreen, setCurrentScreen] = useState('login');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const { alert, showError, hideAlert } = useCustomAlert();\n\n  // Carregar fontes (removido temporariamente para evitar erros)\n  const [fontsLoaded] = useFonts({});\n\n  // Verificar status de autenticação ao carregar o app\n  useEffect(() => {\n    // Pré-carregar imagens para melhor performance\n    preloadImages();\n    checkAuthStatus();\n  }, []);\n\n  // Fontes carregadas (removido temporariamente)\n\n  const checkAuthStatus = async () => {\n    try {\n      // Verificar se há token válido no localStorage\n      const token = await Storage.getItem('authToken');\n      const userType = await Storage.getItem('userType');\n      const currentUser = await Storage.getItem('currentUser');\n      \n      console.log('🔍 App - Verificando autenticação:');\n      console.log('  - Token:', token ? token.substring(0, 20) + '...' : 'null');\n      console.log('  - UserType:', userType);\n      console.log('  - CurrentUser:', currentUser ? 'present' : 'null');\n      \n      if (token && userType && currentUser) {\n        // Configurar token no apiService\n        apiService.setToken(token);\n        setCurrentUser(JSON.parse(currentUser));\n        setIsAuthenticated(true);\n        \n        // Navegar para a tela apropriada\n        switch (userType) {\n          case 'STUDENT':\n            setCurrentScreen('home');\n            break;\n          case 'TEACHER':\n            setCurrentScreen('teacherClasses');\n            break;\n          case 'INSTITUTION':\n            setCurrentScreen('institutionDashboard');\n            break;\n          default:\n            setCurrentScreen('home');\n        }\n        console.log('✅ App - Usuário autenticado automaticamente');\n      } else {\n        // Limpar dados de autenticação antigos\n        await clearAuthData();\n        console.log('❌ App - Nenhum token válido encontrado');\n      }\n    } catch (error) {\n      console.error('Erro ao verificar autenticação:', error);\n      showError('⚠️ Erro de Inicialização', 'Ocorreu um erro ao inicializar o aplicativo. Tente recarregar a página.');\n      await clearAuthData();\n    }\n  };\n\n  const clearAuthData = async () => {\n    await Storage.removeItem('authToken');\n    await Storage.removeItem('userType');\n    await Storage.removeItem('currentUser');\n    apiService.clearToken();\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    setCurrentScreen('login');\n  };\n\n  const handleLogin = async (userData, userType) => {\n    try {\n      // Garantir que userType não seja undefined\n      const finalUserType = userType || userData.userType || 'STUDENT';\n      \n      let response;\n      \n      // Se for instituição, usar a API específica de login de instituição\n      if (finalUserType === 'INSTITUTION') {\n        response = await apiService.loginInstitution(userData.email, userData.password);\n      } else {\n        response = await apiService.login(userData.email, userData.password, finalUserType);\n      }\n      \n      \n      if (response.success) {\n        const { token, user, institution } = response.data;\n        \n        // Salvar dados de autenticação\n        await Storage.setItem('authToken', token);\n        await Storage.setItem('userType', finalUserType);\n        await Storage.setItem('currentUser', JSON.stringify(institution || user));\n        \n        // Configurar token no serviço\n        apiService.setToken(token);\n        \n        setCurrentUser(institution || user);\n        setIsAuthenticated(true);\n        \n        // Navegar para a tela apropriada\n        switch (finalUserType) {\n          case 'STUDENT':\n            setCurrentScreen('home');\n            break;\n          case 'TEACHER':\n            setCurrentScreen('teacherClasses');\n            break;\n          case 'INSTITUTION':\n            setCurrentScreen('institutionDashboard');\n            break;\n          default:\n            setCurrentScreen('home');\n        }\n      } else {\n        // Mostrar erro específico baseado na resposta\n        const errorMessage = response.message || 'Erro no login';\n        showError('❌ Erro no Login', errorMessage);\n        throw new Error(errorMessage);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      \n      // Tratar diferentes tipos de erro\n      if (error.message.includes('Failed to fetch')) {\n        showError('🌐 Erro de Conexão', 'Não foi possível conectar ao servidor. Verifique sua internet e tente novamente.');\n      } else if (error.message.includes('401') || error.message.includes('Unauthorized')) {\n        showError('🔐 Credenciais Inválidas', 'Email ou senha incorretos. Verifique seus dados e tente novamente.');\n      } else if (error.message.includes('500') || error.message.includes('Internal Server Error')) {\n        showError('⚠️ Erro do Servidor', 'Ocorreu um erro interno. Tente novamente em alguns minutos.');\n      } else {\n        showError('❌ Erro no Login', error.message || 'Ocorreu um erro inesperado. Tente novamente.');\n      }\n      \n      throw error;\n    }\n  };\n\n  const handleInstitutionLogin = async (institutionData, userType) => {\n    try {\n      // Se institutionData já contém os dados da instituição (vem do login bem-sucedido)\n      if (institutionData.id && institutionData.name) {\n        // Configurar token do localStorage\n        const token = typeof window !== 'undefined' ? localStorage.getItem('authToken') : null;\n        if (token) {\n          apiService.setToken(token);\n          // Também salvar no Storage para consistência\n          await Storage.setItem('authToken', token);\n        }\n        \n        // Adicionar userType ao objeto da instituição\n        const institutionWithType = {\n          ...institutionData,\n          userType: 'INSTITUTION'\n        };\n        \n        setCurrentUser(institutionWithType);\n        setIsAuthenticated(true);\n        setCurrentScreen('institutionDashboard');\n        return;\n      }\n      \n      // Se institutionData contém email e senha (login inicial)\n      const response = await apiService.loginInstitution(institutionData.email, institutionData.password);\n      if (response.success) {\n        // Salvar token\n        await Storage.setItem('authToken', response.data.token);\n        apiService.setToken(response.data.token);\n        \n        // Adicionar userType ao objeto da instituição\n        const institutionWithType = {\n          ...response.data.institution,\n          userType: 'INSTITUTION'\n        };\n        \n        setCurrentUser(institutionWithType);\n        setIsAuthenticated(true);\n        setCurrentScreen('institutionDashboard');\n      } else {\n        throw new Error(response.message || 'Erro no login da instituição');\n      }\n    } catch (error) {\n      console.error('Institution login error:', error);\n      throw error;\n    }\n  };\n\n  const handleRegister = async (userData) => {\n    try {\n      const response = await apiService.register(userData);\n      \n      if (response.success) {\n        // Retornar sucesso sem fazer login automático\n        return { success: true, message: 'Estudante cadastrado com sucesso! Agora você pode fazer login.' };\n      } else {\n        throw new Error(response.message || 'Erro no cadastro');\n      }\n    } catch (error) {\n      console.error('Register error:', error);\n      throw error;\n    }\n  };\n\n  const handleTeacherRegister = async (userData) => {\n    try {\n      const response = await apiService.register({ ...userData, userType: 'TEACHER' });\n      \n      if (response.success) {\n        // Retornar sucesso sem fazer login automático\n        return { success: true, message: 'Professor cadastrado com sucesso! Agora você pode fazer login.' };\n      } else {\n        throw new Error(response.message || 'Erro no cadastro do professor');\n      }\n    } catch (error) {\n      console.error('Teacher register error:', error);\n      throw error;\n    }\n  };\n\n  const handleInstitutionRegister = async (institutionData) => {\n    try {\n      const response = await apiService.registerInstitution(institutionData);\n      \n      if (response.success) {\n        // Retornar sucesso sem fazer login automático\n        return { success: true, message: 'Instituição cadastrada com sucesso! Agora você pode fazer login.' };\n      } else {\n        throw new Error(response.message || 'Erro no cadastro da instituição');\n      }\n    } catch (error) {\n      console.error('Institution register error:', error);\n      throw error;\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await apiService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      await clearAuthData();\n      setCurrentScreen('login');\n    }\n  };\n\n  const handleNavigate = (screen, params = null) => {\n    if (screen === 'logout') {\n      handleLogout();\n    } else {\n      // Armazenar parâmetros de navegação\n      if (params) {\n        window.navigationParams = params;\n      } else {\n        window.navigationParams = null;\n      }\n      setCurrentScreen(screen);\n      setIsMenuVisible(false);\n    }\n  };\n\n  const handleNavigateToRegister = () => {\n    setCurrentScreen('register');\n  };\n\n  const handleNavigateToTeacherRegister = () => {\n    setCurrentScreen('teacherRegister');\n  };\n\n  const handleNavigateToInstitutionRegister = () => {\n    setCurrentScreen('institutionRegister');\n  };\n\n  const handleNavigateToInstitutionLogin = () => {\n    setCurrentScreen('institutionLogin');\n  };\n\n  const handleNavigateToLogin = () => {\n    setCurrentScreen('login');\n  };\n\n  const renderScreen = () => {\n    switch (currentScreen) {\n      case 'login':\n        return (\n          <LoginScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            onLogin={handleLogin}\n            onNavigateToRegister={handleNavigateToRegister}\n            onNavigateToTeacherRegister={handleNavigateToTeacherRegister}\n            onNavigateToInstitutionRegister={handleNavigateToInstitutionRegister}\n          />\n        );\n      case 'register':\n        return (\n          <RegisterScreen\n            onNavigate={handleNavigate}\n            onRegister={handleRegister}\n            onNavigateToLogin={handleNavigateToLogin}\n          />\n        );\n      case 'teacherRegister':\n        return (\n          <TeacherRegisterScreen\n            onRegister={handleTeacherRegister}\n            onNavigateToLogin={handleNavigateToLogin}\n          />\n        );\n      case 'institutionRegister':\n        return (\n          <InstitutionRegisterScreen\n            onRegister={handleInstitutionRegister}\n            onNavigateToLogin={handleNavigateToLogin}\n            onNavigate={handleNavigate}\n          />\n        );\n      case 'institutionLogin':\n        return (\n          <InstitutionLoginScreen\n            onNavigate={handleNavigate}\n            onLogin={handleInstitutionLogin}\n          />\n        );\n      case 'institutionDashboard':\n        return (\n          <InstitutionDashboardScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'home':\n        return (\n          <HomeScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'myClass':\n        return (\n          <MyClassScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'studentScores':\n        return (\n          <StudentScoresScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'attendance':\n        return (\n          <AttendanceScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'achievements':\n        return (\n          <AchievementsScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'card-customization':\n        return (\n          <CardCustomizationScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'medals':\n        return (\n          <MedalsScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'ranking':\n        return (\n          <RankingScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'tutorial':\n        return (\n          <TutorialScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'chat':\n        return (\n          <ChatScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'teacherClasses':\n        return (\n          <TeacherClassesScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'myClasses':\n        return (\n          <MyClassesScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'teacherSchedule':\n        return (\n          <TeacherScheduleScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'classManagement':\n        return (\n          <ClassManagementScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'createClass':\n        return (\n          <CreateClassScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'class':\n        return (\n          <ClassScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'teacherProfile':\n        return (\n          <TeacherClassesScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      case 'attendanceList':\n        return (\n          <AttendanceListScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            currentUser={currentUser}\n            onLogout={handleLogout}\n          />\n        );\n      default:\n        return (\n          <LoginScreen\n            isMenuVisible={isMenuVisible}\n            setIsMenuVisible={setIsMenuVisible}\n            onNavigate={handleNavigate}\n            onLogin={handleLogin}\n            onNavigateToRegister={handleNavigateToRegister}\n            onNavigateToTeacherRegister={handleNavigateToTeacherRegister}\n            onNavigateToInstitutionRegister={handleNavigateToInstitutionRegister}\n          />\n        );\n    }\n  };\n\n  return (\n    <>\n      <StatusBar style=\"auto\" />\n      {renderScreen()}\n      <CustomAlert\n        visible={alert.visible}\n        title={alert.title}\n        message={alert.message}\n        type={alert.type}\n        onClose={hideAlert}\n      />\n    </>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,OAAO;AACd,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,SAASC,aAAa;AACtB,OAAOC,WAAW;AAClB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,mBAAmB;AAC1B,OAAOC,gBAAgB;AACvB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,OAAOC,qBAAqB;AAC5B,OAAOC,yBAAyB;AAChC,OAAOC,sBAAsB;AAC7B,OAAOC,0BAA0B;AACjC,OAAOC,oBAAoB;AAC3B,OAAOC,eAAe;AACtB,OAAOC,qBAAqB;AAC5B,OAAOC,qBAAqB;AAC5B,OAAOC,iBAAiB;AACxB,OAAOC,WAAW;AAClB,OAAOC,oBAAoB;AAC3B,OAAOC,kBAAkB;AACzB,OAAOC,YAAY;AACnB,OAAOC,uBAAuB;AAAkD,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAEhF,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA0CvC,QAAQ,CAAC,OAAO,CAAC;IAAAwC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAA8C5C,QAAQ,CAAC,KAAK,CAAC;IAAA6C,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAAG,UAAA,GAAsChD,QAAQ,CAAC,IAAI,CAAC;IAAAiD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA7CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAA0CpD,QAAQ,CAAC,KAAK,CAAC;IAAAqD,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAlDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,eAAA,GAAwClD,cAAc,CAAC,CAAC;IAAhDmD,KAAK,GAAAD,eAAA,CAALC,KAAK;IAAEC,SAAS,GAAAF,eAAA,CAATE,SAAS;IAAEC,SAAS,GAAAH,eAAA,CAATG,SAAS;EAGnC,IAAAC,SAAA,GAAsBzD,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA0D,UAAA,GAAApB,cAAA,CAAAmB,SAAA;IAA3BE,WAAW,GAAAD,UAAA;EAGlB5D,SAAS,CAAC,YAAM;IAEdO,aAAa,CAAC,CAAC;IACfuD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAIN,IAAMA,eAAe;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAClC,IAAI;QAEF,IAAMC,KAAK,SAAS9D,OAAO,CAAC+D,OAAO,CAAC,WAAW,CAAC;QAChD,IAAMC,QAAQ,SAAShE,OAAO,CAAC+D,OAAO,CAAC,UAAU,CAAC;QAClD,IAAMjB,YAAW,SAAS9C,OAAO,CAAC+D,OAAO,CAAC,aAAa,CAAC;QAExDE,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjDD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,KAAK,GAAGA,KAAK,CAACK,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;QAC1EF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;QACtCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEpB,YAAW,GAAG,SAAS,GAAG,MAAM,CAAC;QAEjE,IAAIgB,KAAK,IAAIE,QAAQ,IAAIlB,YAAW,EAAE;UAEpC7C,UAAU,CAACmE,QAAQ,CAACN,KAAK,CAAC;UAC1Bf,cAAc,CAACsB,IAAI,CAACC,KAAK,CAACxB,YAAW,CAAC,CAAC;UACvCH,kBAAkB,CAAC,IAAI,CAAC;UAGxB,QAAQqB,QAAQ;YACd,KAAK,SAAS;cACZzB,gBAAgB,CAAC,MAAM,CAAC;cACxB;YACF,KAAK,SAAS;cACZA,gBAAgB,CAAC,gBAAgB,CAAC;cAClC;YACF,KAAK,aAAa;cAChBA,gBAAgB,CAAC,sBAAsB,CAAC;cACxC;YACF;cACEA,gBAAgB,CAAC,MAAM,CAAC;UAC5B;UACA0B,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;QAC5D,CAAC,MAAM;UAEL,MAAMK,aAAa,CAAC,CAAC;UACrBN,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACvD;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDlB,SAAS,CAAC,0BAA0B,EAAE,yEAAyE,CAAC;QAChH,MAAMiB,aAAa,CAAC,CAAC;MACvB;IACF,CAAC;IAAA,gBA3CKZ,eAAeA,CAAA;MAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GA2CpB;EAED,IAAMH,aAAa;IAAA,IAAAI,KAAA,GAAAd,iBAAA,CAAG,aAAY;MAChC,MAAM7D,OAAO,CAAC4E,UAAU,CAAC,WAAW,CAAC;MACrC,MAAM5E,OAAO,CAAC4E,UAAU,CAAC,UAAU,CAAC;MACpC,MAAM5E,OAAO,CAAC4E,UAAU,CAAC,aAAa,CAAC;MACvC3E,UAAU,CAAC4E,UAAU,CAAC,CAAC;MACvB9B,cAAc,CAAC,IAAI,CAAC;MACpBJ,kBAAkB,CAAC,KAAK,CAAC;MACzBJ,gBAAgB,CAAC,OAAO,CAAC;IAC3B,CAAC;IAAA,gBARKgC,aAAaA,CAAA;MAAA,OAAAI,KAAA,CAAAF,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQlB;EAED,IAAMI,WAAW;IAAA,IAAAC,KAAA,GAAAlB,iBAAA,CAAG,WAAOmB,QAAQ,EAAEhB,QAAQ,EAAK;MAChD,IAAI;QAEF,IAAMiB,aAAa,GAAGjB,QAAQ,IAAIgB,QAAQ,CAAChB,QAAQ,IAAI,SAAS;QAEhE,IAAIkB,QAAQ;QAGZ,IAAID,aAAa,KAAK,aAAa,EAAE;UACnCC,QAAQ,SAASjF,UAAU,CAACkF,gBAAgB,CAACH,QAAQ,CAACI,KAAK,EAAEJ,QAAQ,CAACK,QAAQ,CAAC;QACjF,CAAC,MAAM;UACLH,QAAQ,SAASjF,UAAU,CAACqF,KAAK,CAACN,QAAQ,CAACI,KAAK,EAAEJ,QAAQ,CAACK,QAAQ,EAAEJ,aAAa,CAAC;QACrF;QAGA,IAAIC,QAAQ,CAACK,OAAO,EAAE;UACpB,IAAAC,cAAA,GAAqCN,QAAQ,CAACO,IAAI;YAA1C3B,KAAK,GAAA0B,cAAA,CAAL1B,KAAK;YAAE4B,IAAI,GAAAF,cAAA,CAAJE,IAAI;YAAEC,WAAW,GAAAH,cAAA,CAAXG,WAAW;UAGhC,MAAM3F,OAAO,CAAC4F,OAAO,CAAC,WAAW,EAAE9B,KAAK,CAAC;UACzC,MAAM9D,OAAO,CAAC4F,OAAO,CAAC,UAAU,EAAEX,aAAa,CAAC;UAChD,MAAMjF,OAAO,CAAC4F,OAAO,CAAC,aAAa,EAAEvB,IAAI,CAACwB,SAAS,CAACF,WAAW,IAAID,IAAI,CAAC,CAAC;UAGzEzF,UAAU,CAACmE,QAAQ,CAACN,KAAK,CAAC;UAE1Bf,cAAc,CAAC4C,WAAW,IAAID,IAAI,CAAC;UACnC/C,kBAAkB,CAAC,IAAI,CAAC;UAGxB,QAAQsC,aAAa;YACnB,KAAK,SAAS;cACZ1C,gBAAgB,CAAC,MAAM,CAAC;cACxB;YACF,KAAK,SAAS;cACZA,gBAAgB,CAAC,gBAAgB,CAAC;cAClC;YACF,KAAK,aAAa;cAChBA,gBAAgB,CAAC,sBAAsB,CAAC;cACxC;YACF;cACEA,gBAAgB,CAAC,MAAM,CAAC;UAC5B;QACF,CAAC,MAAM;UAEL,IAAMuD,YAAY,GAAGZ,QAAQ,CAACa,OAAO,IAAI,eAAe;UACxDzC,SAAS,CAAC,iBAAiB,EAAEwC,YAAY,CAAC;UAC1C,MAAM,IAAIE,KAAK,CAACF,YAAY,CAAC;QAC/B;MACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QAGpC,IAAIA,KAAK,CAACuB,OAAO,CAACE,QAAQ,CAAC,iBAAiB,CAAC,EAAE;UAC7C3C,SAAS,CAAC,oBAAoB,EAAE,kFAAkF,CAAC;QACrH,CAAC,MAAM,IAAIkB,KAAK,CAACuB,OAAO,CAACE,QAAQ,CAAC,KAAK,CAAC,IAAIzB,KAAK,CAACuB,OAAO,CAACE,QAAQ,CAAC,cAAc,CAAC,EAAE;UAClF3C,SAAS,CAAC,0BAA0B,EAAE,oEAAoE,CAAC;QAC7G,CAAC,MAAM,IAAIkB,KAAK,CAACuB,OAAO,CAACE,QAAQ,CAAC,KAAK,CAAC,IAAIzB,KAAK,CAACuB,OAAO,CAACE,QAAQ,CAAC,uBAAuB,CAAC,EAAE;UAC3F3C,SAAS,CAAC,qBAAqB,EAAE,6DAA6D,CAAC;QACjG,CAAC,MAAM;UACLA,SAAS,CAAC,iBAAiB,EAAEkB,KAAK,CAACuB,OAAO,IAAI,8CAA8C,CAAC;QAC/F;QAEA,MAAMvB,KAAK;MACb;IACF,CAAC;IAAA,gBAjEKM,WAAWA,CAAAoB,EAAA,EAAAC,GAAA;MAAA,OAAApB,KAAA,CAAAN,KAAA,OAAAC,SAAA;IAAA;EAAA,GAiEhB;EAED,IAAM0B,sBAAsB;IAAA,IAAAC,KAAA,GAAAxC,iBAAA,CAAG,WAAOyC,eAAe,EAAEtC,QAAQ,EAAK;MAClE,IAAI;QAEF,IAAIsC,eAAe,CAACC,EAAE,IAAID,eAAe,CAACE,IAAI,EAAE;UAE9C,IAAM1C,KAAK,GAAG,OAAO2C,MAAM,KAAK,WAAW,GAAGC,YAAY,CAAC3C,OAAO,CAAC,WAAW,CAAC,GAAG,IAAI;UACtF,IAAID,KAAK,EAAE;YACT7D,UAAU,CAACmE,QAAQ,CAACN,KAAK,CAAC;YAE1B,MAAM9D,OAAO,CAAC4F,OAAO,CAAC,WAAW,EAAE9B,KAAK,CAAC;UAC3C;UAGA,IAAM6C,mBAAmB,GAAAC,aAAA,CAAAA,aAAA,KACpBN,eAAe;YAClBtC,QAAQ,EAAE;UAAa,EACxB;UAEDjB,cAAc,CAAC4D,mBAAmB,CAAC;UACnChE,kBAAkB,CAAC,IAAI,CAAC;UACxBJ,gBAAgB,CAAC,sBAAsB,CAAC;UACxC;QACF;QAGA,IAAM2C,QAAQ,SAASjF,UAAU,CAACkF,gBAAgB,CAACmB,eAAe,CAAClB,KAAK,EAAEkB,eAAe,CAACjB,QAAQ,CAAC;QACnG,IAAIH,QAAQ,CAACK,OAAO,EAAE;UAEpB,MAAMvF,OAAO,CAAC4F,OAAO,CAAC,WAAW,EAAEV,QAAQ,CAACO,IAAI,CAAC3B,KAAK,CAAC;UACvD7D,UAAU,CAACmE,QAAQ,CAACc,QAAQ,CAACO,IAAI,CAAC3B,KAAK,CAAC;UAGxC,IAAM6C,oBAAmB,GAAAC,aAAA,CAAAA,aAAA,KACpB1B,QAAQ,CAACO,IAAI,CAACE,WAAW;YAC5B3B,QAAQ,EAAE;UAAa,EACxB;UAEDjB,cAAc,CAAC4D,oBAAmB,CAAC;UACnChE,kBAAkB,CAAC,IAAI,CAAC;UACxBJ,gBAAgB,CAAC,sBAAsB,CAAC;QAC1C,CAAC,MAAM;UACL,MAAM,IAAIyD,KAAK,CAACd,QAAQ,CAACa,OAAO,IAAI,8BAA8B,CAAC;QACrE;MACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,MAAMA,KAAK;MACb;IACF,CAAC;IAAA,gBA/CK4B,sBAAsBA,CAAAS,GAAA,EAAAC,GAAA;MAAA,OAAAT,KAAA,CAAA5B,KAAA,OAAAC,SAAA;IAAA;EAAA,GA+C3B;EAED,IAAMqC,cAAc;IAAA,IAAAC,KAAA,GAAAnD,iBAAA,CAAG,WAAOmB,QAAQ,EAAK;MACzC,IAAI;QACF,IAAME,QAAQ,SAASjF,UAAU,CAACgH,QAAQ,CAACjC,QAAQ,CAAC;QAEpD,IAAIE,QAAQ,CAACK,OAAO,EAAE;UAEpB,OAAO;YAAEA,OAAO,EAAE,IAAI;YAAEQ,OAAO,EAAE;UAAiE,CAAC;QACrG,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAACd,QAAQ,CAACa,OAAO,IAAI,kBAAkB,CAAC;QACzD;MACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvC,MAAMA,KAAK;MACb;IACF,CAAC;IAAA,gBAdKuC,cAAcA,CAAAG,GAAA;MAAA,OAAAF,KAAA,CAAAvC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAcnB;EAED,IAAMyC,qBAAqB;IAAA,IAAAC,KAAA,GAAAvD,iBAAA,CAAG,WAAOmB,QAAQ,EAAK;MAChD,IAAI;QACF,IAAME,QAAQ,SAASjF,UAAU,CAACgH,QAAQ,CAAAL,aAAA,CAAAA,aAAA,KAAM5B,QAAQ;UAAEhB,QAAQ,EAAE;QAAS,EAAE,CAAC;QAEhF,IAAIkB,QAAQ,CAACK,OAAO,EAAE;UAEpB,OAAO;YAAEA,OAAO,EAAE,IAAI;YAAEQ,OAAO,EAAE;UAAiE,CAAC;QACrG,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAACd,QAAQ,CAACa,OAAO,IAAI,+BAA+B,CAAC;QACtE;MACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,MAAMA,KAAK;MACb;IACF,CAAC;IAAA,gBAdK2C,qBAAqBA,CAAAE,GAAA;MAAA,OAAAD,KAAA,CAAA3C,KAAA,OAAAC,SAAA;IAAA;EAAA,GAc1B;EAED,IAAM4C,yBAAyB;IAAA,IAAAC,KAAA,GAAA1D,iBAAA,CAAG,WAAOyC,eAAe,EAAK;MAC3D,IAAI;QACF,IAAMpB,QAAQ,SAASjF,UAAU,CAACuH,mBAAmB,CAAClB,eAAe,CAAC;QAEtE,IAAIpB,QAAQ,CAACK,OAAO,EAAE;UAEpB,OAAO;YAAEA,OAAO,EAAE,IAAI;YAAEQ,OAAO,EAAE;UAAmE,CAAC;QACvG,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAACd,QAAQ,CAACa,OAAO,IAAI,iCAAiC,CAAC;QACxE;MACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,MAAMA,KAAK;MACb;IACF,CAAC;IAAA,gBAdK8C,yBAAyBA,CAAAG,GAAA;MAAA,OAAAF,KAAA,CAAA9C,KAAA,OAAAC,SAAA;IAAA;EAAA,GAc9B;EAED,IAAMgD,YAAY;IAAA,IAAAC,KAAA,GAAA9D,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACF,MAAM5D,UAAU,CAAC2H,MAAM,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOpD,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC,CAAC,SAAS;QACR,MAAMD,aAAa,CAAC,CAAC;QACrBhC,gBAAgB,CAAC,OAAO,CAAC;MAC3B;IACF,CAAC;IAAA,gBATKmF,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAlD,KAAA,OAAAC,SAAA;IAAA;EAAA,GASjB;EAED,IAAMmD,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAM,EAAoB;IAAA,IAAlBC,MAAM,GAAArD,SAAA,CAAAsD,MAAA,QAAAtD,SAAA,QAAAuD,SAAA,GAAAvD,SAAA,MAAG,IAAI;IAC3C,IAAIoD,MAAM,KAAK,QAAQ,EAAE;MACvBJ,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MAEL,IAAIK,MAAM,EAAE;QACVtB,MAAM,CAACyB,gBAAgB,GAAGH,MAAM;MAClC,CAAC,MAAM;QACLtB,MAAM,CAACyB,gBAAgB,GAAG,IAAI;MAChC;MACA3F,gBAAgB,CAACuF,MAAM,CAAC;MACxB3E,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,IAAMgF,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;IACrC5F,gBAAgB,CAAC,UAAU,CAAC;EAC9B,CAAC;EAED,IAAM6F,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAA,EAAS;IAC5C7F,gBAAgB,CAAC,iBAAiB,CAAC;EACrC,CAAC;EAED,IAAM8F,mCAAmC,GAAG,SAAtCA,mCAAmCA,CAAA,EAAS;IAChD9F,gBAAgB,CAAC,qBAAqB,CAAC;EACzC,CAAC;EAED,IAAM+F,gCAAgC,GAAG,SAAnCA,gCAAgCA,CAAA,EAAS;IAC7C/F,gBAAgB,CAAC,kBAAkB,CAAC;EACtC,CAAC;EAED,IAAMgG,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAClChG,gBAAgB,CAAC,OAAO,CAAC;EAC3B,CAAC;EAED,IAAMiG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,QAAQlG,aAAa;MACnB,KAAK,OAAO;QACV,OACET,IAAA,CAACxB,WAAW;UACV6C,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3Ba,OAAO,EAAE5D,WAAY;UACrB6D,oBAAoB,EAAER,wBAAyB;UAC/CS,2BAA2B,EAAER,+BAAgC;UAC7DS,+BAA+B,EAAER;QAAoC,CACtE,CAAC;MAEN,KAAK,UAAU;QACb,OACExG,IAAA,CAAChB,cAAc;UACb4H,UAAU,EAAEZ,cAAe;UAC3BiB,UAAU,EAAE/B,cAAe;UAC3BgC,iBAAiB,EAAER;QAAsB,CAC1C,CAAC;MAEN,KAAK,iBAAiB;QACpB,OACE1G,IAAA,CAACf,qBAAqB;UACpBgI,UAAU,EAAE3B,qBAAsB;UAClC4B,iBAAiB,EAAER;QAAsB,CAC1C,CAAC;MAEN,KAAK,qBAAqB;QACxB,OACE1G,IAAA,CAACd,yBAAyB;UACxB+H,UAAU,EAAExB,yBAA0B;UACtCyB,iBAAiB,EAAER,qBAAsB;UACzCE,UAAU,EAAEZ;QAAe,CAC5B,CAAC;MAEN,KAAK,kBAAkB;QACrB,OACEhG,IAAA,CAACb,sBAAsB;UACrByH,UAAU,EAAEZ,cAAe;UAC3Ba,OAAO,EAAEtC;QAAuB,CACjC,CAAC;MAEN,KAAK,sBAAsB;QACzB,OACEvE,IAAA,CAACZ,0BAA0B;UACzBiC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,MAAM;QACT,OACE7F,IAAA,CAACvB,UAAU;UACT4C,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,SAAS;QACZ,OACE7F,IAAA,CAACtB,aAAa;UACZ2C,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,eAAe;QAClB,OACE7F,IAAA,CAACrB,mBAAmB;UAClB0C,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,YAAY;QACf,OACE7F,IAAA,CAACpB,gBAAgB;UACfyC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,cAAc;QACjB,OACE7F,IAAA,CAACJ,kBAAkB;UACjByB,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,oBAAoB;QACvB,OACE7F,IAAA,CAACF,uBAAuB;UACtBuB,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,QAAQ;QACX,OACE7F,IAAA,CAACH,YAAY;UACXwB,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,SAAS;QACZ,OACE7F,IAAA,CAACnB,aAAa;UACZwC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,UAAU;QACb,OACE7F,IAAA,CAAClB,cAAc;UACbuC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,MAAM;QACT,OACE7F,IAAA,CAACjB,UAAU;UACTsC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,gBAAgB;QACnB,OACE7F,IAAA,CAACX,oBAAoB;UACnBgC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,WAAW;QACd,OACE7F,IAAA,CAACV,eAAe;UACd+B,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,iBAAiB;QACpB,OACE7F,IAAA,CAACT,qBAAqB;UACpB8B,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,iBAAiB;QACpB,OACE7F,IAAA,CAACR,qBAAqB;UACpB6B,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,aAAa;QAChB,OACE7F,IAAA,CAACP,iBAAiB;UAChB4B,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,OAAO;QACV,OACE7F,IAAA,CAACN,WAAW;UACV2B,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,gBAAgB;QACnB,OACE7F,IAAA,CAACX,oBAAoB;UACnBgC,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN,KAAK,gBAAgB;QACnB,OACE7F,IAAA,CAACL,oBAAoB;UACnB0B,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBkG,QAAQ,EAAEtB;QAAa,CACxB,CAAC;MAEN;QACE,OACE7F,IAAA,CAACxB,WAAW;UACV6C,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCsF,UAAU,EAAEZ,cAAe;UAC3Ba,OAAO,EAAE5D,WAAY;UACrB6D,oBAAoB,EAAER,wBAAyB;UAC/CS,2BAA2B,EAAER,+BAAgC;UAC7DS,+BAA+B,EAAER;QAAoC,CACtE,CAAC;IAER;EACF,CAAC;EAED,OACEpG,KAAA,CAAAF,SAAA;IAAAkH,QAAA,GACEpH,IAAA,CAAC/B,SAAS;MAACoJ,KAAK,EAAC;IAAM,CAAE,CAAC,EACzBV,YAAY,CAAC,CAAC,EACf3G,IAAA,CAAC1B,WAAW;MACVgJ,OAAO,EAAE9F,KAAK,CAAC8F,OAAQ;MACvBC,KAAK,EAAE/F,KAAK,CAAC+F,KAAM;MACnBrD,OAAO,EAAE1C,KAAK,CAAC0C,OAAQ;MACvBsD,IAAI,EAAEhG,KAAK,CAACgG,IAAK;MACjBC,OAAO,EAAE/F;IAAU,CACpB,CAAC;EAAA,CACF,CAAC;AAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}