{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomAlert from \"../../components/CustomAlert\";\nimport useCustomAlert from \"../../hooks/useCustomAlert\";\nimport useResponsive from \"../../hooks/useResponsive\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar LoginScreen = function LoginScreen(_ref) {\n  var onLogin = _ref.onLogin,\n    onNavigateToRegister = _ref.onNavigateToRegister,\n    onNavigateToTeacherRegister = _ref.onNavigateToTeacherRegister,\n    onNavigateToInstitutionRegister = _ref.onNavigateToInstitutionRegister,\n    showSuccessMessage = _ref.showSuccessMessage,\n    onSuccessMessageShown = _ref.onSuccessMessageShown;\n  var _useResponsive = useResponsive(),\n    isMobile = _useResponsive.isMobile,\n    isTablet = _useResponsive.isTablet,\n    isDesktop = _useResponsive.isDesktop,\n    getPadding = _useResponsive.getPadding,\n    getMargin = _useResponsive.getMargin,\n    getFontSize = _useResponsive.getFontSize,\n    getSpacing = _useResponsive.getSpacing;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState('STUDENT'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userType = _useState6[0],\n    setUserType = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  var _useCustomAlert = useCustomAlert(),\n    alert = _useCustomAlert.alert,\n    showSuccess = _useCustomAlert.showSuccess,\n    showError = _useCustomAlert.showError,\n    hideAlert = _useCustomAlert.hideAlert;\n  useEffect(function () {}, [userType]);\n  useEffect(function () {\n    if (showSuccessMessage) {\n      showSuccess('Cadastro Realizado!', 'Sua conta foi criada com sucesso. Agora você pode fazer login.');\n      onSuccessMessageShown && onSuccessMessageShown();\n    }\n  }, [showSuccessMessage, onSuccessMessageShown, showSuccess]);\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email.trim() || !password.trim()) {\n        showError('❌ Campos Obrigatórios', 'Por favor, preencha todos os campos');\n        return;\n      }\n      setIsLoading(true);\n      try {\n        yield onLogin({\n          email: email,\n          password: password,\n          userType: userType\n        }, userType);\n      } catch (error) {\n        showError('❌ Erro no Login', error.message || 'Erro ao fazer login');\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(View, {\n          style: styles.logoWrapper,\n          children: _jsx(Image, {\n            source: require(\"../../assets/images/Logo.svg\"),\n            style: styles.logoImage,\n            resizeMode: \"contain\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Bem-vindo de volta!\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Fa\\xE7a login para continuar\"\n      }), _jsxs(View, {\n        style: styles.userTypeContainer,\n        children: [_jsx(Text, {\n          style: styles.userTypeLabel,\n          children: \"Tipo de usu\\xE1rio:\"\n        }), _jsxs(View, {\n          style: styles.userTypeButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.userTypeButton, userType === 'STUDENT' && styles.userTypeButtonActive],\n            onPress: function onPress() {\n              return setUserType('STUDENT');\n            },\n            children: _jsx(Text, {\n              style: [styles.userTypeButtonText, userType === 'STUDENT' && styles.userTypeButtonTextActive],\n              children: \"Estudante\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.userTypeButton, userType === 'TEACHER' && styles.userTypeButtonActive],\n            onPress: function onPress() {\n              return setUserType('TEACHER');\n            },\n            children: _jsx(Text, {\n              style: [styles.userTypeButtonText, userType === 'TEACHER' && styles.userTypeButtonTextActive],\n              children: \"Professor\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.userTypeButton, userType === 'INSTITUTION' && styles.userTypeButtonActive],\n            onPress: function onPress() {\n              return setUserType('INSTITUTION');\n            },\n            children: _jsx(Text, {\n              style: [styles.userTypeButtonText, userType === 'INSTITUTION' && styles.userTypeButtonTextActive],\n              children: \"Institui\\xE7\\xE3o\"\n            })\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"E-mail\",\n            placeholderTextColor: \"#666\",\n            value: email,\n            onChangeText: setEmail,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCorrect: false\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"Senha\",\n            placeholderTextColor: \"#666\",\n            value: password,\n            onChangeText: setPassword,\n            secureTextEntry: true\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.loginButton, isLoading && styles.loginButtonDisabled],\n          onPress: handleLogin,\n          disabled: isLoading,\n          children: _jsx(Text, {\n            style: styles.loginButtonText,\n            children: isLoading ? 'Entrando...' : 'Entrar'\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.registerContainer,\n        children: [_jsx(Text, {\n          style: styles.registerText,\n          children: \"N\\xE3o tem uma conta? \"\n        }), _jsxs(View, {\n          style: styles.registerButtons,\n          children: [_jsxs(View, {\n            style: [styles.registerRow, {\n              gap: getSpacing(15, 20, 25)\n            }],\n            children: [_jsx(TouchableOpacity, {\n              onPress: onNavigateToRegister,\n              children: _jsx(Text, {\n                style: [styles.registerLink, {\n                  fontSize: getFontSize(16, 18, 20),\n                  minWidth: getSpacing(120, 140, 160)\n                }],\n                children: \"Cadastre-se (Estudante)\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: onNavigateToTeacherRegister,\n              children: _jsx(Text, {\n                style: [styles.registerLink, {\n                  fontSize: getFontSize(16, 18, 20),\n                  minWidth: getSpacing(120, 140, 160)\n                }],\n                children: \"Cadastre-se (Professor)\"\n              })\n            })]\n          }), _jsx(View, {\n            style: styles.registerRow,\n            children: _jsx(TouchableOpacity, {\n              onPress: onNavigateToInstitutionRegister,\n              children: _jsx(Text, {\n                style: [styles.registerLink, {\n                  fontSize: getFontSize(16, 18, 20),\n                  minWidth: getSpacing(160, 180, 200)\n                }],\n                children: \"Cadastre-se (Institui\\xE7\\xE3o)\"\n              })\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E9EDEE'\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 40\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n    marginTop: 20\n  },\n  logoWrapper: {\n    backgroundColor: 'transparent',\n    borderRadius: 75,\n    padding: 10,\n    mixBlendMode: 'multiply'\n  },\n  logoImage: {\n    width: 150,\n    height: 150,\n    opacity: 0.9\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 10,\n    fontFamily: 'Poppins'\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 40,\n    fontFamily: 'Poppins'\n  },\n  formContainer: {\n    marginBottom: 30\n  },\n  inputContainer: {\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    height: 50,\n    paddingHorizontal: 20,\n    fontSize: 16,\n    color: '#000',\n    fontFamily: 'Poppins',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#D9D9D9'\n  },\n  loginButton: {\n    backgroundColor: '#F9BB55',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    marginTop: 10\n  },\n  loginButtonDisabled: {\n    backgroundColor: '#D9D9D9'\n  },\n  loginButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000',\n    fontFamily: 'Poppins'\n  },\n  registerContainer: {\n    alignItems: 'center'\n  },\n  registerText: {\n    fontSize: 16,\n    color: '#666',\n    fontFamily: 'Poppins',\n    marginBottom: 10\n  },\n  registerButtons: {\n    flexDirection: 'column',\n    gap: 12,\n    alignItems: 'center'\n  },\n  registerRow: {\n    flexDirection: 'row',\n    gap: 15,\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  registerLink: {\n    fontSize: 14,\n    color: '#F9BB55',\n    fontWeight: 'bold',\n    fontFamily: 'Poppins',\n    textAlign: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    minWidth: 120\n  },\n  userTypeContainer: {\n    marginBottom: 30\n  },\n  userTypeLabel: {\n    fontSize: 16,\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15,\n    fontFamily: 'Poppins',\n    fontWeight: 'bold'\n  },\n  userTypeButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: 10\n  },\n  userTypeButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    borderRadius: 20,\n    borderWidth: 2,\n    borderColor: '#D9D9D9',\n    backgroundColor: '#FFFFFF',\n    minWidth: 100\n  },\n  userTypeButtonActive: {\n    backgroundColor: '#F9BB55',\n    borderColor: '#F9BB55'\n  },\n  userTypeButtonText: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n    fontWeight: 'bold'\n  },\n  userTypeButtonTextActive: {\n    color: '#000'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","TouchableOpacity","TextInput","Dimensions","SafeAreaView","Alert","Image","ScrollView","CustomAlert","useCustomAlert","useResponsive","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","LoginScreen","_ref","onLogin","onNavigateToRegister","onNavigateToTeacherRegister","onNavigateToInstitutionRegister","showSuccessMessage","onSuccessMessageShown","_useResponsive","isMobile","isTablet","isDesktop","getPadding","getMargin","getFontSize","getSpacing","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","userType","setUserType","_useState7","_useState8","isLoading","setIsLoading","_useCustomAlert","alert","showSuccess","showError","hideAlert","handleLogin","_ref2","_asyncToGenerator","trim","error","message","apply","arguments","style","styles","container","children","content","logoContainer","logoWrapper","source","require","logoImage","resizeMode","title","subtitle","userTypeContainer","userTypeLabel","userTypeButtons","userTypeButton","userTypeButtonActive","onPress","userTypeButtonText","userTypeButtonTextActive","formContainer","inputContainer","input","placeholder","placeholderTextColor","value","onChangeText","keyboardType","autoCapitalize","autoCorrect","secureTextEntry","loginButton","loginButtonDisabled","disabled","loginButtonText","registerContainer","registerText","registerButtons","registerRow","gap","registerLink","fontSize","minWidth","create","flex","backgroundColor","justifyContent","paddingHorizontal","alignItems","marginBottom","marginTop","borderRadius","padding","mixBlendMode","opacity","fontWeight","color","textAlign","fontFamily","borderWidth","borderColor","flexDirection","flexWrap","paddingVertical"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/screens/auth/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  Alert,\r\n  Image,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport CustomAlert from '../../components/CustomAlert';\r\nimport useCustomAlert from '../../hooks/useCustomAlert';\r\nimport useResponsive from '../../hooks/useResponsive';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst LoginScreen = ({ onLogin, onNavigateToRegister, onNavigateToTeacherRegister, onNavigateToInstitutionRegister, showSuccessMessage, onSuccessMessageShown }) => {\r\n  const { isMobile, isTablet, isDesktop, getPadding, getMargin, getFontSize, getSpacing } = useResponsive();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userType, setUserType] = useState('STUDENT');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { alert, showSuccess, showError, hideAlert } = useCustomAlert();\r\n\r\n  // Debug: Log quando userType muda\r\n  useEffect(() => {\r\n  }, [userType]);\r\n\r\n  // Mostrar mensagem de sucesso quando vier do cadastro\r\n  useEffect(() => {\r\n    if (showSuccessMessage) {\r\n      showSuccess(\r\n        'Cadastro Realizado!', \r\n        'Sua conta foi criada com sucesso. Agora você pode fazer login.'\r\n      );\r\n      onSuccessMessageShown && onSuccessMessageShown();\r\n    }\r\n  }, [showSuccessMessage, onSuccessMessageShown, showSuccess]);\r\n\r\n  const handleLogin = async () => {\r\n    \r\n    if (!email.trim() || !password.trim()) {\r\n      showError('❌ Campos Obrigatórios', 'Por favor, preencha todos os campos');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await onLogin({ email, password, userType }, userType);\r\n    } catch (error) {\r\n      showError('❌ Erro no Login', error.message || 'Erro ao fazer login');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.content}>\r\n        {/* Logo */}\r\n        <View style={styles.logoContainer}>\r\n          <View style={styles.logoWrapper}>\r\n            <Image\r\n              source={require('../../assets/images/Logo.svg')}\r\n              style={styles.logoImage}\r\n              resizeMode=\"contain\"\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {/* Title */}\r\n        <Text style={styles.title}>Bem-vindo de volta!</Text>\r\n        <Text style={styles.subtitle}>Faça login para continuar</Text>\r\n\r\n        {/* User Type Selection */}\r\n        <View style={styles.userTypeContainer}>\r\n          <Text style={styles.userTypeLabel}>Tipo de usuário:</Text>\r\n          <View style={styles.userTypeButtons}>\r\n            <TouchableOpacity\r\n              style={[styles.userTypeButton, userType === 'STUDENT' && styles.userTypeButtonActive]}\r\n              onPress={() => setUserType('STUDENT')}\r\n            >\r\n              <Text style={[styles.userTypeButtonText, userType === 'STUDENT' && styles.userTypeButtonTextActive]}>\r\n                Estudante\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={[styles.userTypeButton, userType === 'TEACHER' && styles.userTypeButtonActive]}\r\n              onPress={() => setUserType('TEACHER')}\r\n            >\r\n              <Text style={[styles.userTypeButtonText, userType === 'TEACHER' && styles.userTypeButtonTextActive]}>\r\n                Professor\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={[styles.userTypeButton, userType === 'INSTITUTION' && styles.userTypeButtonActive]}\r\n              onPress={() => setUserType('INSTITUTION')}\r\n            >\r\n              <Text style={[styles.userTypeButtonText, userType === 'INSTITUTION' && styles.userTypeButtonTextActive]}>\r\n                Instituição\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Form */}\r\n        <View style={styles.formContainer}>\r\n          <View style={styles.inputContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"E-mail\"\r\n              placeholderTextColor=\"#666\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n              keyboardType=\"email-address\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.inputContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Senha\"\r\n              placeholderTextColor=\"#666\"\r\n              value={password}\r\n              onChangeText={setPassword}\r\n              secureTextEntry\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity \r\n            style={[styles.loginButton, isLoading && styles.loginButtonDisabled]} \r\n            onPress={handleLogin}\r\n            disabled={isLoading}\r\n          >\r\n            <Text style={styles.loginButtonText}>\r\n              {isLoading ? 'Entrando...' : 'Entrar'}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Register Links */}\r\n        <View style={styles.registerContainer}>\r\n          <Text style={styles.registerText}>Não tem uma conta? </Text>\r\n          <View style={styles.registerButtons}>\r\n            {/* Primeira linha - Estudante e Professor (topo do triângulo) */}\r\n            <View style={[styles.registerRow, { gap: getSpacing(15, 20, 25) }]}>\r\n              <TouchableOpacity onPress={onNavigateToRegister}>\r\n                <Text style={[styles.registerLink, { \r\n                  fontSize: getFontSize(16, 18, 20),\r\n                  minWidth: getSpacing(120, 140, 160)\r\n                }]}>Cadastre-se (Estudante)</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={onNavigateToTeacherRegister}>\r\n                <Text style={[styles.registerLink, { \r\n                  fontSize: getFontSize(16, 18, 20),\r\n                  minWidth: getSpacing(120, 140, 160)\r\n                }]}>Cadastre-se (Professor)</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            \r\n            {/* Segunda linha - Instituição (base do triângulo) */}\r\n            <View style={styles.registerRow}>\r\n              <TouchableOpacity onPress={onNavigateToInstitutionRegister}>\r\n                <Text style={[styles.registerLink, { \r\n                  fontSize: getFontSize(16, 18, 20),\r\n                  minWidth: getSpacing(160, 180, 200)\r\n                }]}>Cadastre-se (Instituição)</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n          \r\n        </View>\r\n      </View>\r\n      \r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E9EDEE',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 40,\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 40,\r\n    marginTop: 20,\r\n  },\r\n  logoWrapper: {\r\n    backgroundColor: 'transparent',\r\n    borderRadius: 75,\r\n    padding: 10,\r\n    // Aplicar multiply blend mode no container\r\n    mixBlendMode: 'multiply',\r\n  },\r\n  logoImage: {\r\n    width: 150,\r\n    height: 150,\r\n    opacity: 0.9,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n    fontFamily: 'Poppins',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n    fontFamily: 'Poppins',\r\n  },\r\n  formContainer: {\r\n    marginBottom: 30,\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    backgroundColor: '#FFFFFF',\r\n    height: 50,\r\n    paddingHorizontal: 20,\r\n    fontSize: 16,\r\n    color: '#000',\r\n    fontFamily: 'Poppins',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#D9D9D9',\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#F9BB55',\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    marginTop: 10,\r\n  },\r\n  loginButtonDisabled: {\r\n    backgroundColor: '#D9D9D9',\r\n  },\r\n  loginButtonText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  registerContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  registerText: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n    marginBottom: 10,\r\n  },\r\n  registerButtons: {\r\n    flexDirection: 'column',\r\n    gap: 12,\r\n    alignItems: 'center',\r\n  },\r\n  registerRow: {\r\n    flexDirection: 'row',\r\n    gap: 15,\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  registerLink: {\r\n    fontSize: 14,\r\n    color: '#F9BB55',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Poppins',\r\n    textAlign: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 8,\r\n    minWidth: 120,\r\n  },\r\n  userTypeContainer: {\r\n    marginBottom: 30,\r\n  },\r\n  userTypeLabel: {\r\n    fontSize: 16,\r\n    color: '#000',\r\n    textAlign: 'center',\r\n    marginBottom: 15,\r\n    fontFamily: 'Poppins',\r\n    fontWeight: 'bold',\r\n  },\r\n  userTypeButtons: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    gap: 10,\r\n  },\r\n  userTypeButton: {\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 10,\r\n    borderRadius: 20,\r\n    borderWidth: 2,\r\n    borderColor: '#D9D9D9',\r\n    backgroundColor: '#FFFFFF',\r\n    minWidth: 100,\r\n  },\r\n  userTypeButtonActive: {\r\n    backgroundColor: '#F9BB55',\r\n    borderColor: '#F9BB55',\r\n  },\r\n  userTypeButtonText: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n    fontWeight: 'bold',\r\n  },\r\n  userTypeButtonTextActive: {\r\n    color: '#000',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}