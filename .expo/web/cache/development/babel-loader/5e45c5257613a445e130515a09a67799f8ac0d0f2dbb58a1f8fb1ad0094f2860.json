{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SideMenu from \"../../components/SideMenu\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar MedalsScreen = function MedalsScreen(_ref) {\n  var isMenuVisible = _ref.isMenuVisible,\n    setIsMenuVisible = _ref.setIsMenuVisible,\n    onNavigate = _ref.onNavigate,\n    currentUser = _ref.currentUser;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userMedals = _useState2[0],\n    setUserMedals = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    allMedals = _useState4[0],\n    setAllMedals = _useState4[1];\n  var availableMedals = [{\n    id: 1,\n    name: 'Primeiro Passo',\n    description: 'Complete seu primeiro treino',\n    icon: require(\"../../assets/images/Medalha_1.svg\"),\n    requirement: '1 treino completado',\n    category: 'Iniciante',\n    rarity: 'Comum',\n    color: '#FFD700'\n  }, {\n    id: 2,\n    name: 'Maratonista',\n    description: 'Complete 10 treinos',\n    icon: require(\"../../assets/images/Medalha_2.svg\"),\n    requirement: '10 treinos completados',\n    category: 'Resistência',\n    rarity: 'Rara',\n    color: '#C0C0C0'\n  }, {\n    id: 3,\n    name: 'Campeão',\n    description: 'Complete 50 treinos',\n    icon: require(\"../../assets/images/Medalha_3.svg\"),\n    requirement: '50 treinos completados',\n    category: 'Elite',\n    rarity: 'Épica',\n    color: '#FF6B6B'\n  }, {\n    id: 4,\n    name: 'Lenda',\n    description: 'Complete 100 treinos',\n    icon: require(\"../../assets/images/Medalha_4.svg\"),\n    requirement: '100 treinos completados',\n    category: 'Lenda',\n    rarity: 'Lendária',\n    color: '#9B59B6'\n  }, {\n    id: 5,\n    name: 'Velocista',\n    description: 'Complete 5 treinos em um dia',\n    icon: require(\"../../assets/images/Medalha_5.svg\"),\n    requirement: '5 treinos em 1 dia',\n    category: 'Velocidade',\n    rarity: 'Rara',\n    color: '#3498DB'\n  }, {\n    id: 6,\n    name: 'Consistente',\n    description: 'Treine por 7 dias seguidos',\n    icon: require(\"../../assets/images/Medalha_6.svg\"),\n    requirement: '7 dias consecutivos',\n    category: 'Consistência',\n    rarity: 'Épica',\n    color: '#2ECC71'\n  }];\n  useEffect(function () {\n    var obtainedMedals = [1, 2, 5];\n    setUserMedals(obtainedMedals);\n    setAllMedals(availableMedals);\n  }, []);\n  var isMedalObtained = function isMedalObtained(medalId) {\n    return userMedals.includes(medalId);\n  };\n  var getRarityColor = function getRarityColor(rarity) {\n    switch (rarity) {\n      case 'Comum':\n        return '#95A5A6';\n      case 'Rara':\n        return '#3498DB';\n      case 'Épica':\n        return '#9B59B6';\n      case 'Lendária':\n        return '#F39C12';\n      default:\n        return '#95A5A6';\n    }\n  };\n  var renderMedalCard = function renderMedalCard(medal) {\n    var obtained = isMedalObtained(medal.id);\n    return _jsxs(View, {\n      style: [styles.medalCard, obtained && styles.medalCardObtained],\n      children: [_jsxs(View, {\n        style: styles.medalIconContainer,\n        children: [_jsx(Image, {\n          source: medal.icon,\n          style: [styles.medalIcon, !obtained && styles.medalIconLocked],\n          resizeMode: \"contain\"\n        }), obtained && _jsx(View, {\n          style: styles.obtainedBadge,\n          children: _jsx(Text, {\n            style: styles.obtainedText,\n            children: \"\\u2713\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.medalInfo,\n        children: [_jsx(Text, {\n          style: [styles.medalName, !obtained && styles.medalNameLocked],\n          children: medal.name\n        }), _jsx(Text, {\n          style: [styles.medalDescription, !obtained && styles.medalDescriptionLocked],\n          children: medal.description\n        }), _jsx(Text, {\n          style: [styles.medalRequirement, !obtained && styles.medalRequirementLocked],\n          children: medal.requirement\n        }), _jsxs(View, {\n          style: styles.medalTags,\n          children: [_jsx(View, {\n            style: [styles.medalTag, {\n              backgroundColor: medal.color\n            }],\n            children: _jsx(Text, {\n              style: styles.medalTagText,\n              children: medal.category\n            })\n          }), _jsx(View, {\n            style: [styles.medalTag, {\n              backgroundColor: getRarityColor(medal.rarity)\n            }],\n            children: _jsx(Text, {\n              style: styles.medalTagText,\n              children: medal.rarity\n            })\n          })]\n        })]\n      })]\n    }, medal.id);\n  };\n  var obtainedCount = userMedals.length;\n  var totalCount = allMedals.length;\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.logo,\n        children: \"Movz\"\n      }), _jsxs(TouchableOpacity, {\n        style: styles.menuIcon,\n        onPress: function onPress() {\n          return setIsMenuVisible(true);\n        },\n        children: [_jsx(View, {\n          style: styles.menuLine\n        }), _jsx(View, {\n          style: styles.menuLine\n        }), _jsx(View, {\n          style: styles.menuLine\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.titleSection,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Medalhas\"\n      }), _jsxs(Text, {\n        style: styles.subtitle,\n        children: [obtainedCount, \" de \", totalCount, \" medalhas obtidas\"]\n      }), _jsxs(View, {\n        style: styles.progressContainer,\n        children: [_jsx(View, {\n          style: styles.progressBar,\n          children: _jsx(View, {\n            style: [styles.progressFill, {\n              width: `${obtainedCount / totalCount * 100}%`\n            }]\n          })\n        }), _jsxs(Text, {\n          style: styles.progressText,\n          children: [Math.round(obtainedCount / totalCount * 100), \"% completo\"]\n        })]\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scrollView,\n      showsVerticalScrollIndicator: false,\n      children: _jsx(View, {\n        style: styles.medalsGrid,\n        children: allMedals.map(renderMedalCard)\n      })\n    }), _jsx(SideMenu, {\n      isVisible: isMenuVisible,\n      onClose: function onClose() {\n        return setIsMenuVisible(false);\n      },\n      onNavigate: onNavigate,\n      currentUser: currentUser,\n      onLogout: onLogout,\n      userType: \"STUDENT\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E9EDEE'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    paddingBottom: 10\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    fontFamily: 'Poppins'\n  },\n  menuIcon: {\n    width: 39,\n    height: 18,\n    justifyContent: 'space-between'\n  },\n  menuLine: {\n    width: 39,\n    height: 6,\n    backgroundColor: '#D9D9D9',\n    borderRadius: 3\n  },\n  titleSection: {\n    paddingHorizontal: 20,\n    paddingBottom: 20\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#000',\n    fontFamily: 'Poppins',\n    marginBottom: 5\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    fontFamily: 'Poppins',\n    marginBottom: 20\n  },\n  progressContainer: {\n    marginBottom: 10\n  },\n  progressBar: {\n    height: 8,\n    backgroundColor: '#D9D9D9',\n    borderRadius: 4,\n    overflow: 'hidden',\n    marginBottom: 8\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#F9BB55',\n    borderRadius: 4\n  },\n  progressText: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n    textAlign: 'center'\n  },\n  scrollView: {\n    flex: 1,\n    paddingHorizontal: 20\n  },\n  medalsGrid: {\n    paddingBottom: 20\n  },\n  medalCard: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 15,\n    padding: 20,\n    marginBottom: 15,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  medalCardObtained: {\n    borderWidth: 2,\n    borderColor: '#F9BB55'\n  },\n  medalIconContainer: {\n    position: 'relative',\n    marginRight: 15\n  },\n  medalIcon: {\n    width: 60,\n    height: 60\n  },\n  medalIconLocked: {\n    opacity: 0.3\n  },\n  obtainedBadge: {\n    position: 'absolute',\n    top: -5,\n    right: -5,\n    backgroundColor: '#2ECC71',\n    borderRadius: 10,\n    width: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  obtainedText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  medalInfo: {\n    flex: 1\n  },\n  medalName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000',\n    fontFamily: 'Poppins',\n    marginBottom: 5\n  },\n  medalNameLocked: {\n    color: '#999'\n  },\n  medalDescription: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n    marginBottom: 5\n  },\n  medalDescriptionLocked: {\n    color: '#CCC'\n  },\n  medalRequirement: {\n    fontSize: 12,\n    color: '#888',\n    fontFamily: 'Poppins',\n    marginBottom: 10\n  },\n  medalRequirementLocked: {\n    color: '#DDD'\n  },\n  medalTags: {\n    flexDirection: 'row',\n    gap: 8\n  },\n  medalTag: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12\n  },\n  medalTagText: {\n    fontSize: 10,\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontFamily: 'Poppins'\n  }\n});\nexport default MedalsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Dimensions","SafeAreaView","Image","SideMenu","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","MedalsScreen","_ref","isMenuVisible","setIsMenuVisible","onNavigate","currentUser","_useState","_useState2","_slicedToArray","userMedals","setUserMedals","_useState3","_useState4","allMedals","setAllMedals","availableMedals","id","name","description","icon","require","requirement","category","rarity","color","obtainedMedals","isMedalObtained","medalId","includes","getRarityColor","renderMedalCard","medal","obtained","style","styles","medalCard","medalCardObtained","children","medalIconContainer","source","medalIcon","medalIconLocked","resizeMode","obtainedBadge","obtainedText","medalInfo","medalName","medalNameLocked","medalDescription","medalDescriptionLocked","medalRequirement","medalRequirementLocked","medalTags","medalTag","backgroundColor","medalTagText","obtainedCount","length","totalCount","container","header","logo","menuIcon","onPress","menuLine","titleSection","title","subtitle","progressContainer","progressBar","progressFill","progressText","Math","round","scrollView","showsVerticalScrollIndicator","medalsGrid","map","isVisible","onClose","onLogout","userType","create","flex","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingTop","paddingBottom","fontSize","fontWeight","fontFamily","borderRadius","marginBottom","overflow","textAlign","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","position","marginRight","opacity","top","right","gap","paddingVertical"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/src/screens/student/MedalsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  Image,\r\n} from 'react-native';\r\nimport SideMenu from '../../components/SideMenu';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst MedalsScreen = ({ isMenuVisible, setIsMenuVisible, onNavigate, currentUser }) => {\r\n  const [userMedals, setUserMedals] = useState([]);\r\n  const [allMedals, setAllMedals] = useState([]);\r\n\r\n  // Dados das medalhas disponíveis\r\n  const availableMedals = [\r\n    {\r\n      id: 1,\r\n      name: 'Primeiro Passo',\r\n      description: 'Complete seu primeiro treino',\r\n      icon: require('../../assets/images/Medalha_1.svg'),\r\n      requirement: '1 treino completado',\r\n      category: 'Iniciante',\r\n      rarity: 'Comum',\r\n      color: '#FFD700'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Maratonista',\r\n      description: 'Complete 10 treinos',\r\n      icon: require('../../assets/images/Medalha_2.svg'),\r\n      requirement: '10 treinos completados',\r\n      category: 'Resistência',\r\n      rarity: 'Rara',\r\n      color: '#C0C0C0'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Campeão',\r\n      description: 'Complete 50 treinos',\r\n      icon: require('../../assets/images/Medalha_3.svg'),\r\n      requirement: '50 treinos completados',\r\n      category: 'Elite',\r\n      rarity: 'Épica',\r\n      color: '#FF6B6B'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Lenda',\r\n      description: 'Complete 100 treinos',\r\n      icon: require('../../assets/images/Medalha_4.svg'),\r\n      requirement: '100 treinos completados',\r\n      category: 'Lenda',\r\n      rarity: 'Lendária',\r\n      color: '#9B59B6'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Velocista',\r\n      description: 'Complete 5 treinos em um dia',\r\n      icon: require('../../assets/images/Medalha_5.svg'),\r\n      requirement: '5 treinos em 1 dia',\r\n      category: 'Velocidade',\r\n      rarity: 'Rara',\r\n      color: '#3498DB'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Consistente',\r\n      description: 'Treine por 7 dias seguidos',\r\n      icon: require('../../assets/images/Medalha_6.svg'),\r\n      requirement: '7 dias consecutivos',\r\n      category: 'Consistência',\r\n      rarity: 'Épica',\r\n      color: '#2ECC71'\r\n    }\r\n  ];\r\n\r\n  // Simular medalhas obtidas pelo usuário (em produção, viria da API)\r\n  useEffect(() => {\r\n    // Simular algumas medalhas já obtidas\r\n    const obtainedMedals = [1, 2, 5]; // IDs das medalhas obtidas\r\n    setUserMedals(obtainedMedals);\r\n    setAllMedals(availableMedals);\r\n  }, []);\r\n\r\n  const isMedalObtained = (medalId) => {\r\n    return userMedals.includes(medalId);\r\n  };\r\n\r\n  const getRarityColor = (rarity) => {\r\n    switch (rarity) {\r\n      case 'Comum': return '#95A5A6';\r\n      case 'Rara': return '#3498DB';\r\n      case 'Épica': return '#9B59B6';\r\n      case 'Lendária': return '#F39C12';\r\n      default: return '#95A5A6';\r\n    }\r\n  };\r\n\r\n  const renderMedalCard = (medal) => {\r\n    const obtained = isMedalObtained(medal.id);\r\n    \r\n    return (\r\n      <View key={medal.id} style={[styles.medalCard, obtained && styles.medalCardObtained]}>\r\n        <View style={styles.medalIconContainer}>\r\n          <Image \r\n            source={medal.icon} \r\n            style={[styles.medalIcon, !obtained && styles.medalIconLocked]} \r\n            resizeMode=\"contain\"\r\n          />\r\n          {obtained && (\r\n            <View style={styles.obtainedBadge}>\r\n              <Text style={styles.obtainedText}>✓</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n        \r\n        <View style={styles.medalInfo}>\r\n          <Text style={[styles.medalName, !obtained && styles.medalNameLocked]}>\r\n            {medal.name}\r\n          </Text>\r\n          <Text style={[styles.medalDescription, !obtained && styles.medalDescriptionLocked]}>\r\n            {medal.description}\r\n          </Text>\r\n          <Text style={[styles.medalRequirement, !obtained && styles.medalRequirementLocked]}>\r\n            {medal.requirement}\r\n          </Text>\r\n          \r\n          <View style={styles.medalTags}>\r\n            <View style={[styles.medalTag, { backgroundColor: medal.color }]}>\r\n              <Text style={styles.medalTagText}>{medal.category}</Text>\r\n            </View>\r\n            <View style={[styles.medalTag, { backgroundColor: getRarityColor(medal.rarity) }]}>\r\n              <Text style={styles.medalTagText}>{medal.rarity}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const obtainedCount = userMedals.length;\r\n  const totalCount = allMedals.length;\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.logo}>Movz</Text>\r\n        <TouchableOpacity \r\n          style={styles.menuIcon} \r\n          onPress={() => setIsMenuVisible(true)}\r\n        >\r\n          <View style={styles.menuLine} />\r\n          <View style={styles.menuLine} />\r\n          <View style={styles.menuLine} />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Title Section */}\r\n      <View style={styles.titleSection}>\r\n        <Text style={styles.title}>Medalhas</Text>\r\n        <Text style={styles.subtitle}>\r\n          {obtainedCount} de {totalCount} medalhas obtidas\r\n        </Text>\r\n        \r\n        {/* Progress Bar */}\r\n        <View style={styles.progressContainer}>\r\n          <View style={styles.progressBar}>\r\n            <View \r\n              style={[\r\n                styles.progressFill, \r\n                { width: `${(obtainedCount / totalCount) * 100}%` }\r\n              ]} \r\n            />\r\n          </View>\r\n          <Text style={styles.progressText}>\r\n            {Math.round((obtainedCount / totalCount) * 100)}% completo\r\n          </Text>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Medals Grid */}\r\n      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\r\n        <View style={styles.medalsGrid}>\r\n          {allMedals.map(renderMedalCard)}\r\n        </View>\r\n      </ScrollView>\r\n      \r\n      {/* Side Menu */}\r\n      <SideMenu \r\n        isVisible={isMenuVisible} \r\n        onClose={() => setIsMenuVisible(false)}\r\n        onNavigate={onNavigate}\r\n        currentUser={currentUser}\r\n        onLogout={onLogout}\r\n        userType=\"STUDENT\"\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E9EDEE',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 10,\r\n  },\r\n  logo: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    fontFamily: 'Poppins',\r\n  },\r\n  menuIcon: {\r\n    width: 39,\r\n    height: 18,\r\n    justifyContent: 'space-between',\r\n  },\r\n  menuLine: {\r\n    width: 39,\r\n    height: 6,\r\n    backgroundColor: '#D9D9D9',\r\n    borderRadius: 3,\r\n  },\r\n  titleSection: {\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    fontFamily: 'Poppins',\r\n    marginBottom: 5,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n    marginBottom: 20,\r\n  },\r\n  progressContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    backgroundColor: '#D9D9D9',\r\n    borderRadius: 4,\r\n    overflow: 'hidden',\r\n    marginBottom: 8,\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    backgroundColor: '#F9BB55',\r\n    borderRadius: 4,\r\n  },\r\n  progressText: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n    textAlign: 'center',\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n  },\r\n  medalsGrid: {\r\n    paddingBottom: 20,\r\n  },\r\n  medalCard: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 15,\r\n    padding: 20,\r\n    marginBottom: 15,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  medalCardObtained: {\r\n    borderWidth: 2,\r\n    borderColor: '#F9BB55',\r\n  },\r\n  medalIconContainer: {\r\n    position: 'relative',\r\n    marginRight: 15,\r\n  },\r\n  medalIcon: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  medalIconLocked: {\r\n    opacity: 0.3,\r\n  },\r\n  obtainedBadge: {\r\n    position: 'absolute',\r\n    top: -5,\r\n    right: -5,\r\n    backgroundColor: '#2ECC71',\r\n    borderRadius: 10,\r\n    width: 20,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  obtainedText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  medalInfo: {\r\n    flex: 1,\r\n  },\r\n  medalName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    fontFamily: 'Poppins',\r\n    marginBottom: 5,\r\n  },\r\n  medalNameLocked: {\r\n    color: '#999',\r\n  },\r\n  medalDescription: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    fontFamily: 'Poppins',\r\n    marginBottom: 5,\r\n  },\r\n  medalDescriptionLocked: {\r\n    color: '#CCC',\r\n  },\r\n  medalRequirement: {\r\n    fontSize: 12,\r\n    color: '#888',\r\n    fontFamily: 'Poppins',\r\n    marginBottom: 10,\r\n  },\r\n  medalRequirementLocked: {\r\n    color: '#DDD',\r\n  },\r\n  medalTags: {\r\n    flexDirection: 'row',\r\n    gap: 8,\r\n  },\r\n  medalTag: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n    borderRadius: 12,\r\n  },\r\n  medalTagText: {\r\n    fontSize: 10,\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Poppins',\r\n  },\r\n});\r\n\r\nexport default MedalsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}