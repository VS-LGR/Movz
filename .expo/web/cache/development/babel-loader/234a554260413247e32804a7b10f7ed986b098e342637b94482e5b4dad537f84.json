{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://your-api-domain.com/api' : 'http://localhost:3001/api';\nvar ApiService = function () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n    this.token = null;\n  }\n  return _createClass(ApiService, [{\n    key: \"setToken\",\n    value: function setToken(token) {\n      this.token = token;\n    }\n  }, {\n    key: \"clearToken\",\n    value: function clearToken() {\n      this.token = null;\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator(function* (endpoint) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var url = `${API_BASE_URL}${endpoint}`;\n        var config = _objectSpread({\n          headers: _objectSpread({\n            'Content-Type': 'application/json'\n          }, options.headers)\n        }, options);\n        if (this.token) {\n          config.headers.Authorization = `Bearer ${this.token}`;\n        }\n        try {\n          var response = yield fetch(url, config);\n          var data = yield response.json();\n          if (!response.ok) {\n            throw new Error(data.message || 'Erro na requisição');\n          }\n          return data;\n        } catch (error) {\n          console.error('Erro na API:', error);\n          throw error;\n        }\n      });\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(function* (userData) {\n        console.log('🔵 apiService.register chamado com:', userData);\n        var result = yield this.request('/auth/register', {\n          method: 'POST',\n          body: JSON.stringify(userData)\n        });\n        console.log('🔵 apiService.register retornou:', result);\n        return result;\n      });\n      function register(_x2) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* (email, password) {\n        var userType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'STUDENT';\n        return this.request('/auth/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            userType: userType\n          })\n        });\n      });\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"verifyToken\",\n    value: function () {\n      var _verifyToken = _asyncToGenerator(function* () {\n        return this.request('/auth/verify');\n      });\n      function verifyToken() {\n        return _verifyToken.apply(this, arguments);\n      }\n      return verifyToken;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator(function* () {\n        return this.request('/auth/logout', {\n          method: 'POST'\n        });\n      });\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }()\n  }, {\n    key: \"getUserProfile\",\n    value: function () {\n      var _getUserProfile = _asyncToGenerator(function* () {\n        return this.request('/users/profile');\n      });\n      function getUserProfile() {\n        return _getUserProfile.apply(this, arguments);\n      }\n      return getUserProfile;\n    }()\n  }, {\n    key: \"updateUserProfile\",\n    value: function () {\n      var _updateUserProfile = _asyncToGenerator(function* (userData) {\n        return this.request('/users/profile', {\n          method: 'PUT',\n          body: JSON.stringify(userData)\n        });\n      });\n      function updateUserProfile(_x5) {\n        return _updateUserProfile.apply(this, arguments);\n      }\n      return updateUserProfile;\n    }()\n  }, {\n    key: \"changePassword\",\n    value: function () {\n      var _changePassword = _asyncToGenerator(function* (currentPassword, newPassword) {\n        return this.request('/users/password', {\n          method: 'PUT',\n          body: JSON.stringify({\n            currentPassword: currentPassword,\n            newPassword: newPassword\n          })\n        });\n      });\n      function changePassword(_x6, _x7) {\n        return _changePassword.apply(this, arguments);\n      }\n      return changePassword;\n    }()\n  }, {\n    key: \"getUserStats\",\n    value: function () {\n      var _getUserStats = _asyncToGenerator(function* () {\n        return this.request('/users/stats');\n      });\n      function getUserStats() {\n        return _getUserStats.apply(this, arguments);\n      }\n      return getUserStats;\n    }()\n  }, {\n    key: \"addFavoriteSport\",\n    value: function () {\n      var _addFavoriteSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/favorite`, {\n          method: 'POST'\n        });\n      });\n      function addFavoriteSport(_x8) {\n        return _addFavoriteSport.apply(this, arguments);\n      }\n      return addFavoriteSport;\n    }()\n  }, {\n    key: \"removeFavoriteSport\",\n    value: function () {\n      var _removeFavoriteSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/favorite`, {\n          method: 'DELETE'\n        });\n      });\n      function removeFavoriteSport(_x9) {\n        return _removeFavoriteSport.apply(this, arguments);\n      }\n      return removeFavoriteSport;\n    }()\n  }, {\n    key: \"getFavoriteSports\",\n    value: function () {\n      var _getFavoriteSports = _asyncToGenerator(function* () {\n        return this.request('/sports/favorites');\n      });\n      function getFavoriteSports() {\n        return _getFavoriteSports.apply(this, arguments);\n      }\n      return getFavoriteSports;\n    }()\n  }, {\n    key: \"getSports\",\n    value: function () {\n      var _getSports = _asyncToGenerator(function* () {\n        return this.request('/sports');\n      });\n      function getSports() {\n        return _getSports.apply(this, arguments);\n      }\n      return getSports;\n    }()\n  }, {\n    key: \"getSportById\",\n    value: function () {\n      var _getSportById = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}`);\n      });\n      function getSportById(_x0) {\n        return _getSportById.apply(this, arguments);\n      }\n      return getSportById;\n    }()\n  }, {\n    key: \"joinSport\",\n    value: function () {\n      var _joinSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/join`, {\n          method: 'POST'\n        });\n      });\n      function joinSport(_x1) {\n        return _joinSport.apply(this, arguments);\n      }\n      return joinSport;\n    }()\n  }, {\n    key: \"leaveSport\",\n    value: function () {\n      var _leaveSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/leave`, {\n          method: 'DELETE'\n        });\n      });\n      function leaveSport(_x10) {\n        return _leaveSport.apply(this, arguments);\n      }\n      return leaveSport;\n    }()\n  }, {\n    key: \"getUserSports\",\n    value: function () {\n      var _getUserSports = _asyncToGenerator(function* () {\n        return this.request('/sports/user/my-sports');\n      });\n      function getUserSports() {\n        return _getUserSports.apply(this, arguments);\n      }\n      return getUserSports;\n    }()\n  }, {\n    key: \"getSportRanking\",\n    value: function () {\n      var _getSportRanking = _asyncToGenerator(function* (sportId) {\n        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n        var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\n      });\n      function getSportRanking(_x11) {\n        return _getSportRanking.apply(this, arguments);\n      }\n      return getSportRanking;\n    }()\n  }, {\n    key: \"getContentsBySport\",\n    value: function () {\n      var _getContentsBySport = _asyncToGenerator(function* (sportId) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.type) params.append('type', filters.type);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/sport/${sportId}?${params.toString()}`);\n      });\n      function getContentsBySport(_x12) {\n        return _getContentsBySport.apply(this, arguments);\n      }\n      return getContentsBySport;\n    }()\n  }, {\n    key: \"getContentById\",\n    value: function () {\n      var _getContentById = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}`);\n      });\n      function getContentById(_x13) {\n        return _getContentById.apply(this, arguments);\n      }\n      return getContentById;\n    }()\n  }, {\n    key: \"getContentsByType\",\n    value: function () {\n      var _getContentsByType = _asyncToGenerator(function* (type) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/type/${type}?${params.toString()}`);\n      });\n      function getContentsByType(_x14) {\n        return _getContentsByType.apply(this, arguments);\n      }\n      return getContentsByType;\n    }()\n  }, {\n    key: \"getContentProgress\",\n    value: function () {\n      var _getContentProgress = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}/progress`);\n      });\n      function getContentProgress(_x15) {\n        return _getContentProgress.apply(this, arguments);\n      }\n      return getContentProgress;\n    }()\n  }, {\n    key: \"updateContentProgress\",\n    value: function () {\n      var _updateContentProgress = _asyncToGenerator(function* (contentId, progress) {\n        return this.request(`/contents/${contentId}/progress`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            progress: progress\n          })\n        });\n      });\n      function updateContentProgress(_x16, _x17) {\n        return _updateContentProgress.apply(this, arguments);\n      }\n      return updateContentProgress;\n    }()\n  }, {\n    key: \"getCompletedContents\",\n    value: function () {\n      var _getCompletedContents = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\n      });\n      function getCompletedContents() {\n        return _getCompletedContents.apply(this, arguments);\n      }\n      return getCompletedContents;\n    }()\n  }, {\n    key: \"submitScore\",\n    value: function () {\n      var _submitScore = _asyncToGenerator(function* (sportId, score, level) {\n        return this.request('/scores', {\n          method: 'POST',\n          body: JSON.stringify({\n            sportId: sportId,\n            score: score,\n            level: level\n          })\n        });\n      });\n      function submitScore(_x18, _x19, _x20) {\n        return _submitScore.apply(this, arguments);\n      }\n      return submitScore;\n    }()\n  }, {\n    key: \"getUserScores\",\n    value: function () {\n      var _getUserScores = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\n      });\n      function getUserScores() {\n        return _getUserScores.apply(this, arguments);\n      }\n      return getUserScores;\n    }()\n  }, {\n    key: \"getUserScoreBySport\",\n    value: function () {\n      var _getUserScoreBySport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/scores/user/${sportId}`);\n      });\n      function getUserScoreBySport(_x21) {\n        return _getUserScoreBySport.apply(this, arguments);\n      }\n      return getUserScoreBySport;\n    }()\n  }, {\n    key: \"getRanking\",\n    value: function () {\n      var _getRanking = _asyncToGenerator(function* () {\n        var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/scores/ranking?${params.toString()}`);\n      });\n      function getRanking() {\n        return _getRanking.apply(this, arguments);\n      }\n      return getRanking;\n    }()\n  }, {\n    key: \"getScoreStats\",\n    value: function () {\n      var _getScoreStats = _asyncToGenerator(function* () {\n        return this.request('/scores/stats');\n      });\n      function getScoreStats() {\n        return _getScoreStats.apply(this, arguments);\n      }\n      return getScoreStats;\n    }()\n  }, {\n    key: \"sendMessage\",\n    value: function () {\n      var _sendMessage = _asyncToGenerator(function* (message) {\n        return this.request('/chat/send', {\n          method: 'POST',\n          body: JSON.stringify({\n            message: message\n          })\n        });\n      });\n      function sendMessage(_x22) {\n        return _sendMessage.apply(this, arguments);\n      }\n      return sendMessage;\n    }()\n  }, {\n    key: \"getMessages\",\n    value: function () {\n      var _getMessages = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var before = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var params = new URLSearchParams();\n        if (limit) params.append('limit', limit);\n        if (offset) params.append('offset', offset);\n        if (before) params.append('before', before);\n        return this.request(`/chat/messages?${params.toString()}`);\n      });\n      function getMessages() {\n        return _getMessages.apply(this, arguments);\n      }\n      return getMessages;\n    }()\n  }, {\n    key: \"markMessagesAsRead\",\n    value: function () {\n      var _markMessagesAsRead = _asyncToGenerator(function* () {\n        return this.request('/chat/mark-read', {\n          method: 'PUT'\n        });\n      });\n      function markMessagesAsRead() {\n        return _markMessagesAsRead.apply(this, arguments);\n      }\n      return markMessagesAsRead;\n    }()\n  }, {\n    key: \"getChatStats\",\n    value: function () {\n      var _getChatStats = _asyncToGenerator(function* () {\n        return this.request('/chat/stats');\n      });\n      function getChatStats() {\n        return _getChatStats.apply(this, arguments);\n      }\n      return getChatStats;\n    }()\n  }, {\n    key: \"deleteMessage\",\n    value: function () {\n      var _deleteMessage = _asyncToGenerator(function* (messageId) {\n        return this.request(`/chat/${messageId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteMessage(_x23) {\n        return _deleteMessage.apply(this, arguments);\n      }\n      return deleteMessage;\n    }()\n  }, {\n    key: \"getTeacherClasses\",\n    value: function () {\n      var _getTeacherClasses = _asyncToGenerator(function* () {\n        var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var params = new URLSearchParams();\n        if (month) params.append('month', month);\n        if (year) params.append('year', year);\n        return this.request(`/classes?${params.toString()}`);\n      });\n      function getTeacherClasses() {\n        return _getTeacherClasses.apply(this, arguments);\n      }\n      return getTeacherClasses;\n    }()\n  }, {\n    key: \"createOrUpdateClass\",\n    value: function () {\n      var _createOrUpdateClass = _asyncToGenerator(function* (classData) {\n        console.log('apiService.createOrUpdateClass chamado com:', classData);\n        console.log('Token atual:', this.token);\n        return this.request('/classes', {\n          method: 'POST',\n          body: JSON.stringify(classData)\n        });\n      });\n      function createOrUpdateClass(_x24) {\n        return _createOrUpdateClass.apply(this, arguments);\n      }\n      return createOrUpdateClass;\n    }()\n  }, {\n    key: \"deleteClass\",\n    value: function () {\n      var _deleteClass = _asyncToGenerator(function* (classId) {\n        return this.request(`/classes/${classId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteClass(_x25) {\n        return _deleteClass.apply(this, arguments);\n      }\n      return deleteClass;\n    }()\n  }, {\n    key: \"completeClass\",\n    value: function () {\n      var _completeClass = _asyncToGenerator(function* (classId, isCompleted) {\n        return this.request(`/classes/${classId}/complete`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            isCompleted: isCompleted\n          })\n        });\n      });\n      function completeClass(_x26, _x27) {\n        return _completeClass.apply(this, arguments);\n      }\n      return completeClass;\n    }()\n  }, {\n    key: \"getClassStats\",\n    value: function () {\n      var _getClassStats = _asyncToGenerator(function* () {\n        var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var params = new URLSearchParams();\n        if (month) params.append('month', month);\n        if (year) params.append('year', year);\n        return this.request(`/classes/stats?${params.toString()}`);\n      });\n      function getClassStats() {\n        return _getClassStats.apply(this, arguments);\n      }\n      return getClassStats;\n    }()\n  }]);\n}();\nvar apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","NODE_ENV","ApiService","_classCallCheck","token","_createClass","key","value","setToken","clearToken","_request","_asyncToGenerator","endpoint","options","arguments","length","undefined","url","config","_objectSpread","headers","Authorization","response","fetch","data","json","ok","Error","message","error","console","request","_x","apply","_register","userData","log","result","method","body","JSON","stringify","register","_x2","_login","email","password","userType","login","_x3","_x4","_verifyToken","verifyToken","_logout","logout","_getUserProfile","getUserProfile","_updateUserProfile","updateUserProfile","_x5","_changePassword","currentPassword","newPassword","changePassword","_x6","_x7","_getUserStats","getUserStats","_addFavoriteSport","sportId","addFavoriteSport","_x8","_removeFavoriteSport","removeFavoriteSport","_x9","_getFavoriteSports","getFavoriteSports","_getSports","getSports","_getSportById","getSportById","_x0","_joinSport","joinSport","_x1","_leaveSport","leaveSport","_x10","_getUserSports","getUserSports","_getSportRanking","limit","offset","getSportRanking","_x11","_getContentsBySport","filters","params","URLSearchParams","type","append","difficulty","toString","getContentsBySport","_x12","_getContentById","contentId","getContentById","_x13","_getContentsByType","getContentsByType","_x14","_getContentProgress","getContentProgress","_x15","_updateContentProgress","progress","updateContentProgress","_x16","_x17","_getCompletedContents","getCompletedContents","_submitScore","score","level","submitScore","_x18","_x19","_x20","_getUserScores","getUserScores","_getUserScoreBySport","getUserScoreBySport","_x21","_getRanking","getRanking","_getScoreStats","getScoreStats","_sendMessage","sendMessage","_x22","_getMessages","before","getMessages","_markMessagesAsRead","markMessagesAsRead","_getChatStats","getChatStats","_deleteMessage","messageId","deleteMessage","_x23","_getTeacherClasses","month","year","getTeacherClasses","_createOrUpdateClass","classData","createOrUpdateClass","_x24","_deleteClass","classId","deleteClass","_x25","_completeClass","isCompleted","completeClass","_x26","_x27","_getClassStats","getClassStats","apiService"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/apiService.js"],"sourcesContent":["// Serviço para comunicação com a API\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://your-api-domain.com/api' \n  : 'http://localhost:3001/api';\n\nclass ApiService {\n  constructor() {\n    this.token = null;\n  }\n\n  // Configurar token de autenticação\n  setToken(token) {\n    this.token = token;\n  }\n\n  // Remover token\n  clearToken() {\n    this.token = null;\n  }\n\n  // Fazer requisição HTTP\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    \n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    // Adicionar token se disponível\n    if (this.token) {\n      config.headers.Authorization = `Bearer ${this.token}`;\n    }\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Erro na requisição');\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Erro na API:', error);\n      throw error;\n    }\n  }\n\n  // ===== AUTENTICAÇÃO =====\n  \n  async register(userData) {\n    console.log('🔵 apiService.register chamado com:', userData);\n    const result = await this.request('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n    console.log('🔵 apiService.register retornou:', result);\n    return result;\n  }\n\n  async login(email, password, userType = 'STUDENT') {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password, userType }),\n    });\n  }\n\n  async verifyToken() {\n    return this.request('/auth/verify');\n  }\n\n  async logout() {\n    return this.request('/auth/logout', {\n      method: 'POST',\n    });\n  }\n\n  // ===== USUÁRIOS =====\n\n  async getUserProfile() {\n    return this.request('/users/profile');\n  }\n\n  async updateUserProfile(userData) {\n    return this.request('/users/profile', {\n      method: 'PUT',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async changePassword(currentPassword, newPassword) {\n    return this.request('/users/password', {\n      method: 'PUT',\n      body: JSON.stringify({ currentPassword, newPassword }),\n    });\n  }\n\n  async getUserStats() {\n    return this.request('/users/stats');\n  }\n\n  async addFavoriteSport(sportId) {\n    return this.request(`/sports/${sportId}/favorite`, {\n      method: 'POST',\n    });\n  }\n\n  async removeFavoriteSport(sportId) {\n    return this.request(`/sports/${sportId}/favorite`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getFavoriteSports() {\n    return this.request('/sports/favorites');\n  }\n\n  // ===== ESPORTES =====\n\n  async getSports() {\n    return this.request('/sports');\n  }\n\n  async getSportById(sportId) {\n    return this.request(`/sports/${sportId}`);\n  }\n\n  async joinSport(sportId) {\n    return this.request(`/sports/${sportId}/join`, {\n      method: 'POST',\n    });\n  }\n\n  async leaveSport(sportId) {\n    return this.request(`/sports/${sportId}/leave`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getUserSports() {\n    return this.request('/sports/user/my-sports');\n  }\n\n  async getSportRanking(sportId, limit = 10, offset = 0) {\n    return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\n  }\n\n  // ===== CONTEÚDOS =====\n\n  async getContentsBySport(sportId, filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.type) params.append('type', filters.type);\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/contents/sport/${sportId}?${params.toString()}`);\n  }\n\n  async getContentById(contentId) {\n    return this.request(`/contents/${contentId}`);\n  }\n\n  async getContentsByType(type, filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.sportId) params.append('sportId', filters.sportId);\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/contents/type/${type}?${params.toString()}`);\n  }\n\n  async getContentProgress(contentId) {\n    return this.request(`/contents/${contentId}/progress`);\n  }\n\n  async updateContentProgress(contentId, progress) {\n    return this.request(`/contents/${contentId}/progress`, {\n      method: 'PUT',\n      body: JSON.stringify({ progress }),\n    });\n  }\n\n  async getCompletedContents(limit = 20, offset = 0) {\n    return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\n  }\n\n  // ===== PONTUAÇÕES =====\n\n  async submitScore(sportId, score, level) {\n    return this.request('/scores', {\n      method: 'POST',\n      body: JSON.stringify({ sportId, score, level }),\n    });\n  }\n\n  async getUserScores(limit = 20, offset = 0) {\n    return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\n  }\n\n  async getUserScoreBySport(sportId) {\n    return this.request(`/scores/user/${sportId}`);\n  }\n\n  async getRanking(filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.sportId) params.append('sportId', filters.sportId);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/scores/ranking?${params.toString()}`);\n  }\n\n  async getScoreStats() {\n    return this.request('/scores/stats');\n  }\n\n  // ===== CHAT =====\n\n  async sendMessage(message) {\n    return this.request('/chat/send', {\n      method: 'POST',\n      body: JSON.stringify({ message }),\n    });\n  }\n\n  async getMessages(limit = 50, offset = 0, before = null) {\n    const params = new URLSearchParams();\n    if (limit) params.append('limit', limit);\n    if (offset) params.append('offset', offset);\n    if (before) params.append('before', before);\n\n    return this.request(`/chat/messages?${params.toString()}`);\n  }\n\n  async markMessagesAsRead() {\n    return this.request('/chat/mark-read', {\n      method: 'PUT',\n    });\n  }\n\n  async getChatStats() {\n    return this.request('/chat/stats');\n  }\n\n  async deleteMessage(messageId) {\n    return this.request(`/chat/${messageId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // ===== AULAS DE PROFESSOR =====\n\n  async getTeacherClasses(month = null, year = null) {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n\n    return this.request(`/classes?${params.toString()}`);\n  }\n\n  async createOrUpdateClass(classData) {\n    console.log('apiService.createOrUpdateClass chamado com:', classData);\n    console.log('Token atual:', this.token);\n    return this.request('/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async deleteClass(classId) {\n    return this.request(`/classes/${classId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async completeClass(classId, isCompleted) {\n    return this.request(`/classes/${classId}/complete`, {\n      method: 'PUT',\n      body: JSON.stringify({ isCompleted }),\n    });\n  }\n\n  async getClassStats(month = null, year = null) {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n\n    return this.request(`/classes/stats?${params.toString()}`);\n  }\n}\n\n// Instância singleton\nconst apiService = new ApiService();\n\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}