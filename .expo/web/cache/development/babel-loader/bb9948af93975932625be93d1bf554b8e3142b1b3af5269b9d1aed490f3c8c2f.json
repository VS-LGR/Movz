{"ast":null,"code":"var _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar fetch = require('node-fetch');\nfunction testFrontendDebug() {\n  return _testFrontendDebug.apply(this, arguments);\n}\nfunction _testFrontendDebug() {\n  _testFrontendDebug = _asyncToGenerator(function* () {\n    console.log('🧪 Testando frontend com debug...\\n');\n    var formData = {\n      name: 'Teste Frontend Debug',\n      email: 'debug@teste.com',\n      password: '123456',\n      age: '25',\n      school: 'Escola Debug',\n      class: 'Turma Debug'\n    };\n    console.log('📝 Dados do formulário (como vem do input):', formData);\n    var userDataToSend = _objectSpread(_objectSpread({}, formData), {}, {\n      age: parseInt(formData.age, 10)\n    });\n    console.log('📤 Dados a serem enviados (após conversão):', userDataToSend);\n    try {\n      console.log('📡 Enviando para API...');\n      var response = yield fetch('http://localhost:3001/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userDataToSend)\n      });\n      console.log('📡 Status:', response.status);\n      var data = yield response.json();\n      console.log('📡 Resposta:', data);\n      if (response.ok && data.success) {\n        console.log('✅ Teste bem-sucedido!');\n        console.log('👤 Usuário criado:', data.data.user.name);\n        console.log('📧 Email:', data.data.user.email);\n        console.log('🎯 Próximo passo: Testar no navegador');\n      } else {\n        console.log('❌ Erro na API:', data.message);\n      }\n    } catch (error) {\n      console.error('❌ Erro na requisição:', error.message);\n    }\n  });\n  return _testFrontendDebug.apply(this, arguments);\n}\ntestFrontendDebug();","map":{"version":3,"names":["fetch","require","testFrontendDebug","_testFrontendDebug","apply","arguments","_asyncToGenerator","console","log","formData","name","email","password","age","school","class","userDataToSend","_objectSpread","parseInt","response","method","headers","body","JSON","stringify","status","data","json","ok","success","user","message","error"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/test-frontend-debug.js"],"sourcesContent":["// Script para testar o frontend com debug\r\nconst fetch = require('node-fetch');\r\n\r\nasync function testFrontendDebug() {\r\n  console.log('🧪 Testando frontend com debug...\\n');\r\n\r\n  // Simular dados do formulário\r\n  const formData = {\r\n    name: 'Teste Frontend Debug',\r\n    email: 'debug@teste.com',\r\n    password: '123456',\r\n    age: '25', // String como vem do input\r\n    school: 'Escola Debug',\r\n    class: 'Turma Debug'\r\n  };\r\n\r\n  console.log('📝 Dados do formulário (como vem do input):', formData);\r\n\r\n  // Converter age para número (como fazemos no frontend)\r\n  const userDataToSend = {\r\n    ...formData,\r\n    age: parseInt(formData.age, 10)\r\n  };\r\n\r\n  console.log('📤 Dados a serem enviados (após conversão):', userDataToSend);\r\n\r\n  try {\r\n    console.log('📡 Enviando para API...');\r\n    \r\n    const response = await fetch('http://localhost:3001/api/auth/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userDataToSend),\r\n    });\r\n\r\n    console.log('📡 Status:', response.status);\r\n    const data = await response.json();\r\n    console.log('📡 Resposta:', data);\r\n\r\n    if (response.ok && data.success) {\r\n      console.log('✅ Teste bem-sucedido!');\r\n      console.log('👤 Usuário criado:', data.data.user.name);\r\n      console.log('📧 Email:', data.data.user.email);\r\n      console.log('🎯 Próximo passo: Testar no navegador');\r\n    } else {\r\n      console.log('❌ Erro na API:', data.message);\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('❌ Erro na requisição:', error.message);\r\n  }\r\n}\r\n\r\ntestFrontendDebug();\r\n"],"mappings":";;;;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AAAC,SAErBC,iBAAiBA,CAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,mBAAA;EAAAA,kBAAA,GAAAG,iBAAA,CAAhC,aAAmC;IACjCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAGlD,IAAMC,QAAQ,GAAG;MACfC,IAAI,EAAE,sBAAsB;MAC5BC,KAAK,EAAE,iBAAiB;MACxBC,QAAQ,EAAE,QAAQ;MAClBC,GAAG,EAAE,IAAI;MACTC,MAAM,EAAE,cAAc;MACtBC,KAAK,EAAE;IACT,CAAC;IAEDR,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEC,QAAQ,CAAC;IAGpE,IAAMO,cAAc,GAAAC,aAAA,CAAAA,aAAA,KACfR,QAAQ;MACXI,GAAG,EAAEK,QAAQ,CAACT,QAAQ,CAACI,GAAG,EAAE,EAAE;IAAC,EAChC;IAEDN,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEQ,cAAc,CAAC;IAE1E,IAAI;MACFT,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAEtC,IAAMW,QAAQ,SAASnB,KAAK,CAAC,yCAAyC,EAAE;QACtEoB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,cAAc;MACrC,CAAC,CAAC;MAEFT,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEW,QAAQ,CAACM,MAAM,CAAC;MAC1C,IAAMC,IAAI,SAASP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCpB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEkB,IAAI,CAAC;MAEjC,IAAIP,QAAQ,CAACS,EAAE,IAAIF,IAAI,CAACG,OAAO,EAAE;QAC/BtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpCD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEkB,IAAI,CAACA,IAAI,CAACI,IAAI,CAACpB,IAAI,CAAC;QACtDH,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEkB,IAAI,CAACA,IAAI,CAACI,IAAI,CAACnB,KAAK,CAAC;QAC9CJ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACtD,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEkB,IAAI,CAACK,OAAO,CAAC;MAC7C;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdzB,OAAO,CAACyB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACD,OAAO,CAAC;IACvD;EACF,CAAC;EAAA,OAAA5B,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEDH,iBAAiB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}