{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Storage from \"./storage\";\nimport apiService from \"./apiService\";\nimport LoginScreen from \"./LoginScreen\";\nimport HomeScreen from \"./HomeScreen\";\nimport RankingScreen from \"./RankingScreen\";\nimport TutorialScreen from \"./TutorialScreen\";\nimport ChatScreen from \"./ChatScreen\";\nimport RegisterScreen from \"./RegisterScreen\";\nimport TeacherRegisterScreen from \"./TeacherRegisterScreen\";\nimport MedalsScreen from \"./MedalsScreen\";\nimport AchievementsScreen from \"./AchievementsScreen\";\nimport TeacherScheduleScreen from \"./TeacherScheduleScreen\";\nimport TeacherClassesScreen from \"./TeacherClassesScreen\";\nimport CreateClassScreen from \"./CreateClassScreen\";\nimport ClassScreen from \"./ClassScreen\";\nimport ClassManagementScreen from \"./ClassManagementScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentUser = _useState4[0],\n    setCurrentUser = _useState4[1];\n  var _useState5 = useState('home'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentScreen = _useState6[0],\n    setCurrentScreen = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isMenuVisible = _useState8[0],\n    setIsMenuVisible = _useState8[1];\n  var _useState9 = useState(true),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isLoading = _useState0[0],\n    setIsLoading = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    showSuccessMessage = _useState10[0],\n    setShowSuccessMessage = _useState10[1];\n  useEffect(function () {\n    checkAuthStatus();\n  }, []);\n  var checkAuthStatus = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield Storage.getItem('authToken');\n        if (token) {\n          apiService.setToken(token);\n          var response = yield apiService.verifyToken();\n          if (response.success) {\n            setCurrentUser(response.data.user);\n            setIsAuthenticated(true);\n          } else {\n            yield Storage.removeItem('authToken');\n            apiService.clearToken();\n          }\n        }\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n        yield Storage.removeItem('authToken');\n        apiService.clearToken();\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function checkAuthStatus() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* (userData) {\n      try {\n        var response = yield apiService.login(userData.email, userData.password, userData.userType);\n        if (response.success) {\n          yield Storage.setItem('authToken', response.data.token);\n          apiService.setToken(response.data.token);\n          setCurrentUser(response.data.user);\n          setIsAuthenticated(true);\n          setCurrentScreen('home');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      }\n    });\n    return function handleLogin(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRegister = function () {\n    var _ref3 = _asyncToGenerator(function* (userData) {\n      console.log('🔵 App.js handleRegister chamado com:', userData);\n      try {\n        console.log('📡 Chamando apiService.register...');\n        var response = yield apiService.register(userData);\n        console.log('📡 Resposta da API:', response);\n        if (response.success) {\n          console.log('✅ Cadastro bem-sucedido, redirecionando para login');\n          setCurrentScreen('login');\n          return {\n            success: true,\n            message: 'Cadastro realizado com sucesso! Agora você pode fazer login.'\n          };\n        } else {\n          console.log('❌ Resposta não foi bem-sucedida:', response);\n          throw new Error(response.message || 'Erro no cadastro');\n        }\n      } catch (error) {\n        console.error('❌ Register error:', error);\n        throw error;\n      }\n    });\n    return function handleRegister(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield apiService.logout();\n        yield Storage.removeItem('authToken');\n        apiService.clearToken();\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n        setCurrentScreen('home');\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var navigateToScreen = function navigateToScreen(screen) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    setCurrentScreen(screen);\n    setIsMenuVisible(false);\n    if (params && Object.keys(params).length > 0) {\n      window.navigationParams = params;\n    }\n  };\n  var navigateToRegister = function navigateToRegister() {\n    setCurrentScreen('register');\n  };\n  var navigateToTeacherRegister = function navigateToTeacherRegister() {\n    setCurrentScreen('teacherRegister');\n  };\n  var navigateToLogin = function navigateToLogin() {\n    setCurrentScreen('login');\n    setShowSuccessMessage(true);\n  };\n  var renderScreen = function renderScreen() {\n    if (isLoading) {\n      return null;\n    }\n    if (!isAuthenticated) {\n      if (currentScreen === 'register') {\n        return _jsx(RegisterScreen, {\n          onRegister: handleRegister,\n          onNavigateToLogin: navigateToLogin\n        });\n      }\n      if (currentScreen === 'teacherRegister') {\n        return _jsx(TeacherRegisterScreen, {\n          onRegister: handleRegister,\n          onNavigateToLogin: navigateToLogin\n        });\n      }\n      return _jsx(LoginScreen, {\n        onLogin: handleLogin,\n        onNavigateToRegister: navigateToRegister,\n        onNavigateToTeacherRegister: navigateToTeacherRegister,\n        showSuccessMessage: showSuccessMessage,\n        onSuccessMessageShown: function onSuccessMessageShown() {\n          return setShowSuccessMessage(false);\n        }\n      });\n    }\n    switch (currentScreen) {\n      case 'ranking':\n        return _jsx(RankingScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser\n        });\n      case 'tutorial':\n        return _jsx(TutorialScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser\n        });\n      case 'chat':\n        return _jsx(ChatScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser\n        });\n      case 'medals':\n        return _jsx(MedalsScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser\n        });\n      case 'achievements':\n        return _jsx(AchievementsScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser\n        });\n      case 'register':\n        return _jsx(RegisterScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          onRegister: handleRegister,\n          currentUser: currentUser\n        });\n      case 'schedule':\n        return _jsx(TeacherScheduleScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'classes':\n        return _jsx(TeacherClassesScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'createClass':\n        return _jsx(CreateClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'class':\n        return _jsx(ClassScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      case 'classManagement':\n        return _jsx(ClassManagementScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n      default:\n        if (currentUser && currentUser.userType === 'TEACHER') {\n          return _jsx(TeacherScheduleScreen, {\n            isMenuVisible: isMenuVisible,\n            setIsMenuVisible: setIsMenuVisible,\n            onNavigate: navigateToScreen,\n            currentUser: currentUser,\n            onLogout: handleLogout\n          });\n        }\n        return _jsx(HomeScreen, {\n          isMenuVisible: isMenuVisible,\n          setIsMenuVisible: setIsMenuVisible,\n          onNavigate: navigateToScreen,\n          currentUser: currentUser,\n          onLogout: handleLogout\n        });\n    }\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\",\n      backgroundColor: \"#E9EEEE\"\n    }), renderScreen()]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StatusBar","Storage","apiService","LoginScreen","HomeScreen","RankingScreen","TutorialScreen","ChatScreen","RegisterScreen","TeacherRegisterScreen","MedalsScreen","AchievementsScreen","TeacherScheduleScreen","TeacherClassesScreen","CreateClassScreen","ClassScreen","ClassManagementScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","_useState3","_useState4","currentUser","setCurrentUser","_useState5","_useState6","currentScreen","setCurrentScreen","_useState7","_useState8","isMenuVisible","setIsMenuVisible","_useState9","_useState0","isLoading","setIsLoading","_useState1","_useState10","showSuccessMessage","setShowSuccessMessage","checkAuthStatus","_ref","_asyncToGenerator","token","getItem","setToken","response","verifyToken","success","data","user","removeItem","clearToken","error","console","apply","arguments","handleLogin","_ref2","userData","login","email","password","userType","setItem","_x","handleRegister","_ref3","log","register","message","Error","_x2","handleLogout","_ref4","logout","navigateToScreen","screen","params","length","undefined","Object","keys","window","navigationParams","navigateToRegister","navigateToTeacherRegister","navigateToLogin","renderScreen","onRegister","onNavigateToLogin","onLogin","onNavigateToRegister","onNavigateToTeacherRegister","onSuccessMessageShown","onNavigate","onLogout","children","style","backgroundColor"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Storage from './storage'; // Custom storage wrapper\nimport apiService from './apiService';\nimport LoginScreen from './LoginScreen';\nimport HomeScreen from './HomeScreen';\nimport RankingScreen from './RankingScreen';\nimport TutorialScreen from './TutorialScreen';\nimport ChatScreen from './ChatScreen';\nimport RegisterScreen from './RegisterScreen';\nimport TeacherRegisterScreen from './TeacherRegisterScreen';\nimport MedalsScreen from './MedalsScreen';\nimport AchievementsScreen from './AchievementsScreen';\nimport TeacherScheduleScreen from './TeacherScheduleScreen';\nimport TeacherClassesScreen from './TeacherClassesScreen';\nimport CreateClassScreen from './CreateClassScreen';\nimport ClassScreen from './ClassScreen';\nimport ClassManagementScreen from './ClassManagementScreen';\n\nexport default function App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentScreen, setCurrentScreen] = useState('home');\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n  // Verificar se há usuário logado ao iniciar o app\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      // Verificar se há token salvo\n      const token = await Storage.getItem('authToken');\n      if (token) {\n        apiService.setToken(token);\n        \n        // Verificar se o token ainda é válido\n        const response = await apiService.verifyToken();\n        if (response.success) {\n          setCurrentUser(response.data.user);\n          setIsAuthenticated(true);\n        } else {\n          // Token inválido, limpar\n          await Storage.removeItem('authToken');\n          apiService.clearToken();\n        }\n      }\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n      // Em caso de erro, limpar token\n      await Storage.removeItem('authToken');\n      apiService.clearToken();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLogin = async (userData) => {\n    try {\n      const response = await apiService.login(userData.email, userData.password, userData.userType);\n      if (response.success) {\n        // Salvar token\n        await Storage.setItem('authToken', response.data.token);\n        apiService.setToken(response.data.token);\n        \n        setCurrentUser(response.data.user);\n        setIsAuthenticated(true);\n        setCurrentScreen('home');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const handleRegister = async (userData) => {\n    console.log('🔵 App.js handleRegister chamado com:', userData);\n    try {\n      console.log('📡 Chamando apiService.register...');\n      const response = await apiService.register(userData);\n      console.log('📡 Resposta da API:', response);\n      \n      if (response.success) {\n        console.log('✅ Cadastro bem-sucedido, redirecionando para login');\n        // Após cadastro bem-sucedido, redirecionar para login\n        setCurrentScreen('login');\n        return { success: true, message: 'Cadastro realizado com sucesso! Agora você pode fazer login.' };\n      } else {\n        console.log('❌ Resposta não foi bem-sucedida:', response);\n        throw new Error(response.message || 'Erro no cadastro');\n      }\n    } catch (error) {\n      console.error('❌ Register error:', error);\n      throw error;\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await apiService.logout();\n      await Storage.removeItem('authToken');\n      apiService.clearToken();\n      \n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      setCurrentScreen('home');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  const navigateToScreen = (screen, params = {}) => {\n    setCurrentScreen(screen);\n    setIsMenuVisible(false);\n    // Armazenar parâmetros para uso nas telas\n    if (params && Object.keys(params).length > 0) {\n      // Para este exemplo simples, vamos usar um estado global\n      // Em uma aplicação real, você usaria React Navigation\n      window.navigationParams = params;\n    }\n  };\n\n  const navigateToRegister = () => {\n    setCurrentScreen('register');\n  };\n\n  const navigateToTeacherRegister = () => {\n    setCurrentScreen('teacherRegister');\n  };\n\n  const navigateToLogin = () => {\n    setCurrentScreen('login');\n    setShowSuccessMessage(true);\n  };\n\n  const renderScreen = () => {\n    if (isLoading) {\n      return null; // Ou um componente de loading\n    }\n\n    if (!isAuthenticated) {\n      if (currentScreen === 'register') {\n        return <RegisterScreen onRegister={handleRegister} onNavigateToLogin={navigateToLogin} />;\n      }\n      if (currentScreen === 'teacherRegister') {\n        return <TeacherRegisterScreen onRegister={handleRegister} onNavigateToLogin={navigateToLogin} />;\n      }\n      return <LoginScreen onLogin={handleLogin} onNavigateToRegister={navigateToRegister} onNavigateToTeacherRegister={navigateToTeacherRegister} showSuccessMessage={showSuccessMessage} onSuccessMessageShown={() => setShowSuccessMessage(false)} />;\n    }\n\n    switch (currentScreen) {\n      case 'ranking':\n        return <RankingScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} />;\n      case 'tutorial':\n        return <TutorialScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} />;\n      case 'chat':\n        return <ChatScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} />;\n      case 'medals':\n        return <MedalsScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} />;\n      case 'achievements':\n        return <AchievementsScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} />;\n      case 'register':\n        return <RegisterScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} onRegister={handleRegister} currentUser={currentUser} />;\n      case 'schedule':\n        return <TeacherScheduleScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} onLogout={handleLogout} />;\n      case 'classes':\n        return <TeacherClassesScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} onLogout={handleLogout} />;\n      case 'createClass':\n        return <CreateClassScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} onLogout={handleLogout} />;\n      case 'class':\n        return <ClassScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} onLogout={handleLogout} />;\n      case 'classManagement':\n        return <ClassManagementScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} onLogout={handleLogout} />;\n      default:\n        // Para professores, mostrar agenda como tela inicial\n        if (currentUser && currentUser.userType === 'TEACHER') {\n          return <TeacherScheduleScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} onLogout={handleLogout} />;\n        }\n        return <HomeScreen isMenuVisible={isMenuVisible} setIsMenuVisible={setIsMenuVisible} onNavigate={navigateToScreen} currentUser={currentUser} onLogout={handleLogout} />;\n    }\n  };\n\n  return (\n    <>\n      <StatusBar style=\"dark\" backgroundColor=\"#E9EEEE\" />\n      {renderScreen()}\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}