{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState('aluno'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userType = _useState6[0],\n    setUserType = _useState6[1];\n  var handleLogin = function handleLogin() {\n    console.log('Login attempt:', {\n      email: email,\n      password: password,\n      userType: userType\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(Image, {\n          source: require(\"./img/aiAtivo 1logo.png\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        })\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Movz\"\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"E-mail\",\n          placeholderTextColor: \"#666\",\n          value: email,\n          onChangeText: setEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        })\n      }), _jsx(View, {\n        style: styles.inputContainer,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Senha\",\n          placeholderTextColor: \"#666\",\n          value: password,\n          onChangeText: setPassword,\n          secureTextEntry: true\n        })\n      }), _jsxs(View, {\n        style: styles.userTypeContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: [styles.userTypeButton, userType === 'aluno' && styles.userTypeButtonActive],\n          onPress: function onPress() {\n            return setUserType('aluno');\n          },\n          children: _jsx(Text, {\n            style: [styles.userTypeText, userType === 'aluno' && styles.userTypeTextActive],\n            children: \"Aluno\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.userTypeButton, userType === 'professor' && styles.userTypeButtonActive],\n          onPress: function onPress() {\n            return setUserType('professor');\n          },\n          children: _jsx(Text, {\n            style: [styles.userTypeText, userType === 'professor' && styles.userTypeTextActive],\n            children: \"Professor\"\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: styles.loginButtonText,\n          children: \"Entrar no Movimento\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E9EEEE'\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 50\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  logo: {\n    width: 175,\n    height: 195\n  },\n  title: {\n    fontSize: 48,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 40\n  },\n  inputContainer: {\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    fontSize: 16,\n    color: '#000',\n    height: 43\n  },\n  userTypeContainer: {\n    flexDirection: 'row',\n    marginBottom: 30,\n    gap: 10\n  },\n  userTypeButton: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 15,\n    alignItems: 'center',\n    height: 43,\n    justifyContent: 'center'\n  },\n  userTypeButtonActive: {\n    backgroundColor: '#F9BB55'\n  },\n  userTypeText: {\n    fontSize: 16,\n    color: '#000',\n    fontWeight: '500'\n  },\n  userTypeTextActive: {\n    color: '#000',\n    fontWeight: 'bold'\n  },\n  loginButton: {\n    backgroundColor: '#F9BB55',\n    borderRadius: 10,\n    paddingVertical: 15,\n    alignItems: 'center',\n    height: 43,\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 7.4,\n    elevation: 8\n  },\n  loginButtonText: {\n    color: '#000',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Image","Dimensions","SafeAreaView","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","userType","setUserType","handleLogin","console","log","style","styles","container","children","content","logoContainer","source","require","logo","resizeMode","title","inputContainer","input","placeholder","placeholderTextColor","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","userTypeContainer","userTypeButton","userTypeButtonActive","onPress","userTypeText","userTypeTextActive","loginButton","loginButtonText","create","flex","backgroundColor","paddingHorizontal","paddingTop","alignItems","marginBottom","fontSize","fontWeight","color","textAlign","borderRadius","paddingVertical","flexDirection","gap","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/lukag/OneDrive/Área de Trabalho/Muvz_App/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  Dimensions,\r\n  SafeAreaView,\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userType, setUserType] = useState('aluno'); // 'aluno' or 'professor'\r\n\r\n  const handleLogin = () => {\r\n    // Handle login logic here\r\n    console.log('Login attempt:', { email, password, userType });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.content}>\r\n        {/* Logo */}\r\n        <View style={styles.logoContainer}>\r\n          <Image\r\n            source={require('./img/aiAtivo 1logo.png')}\r\n            style={styles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n        </View>\r\n\r\n        {/* Title */}\r\n        <Text style={styles.title}>Movz</Text>\r\n\r\n        {/* Email Input */}\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"E-mail\"\r\n            placeholderTextColor=\"#666\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n        </View>\r\n\r\n        {/* Password Input */}\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Senha\"\r\n            placeholderTextColor=\"#666\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry\r\n          />\r\n        </View>\r\n\r\n        {/* User Type Selection */}\r\n        <View style={styles.userTypeContainer}>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.userTypeButton,\r\n              userType === 'aluno' && styles.userTypeButtonActive\r\n            ]}\r\n            onPress={() => setUserType('aluno')}\r\n          >\r\n            <Text style={[\r\n              styles.userTypeText,\r\n              userType === 'aluno' && styles.userTypeTextActive\r\n            ]}>\r\n              Aluno\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.userTypeButton,\r\n              userType === 'professor' && styles.userTypeButtonActive\r\n            ]}\r\n            onPress={() => setUserType('professor')}\r\n          >\r\n            <Text style={[\r\n              styles.userTypeText,\r\n              userType === 'professor' && styles.userTypeTextActive\r\n            ]}>\r\n              Professor\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Login Button */}\r\n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n          <Text style={styles.loginButtonText}>Entrar no Movimento</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E9EEEE', // Light gray background from Figma\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    paddingTop: 50,\r\n  },\r\n  logoContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  logo: {\r\n    width: 175,\r\n    height: 195,\r\n  },\r\n  title: {\r\n    fontSize: 48,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 15,\r\n    fontSize: 16,\r\n    color: '#000',\r\n    height: 43,\r\n  },\r\n  userTypeContainer: {\r\n    flexDirection: 'row',\r\n    marginBottom: 30,\r\n    gap: 10,\r\n  },\r\n  userTypeButton: {\r\n    flex: 1,\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 15,\r\n    alignItems: 'center',\r\n    height: 43,\r\n    justifyContent: 'center',\r\n  },\r\n  userTypeButtonActive: {\r\n    backgroundColor: '#F9BB55', // Orange color from Figma\r\n  },\r\n  userTypeText: {\r\n    fontSize: 16,\r\n    color: '#000',\r\n    fontWeight: '500',\r\n  },\r\n  userTypeTextActive: {\r\n    color: '#000',\r\n    fontWeight: 'bold',\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#F9BB55', // Orange color from Figma\r\n    borderRadius: 10,\r\n    paddingVertical: 15,\r\n    alignItems: 'center',\r\n    height: 43,\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 7.4,\r\n    elevation: 8, // Android shadow\r\n  },\r\n  loginButtonText: {\r\n    color: '#000',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}