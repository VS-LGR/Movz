{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://your-api-domain.com/api' : 'http://localhost:3001/api';\nvar ApiService = function () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n    this.token = null;\n  }\n  return _createClass(ApiService, [{\n    key: \"setToken\",\n    value: function setToken(token) {\n      this.token = token;\n    }\n  }, {\n    key: \"clearToken\",\n    value: function clearToken() {\n      this.token = null;\n    }\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator(function* (endpoint) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var url = `${API_BASE_URL}${endpoint}`;\n        var config = _objectSpread({\n          headers: _objectSpread({\n            'Content-Type': 'application/json'\n          }, options.headers)\n        }, options);\n        if (this.token) {\n          config.headers.Authorization = `Bearer ${this.token}`;\n          console.log('🔑 API Service - Token configurado:', this.token.substring(0, 20) + '...');\n        } else {\n          console.log('❌ API Service - Nenhum token configurado');\n        }\n        console.log('🔍 API Service - Headers finais:', config.headers);\n        try {\n          var response = yield fetch(url, config);\n          var data = yield response.json();\n          if (!response.ok) {\n            return {\n              success: false,\n              message: data.message || 'Erro na requisição',\n              status: response.status\n            };\n          }\n          return data;\n        } catch (error) {\n          console.error('Erro na API:', error);\n          return {\n            success: false,\n            message: error.message || 'Erro de conexão',\n            status: 0\n          };\n        }\n      });\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(function* (userData) {\n        console.log('🔵 apiService.register chamado com:', userData);\n        var result = yield this.request('/auth/register', {\n          method: 'POST',\n          body: JSON.stringify(userData)\n        });\n        console.log('🔵 apiService.register retornou:', result);\n        return result;\n      });\n      function register(_x2) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(function* (email, password) {\n        var userType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'STUDENT';\n        return this.request('/auth/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            userType: userType\n          })\n        });\n      });\n      function login(_x3, _x4) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"verifyToken\",\n    value: function () {\n      var _verifyToken = _asyncToGenerator(function* () {\n        return this.request('/auth/verify');\n      });\n      function verifyToken() {\n        return _verifyToken.apply(this, arguments);\n      }\n      return verifyToken;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator(function* () {\n        return this.request('/auth/logout', {\n          method: 'POST'\n        });\n      });\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }()\n  }, {\n    key: \"getStudentClass\",\n    value: function () {\n      var _getStudentClass = _asyncToGenerator(function* () {\n        return this.request('/auth/student/class');\n      });\n      function getStudentClass() {\n        return _getStudentClass.apply(this, arguments);\n      }\n      return getStudentClass;\n    }()\n  }, {\n    key: \"getUserProfile\",\n    value: function () {\n      var _getUserProfile = _asyncToGenerator(function* () {\n        return this.request('/users/profile');\n      });\n      function getUserProfile() {\n        return _getUserProfile.apply(this, arguments);\n      }\n      return getUserProfile;\n    }()\n  }, {\n    key: \"updateUserProfile\",\n    value: function () {\n      var _updateUserProfile = _asyncToGenerator(function* (userData) {\n        return this.request('/users/profile', {\n          method: 'PUT',\n          body: JSON.stringify(userData)\n        });\n      });\n      function updateUserProfile(_x5) {\n        return _updateUserProfile.apply(this, arguments);\n      }\n      return updateUserProfile;\n    }()\n  }, {\n    key: \"changePassword\",\n    value: function () {\n      var _changePassword = _asyncToGenerator(function* (currentPassword, newPassword) {\n        return this.request('/users/password', {\n          method: 'PUT',\n          body: JSON.stringify({\n            currentPassword: currentPassword,\n            newPassword: newPassword\n          })\n        });\n      });\n      function changePassword(_x6, _x7) {\n        return _changePassword.apply(this, arguments);\n      }\n      return changePassword;\n    }()\n  }, {\n    key: \"getUserStats\",\n    value: function () {\n      var _getUserStats = _asyncToGenerator(function* () {\n        return this.request('/users/stats');\n      });\n      function getUserStats() {\n        return _getUserStats.apply(this, arguments);\n      }\n      return getUserStats;\n    }()\n  }, {\n    key: \"addFavoriteSport\",\n    value: function () {\n      var _addFavoriteSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/favorite`, {\n          method: 'POST'\n        });\n      });\n      function addFavoriteSport(_x8) {\n        return _addFavoriteSport.apply(this, arguments);\n      }\n      return addFavoriteSport;\n    }()\n  }, {\n    key: \"removeFavoriteSport\",\n    value: function () {\n      var _removeFavoriteSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/favorite`, {\n          method: 'DELETE'\n        });\n      });\n      function removeFavoriteSport(_x9) {\n        return _removeFavoriteSport.apply(this, arguments);\n      }\n      return removeFavoriteSport;\n    }()\n  }, {\n    key: \"getFavoriteSports\",\n    value: function () {\n      var _getFavoriteSports = _asyncToGenerator(function* () {\n        return this.request('/sports/favorites');\n      });\n      function getFavoriteSports() {\n        return _getFavoriteSports.apply(this, arguments);\n      }\n      return getFavoriteSports;\n    }()\n  }, {\n    key: \"getSports\",\n    value: function () {\n      var _getSports = _asyncToGenerator(function* () {\n        return this.request('/sports');\n      });\n      function getSports() {\n        return _getSports.apply(this, arguments);\n      }\n      return getSports;\n    }()\n  }, {\n    key: \"getSportById\",\n    value: function () {\n      var _getSportById = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}`);\n      });\n      function getSportById(_x0) {\n        return _getSportById.apply(this, arguments);\n      }\n      return getSportById;\n    }()\n  }, {\n    key: \"joinSport\",\n    value: function () {\n      var _joinSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/join`, {\n          method: 'POST'\n        });\n      });\n      function joinSport(_x1) {\n        return _joinSport.apply(this, arguments);\n      }\n      return joinSport;\n    }()\n  }, {\n    key: \"leaveSport\",\n    value: function () {\n      var _leaveSport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/sports/${sportId}/leave`, {\n          method: 'DELETE'\n        });\n      });\n      function leaveSport(_x10) {\n        return _leaveSport.apply(this, arguments);\n      }\n      return leaveSport;\n    }()\n  }, {\n    key: \"getUserSports\",\n    value: function () {\n      var _getUserSports = _asyncToGenerator(function* () {\n        return this.request('/sports/user/my-sports');\n      });\n      function getUserSports() {\n        return _getUserSports.apply(this, arguments);\n      }\n      return getUserSports;\n    }()\n  }, {\n    key: \"getSportRanking\",\n    value: function () {\n      var _getSportRanking = _asyncToGenerator(function* (sportId) {\n        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n        var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\n      });\n      function getSportRanking(_x11) {\n        return _getSportRanking.apply(this, arguments);\n      }\n      return getSportRanking;\n    }()\n  }, {\n    key: \"getContentsBySport\",\n    value: function () {\n      var _getContentsBySport = _asyncToGenerator(function* (sportId) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.type) params.append('type', filters.type);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/sport/${sportId}?${params.toString()}`);\n      });\n      function getContentsBySport(_x12) {\n        return _getContentsBySport.apply(this, arguments);\n      }\n      return getContentsBySport;\n    }()\n  }, {\n    key: \"getContentById\",\n    value: function () {\n      var _getContentById = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}`);\n      });\n      function getContentById(_x13) {\n        return _getContentById.apply(this, arguments);\n      }\n      return getContentById;\n    }()\n  }, {\n    key: \"getContentsByType\",\n    value: function () {\n      var _getContentsByType = _asyncToGenerator(function* (type) {\n        var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.difficulty) params.append('difficulty', filters.difficulty);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/contents/type/${type}?${params.toString()}`);\n      });\n      function getContentsByType(_x14) {\n        return _getContentsByType.apply(this, arguments);\n      }\n      return getContentsByType;\n    }()\n  }, {\n    key: \"getContentProgress\",\n    value: function () {\n      var _getContentProgress = _asyncToGenerator(function* (contentId) {\n        return this.request(`/contents/${contentId}/progress`);\n      });\n      function getContentProgress(_x15) {\n        return _getContentProgress.apply(this, arguments);\n      }\n      return getContentProgress;\n    }()\n  }, {\n    key: \"updateContentProgress\",\n    value: function () {\n      var _updateContentProgress = _asyncToGenerator(function* (contentId, progress) {\n        return this.request(`/contents/${contentId}/progress`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            progress: progress\n          })\n        });\n      });\n      function updateContentProgress(_x16, _x17) {\n        return _updateContentProgress.apply(this, arguments);\n      }\n      return updateContentProgress;\n    }()\n  }, {\n    key: \"getCompletedContents\",\n    value: function () {\n      var _getCompletedContents = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\n      });\n      function getCompletedContents() {\n        return _getCompletedContents.apply(this, arguments);\n      }\n      return getCompletedContents;\n    }()\n  }, {\n    key: \"submitScore\",\n    value: function () {\n      var _submitScore = _asyncToGenerator(function* (sportId, score, level) {\n        return this.request('/scores', {\n          method: 'POST',\n          body: JSON.stringify({\n            sportId: sportId,\n            score: score,\n            level: level\n          })\n        });\n      });\n      function submitScore(_x18, _x19, _x20) {\n        return _submitScore.apply(this, arguments);\n      }\n      return submitScore;\n    }()\n  }, {\n    key: \"getUserScores\",\n    value: function () {\n      var _getUserScores = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\n      });\n      function getUserScores() {\n        return _getUserScores.apply(this, arguments);\n      }\n      return getUserScores;\n    }()\n  }, {\n    key: \"getUserScoreBySport\",\n    value: function () {\n      var _getUserScoreBySport = _asyncToGenerator(function* (sportId) {\n        return this.request(`/scores/user/${sportId}`);\n      });\n      function getUserScoreBySport(_x21) {\n        return _getUserScoreBySport.apply(this, arguments);\n      }\n      return getUserScoreBySport;\n    }()\n  }, {\n    key: \"getRanking\",\n    value: function () {\n      var _getRanking = _asyncToGenerator(function* () {\n        var filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var params = new URLSearchParams();\n        if (filters.sportId) params.append('sportId', filters.sportId);\n        if (filters.limit) params.append('limit', filters.limit);\n        if (filters.offset) params.append('offset', filters.offset);\n        return this.request(`/scores/ranking?${params.toString()}`);\n      });\n      function getRanking() {\n        return _getRanking.apply(this, arguments);\n      }\n      return getRanking;\n    }()\n  }, {\n    key: \"getScoreStats\",\n    value: function () {\n      var _getScoreStats = _asyncToGenerator(function* () {\n        return this.request('/scores/stats');\n      });\n      function getScoreStats() {\n        return _getScoreStats.apply(this, arguments);\n      }\n      return getScoreStats;\n    }()\n  }, {\n    key: \"getStudentSportsScores\",\n    value: function () {\n      var _getStudentSportsScores = _asyncToGenerator(function* () {\n        return this.request('/scores/student/sports');\n      });\n      function getStudentSportsScores() {\n        return _getStudentSportsScores.apply(this, arguments);\n      }\n      return getStudentSportsScores;\n    }()\n  }, {\n    key: \"getStudentRanking\",\n    value: function () {\n      var _getStudentRanking = _asyncToGenerator(function* () {\n        return this.request('/scores/student/ranking');\n      });\n      function getStudentRanking() {\n        return _getStudentRanking.apply(this, arguments);\n      }\n      return getStudentRanking;\n    }()\n  }, {\n    key: \"getStudentAttendance\",\n    value: function () {\n      var _getStudentAttendance = _asyncToGenerator(function* () {\n        return this.request('/scores/student/attendance');\n      });\n      function getStudentAttendance() {\n        return _getStudentAttendance.apply(this, arguments);\n      }\n      return getStudentAttendance;\n    }()\n  }, {\n    key: \"getStudentProfile\",\n    value: function () {\n      var _getStudentProfile = _asyncToGenerator(function* () {\n        return this.request('/customization/student/profile');\n      });\n      function getStudentProfile() {\n        return _getStudentProfile.apply(this, arguments);\n      }\n      return getStudentProfile;\n    }()\n  }, {\n    key: \"updateCardCustomization\",\n    value: function () {\n      var _updateCardCustomization = _asyncToGenerator(function* (background, animation, banner) {\n        return this.request('/customization/student/card', {\n          method: 'PUT',\n          body: JSON.stringify({\n            background: banner,\n            animation: animation,\n            banner: banner\n          })\n        });\n      });\n      function updateCardCustomization(_x22, _x23, _x24) {\n        return _updateCardCustomization.apply(this, arguments);\n      }\n      return updateCardCustomization;\n    }()\n  }, {\n    key: \"calculateStudentXP\",\n    value: function () {\n      var _calculateStudentXP = _asyncToGenerator(function* () {\n        return this.request('/customization/student/calculate-xp', {\n          method: 'POST'\n        });\n      });\n      function calculateStudentXP() {\n        return _calculateStudentXP.apply(this, arguments);\n      }\n      return calculateStudentXP;\n    }()\n  }, {\n    key: \"sendMessage\",\n    value: function () {\n      var _sendMessage = _asyncToGenerator(function* (message) {\n        return this.request('/chat/send', {\n          method: 'POST',\n          body: JSON.stringify({\n            message: message\n          })\n        });\n      });\n      function sendMessage(_x25) {\n        return _sendMessage.apply(this, arguments);\n      }\n      return sendMessage;\n    }()\n  }, {\n    key: \"getMessages\",\n    value: function () {\n      var _getMessages = _asyncToGenerator(function* () {\n        var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var before = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var params = new URLSearchParams();\n        if (limit) params.append('limit', limit);\n        if (offset) params.append('offset', offset);\n        if (before) params.append('before', before);\n        return this.request(`/chat/messages?${params.toString()}`);\n      });\n      function getMessages() {\n        return _getMessages.apply(this, arguments);\n      }\n      return getMessages;\n    }()\n  }, {\n    key: \"markMessagesAsRead\",\n    value: function () {\n      var _markMessagesAsRead = _asyncToGenerator(function* () {\n        return this.request('/chat/mark-read', {\n          method: 'PUT'\n        });\n      });\n      function markMessagesAsRead() {\n        return _markMessagesAsRead.apply(this, arguments);\n      }\n      return markMessagesAsRead;\n    }()\n  }, {\n    key: \"getChatStats\",\n    value: function () {\n      var _getChatStats = _asyncToGenerator(function* () {\n        return this.request('/chat/stats');\n      });\n      function getChatStats() {\n        return _getChatStats.apply(this, arguments);\n      }\n      return getChatStats;\n    }()\n  }, {\n    key: \"deleteMessage\",\n    value: function () {\n      var _deleteMessage = _asyncToGenerator(function* (messageId) {\n        return this.request(`/chat/${messageId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteMessage(_x26) {\n        return _deleteMessage.apply(this, arguments);\n      }\n      return deleteMessage;\n    }()\n  }, {\n    key: \"getTeacherClasses\",\n    value: function () {\n      var _getTeacherClasses = _asyncToGenerator(function* () {\n        var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var params = new URLSearchParams();\n        if (month) params.append('month', month);\n        if (year) params.append('year', year);\n        return this.request(`/classes?${params.toString()}`);\n      });\n      function getTeacherClasses() {\n        return _getTeacherClasses.apply(this, arguments);\n      }\n      return getTeacherClasses;\n    }()\n  }, {\n    key: \"createOrUpdateClass\",\n    value: function () {\n      var _createOrUpdateClass = _asyncToGenerator(function* (classData) {\n        console.log('apiService.createOrUpdateClass chamado com:', classData);\n        console.log('Token atual:', this.token);\n        return this.request('/classes', {\n          method: 'POST',\n          body: JSON.stringify(classData)\n        });\n      });\n      function createOrUpdateClass(_x27) {\n        return _createOrUpdateClass.apply(this, arguments);\n      }\n      return createOrUpdateClass;\n    }()\n  }, {\n    key: \"deleteClass\",\n    value: function () {\n      var _deleteClass = _asyncToGenerator(function* (classId) {\n        return this.request(`/classes/${classId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteClass(_x28) {\n        return _deleteClass.apply(this, arguments);\n      }\n      return deleteClass;\n    }()\n  }, {\n    key: \"getClassStudents\",\n    value: function () {\n      var _getClassStudents = _asyncToGenerator(function* (classId) {\n        return this.request(`/class-management/classes/${classId}/students`);\n      });\n      function getClassStudents(_x29) {\n        return _getClassStudents.apply(this, arguments);\n      }\n      return getClassStudents;\n    }()\n  }, {\n    key: \"saveAttendance\",\n    value: function () {\n      var _saveAttendance = _asyncToGenerator(function* (classId, attendanceData) {\n        return this.request(`/class-management/classes/${classId}/attendance`, {\n          method: 'POST',\n          body: JSON.stringify(attendanceData)\n        });\n      });\n      function saveAttendance(_x30, _x31) {\n        return _saveAttendance.apply(this, arguments);\n      }\n      return saveAttendance;\n    }()\n  }, {\n    key: \"saveBatchAttendance\",\n    value: function () {\n      var _saveBatchAttendance = _asyncToGenerator(function* (classId, attendances) {\n        var lessonDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        return this.request(`/class-management/classes/${classId}/attendance/batch`, {\n          method: 'POST',\n          body: JSON.stringify({\n            attendances: attendances,\n            lessonDate: lessonDate\n          })\n        });\n      });\n      function saveBatchAttendance(_x32, _x33) {\n        return _saveBatchAttendance.apply(this, arguments);\n      }\n      return saveBatchAttendance;\n    }()\n  }, {\n    key: \"getClassAttendance\",\n    value: function () {\n      var _getClassAttendance = _asyncToGenerator(function* (classId) {\n        var lessonDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var params = lessonDate ? `?lessonDate=${lessonDate}` : '';\n        return this.request(`/class-management/classes/${classId}/attendance${params}`);\n      });\n      function getClassAttendance(_x34) {\n        return _getClassAttendance.apply(this, arguments);\n      }\n      return getClassAttendance;\n    }()\n  }, {\n    key: \"completeClass\",\n    value: function () {\n      var _completeClass = _asyncToGenerator(function* (classId) {\n        var isCompleted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return this.request(`/classes/${classId}/complete`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            isCompleted: isCompleted\n          })\n        });\n      });\n      function completeClass(_x35) {\n        return _completeClass.apply(this, arguments);\n      }\n      return completeClass;\n    }()\n  }, {\n    key: \"getClassStats\",\n    value: function () {\n      var _getClassStats = _asyncToGenerator(function* () {\n        var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var year = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var params = new URLSearchParams();\n        if (month) params.append('month', month);\n        if (year) params.append('year', year);\n        return this.request(`/classes/stats?${params.toString()}`);\n      });\n      function getClassStats() {\n        return _getClassStats.apply(this, arguments);\n      }\n      return getClassStats;\n    }()\n  }, {\n    key: \"getClasses\",\n    value: function () {\n      var _getClasses = _asyncToGenerator(function* () {\n        return this.request('/class-management/classes');\n      });\n      function getClasses() {\n        return _getClasses.apply(this, arguments);\n      }\n      return getClasses;\n    }()\n  }, {\n    key: \"createClass\",\n    value: function () {\n      var _createClass2 = _asyncToGenerator(function* (classData) {\n        return this.request('/class-management/classes', {\n          method: 'POST',\n          body: JSON.stringify(classData)\n        });\n      });\n      function createClass(_x36) {\n        return _createClass2.apply(this, arguments);\n      }\n      return createClass;\n    }()\n  }, {\n    key: \"updateClass\",\n    value: function () {\n      var _updateClass = _asyncToGenerator(function* (classId, classData) {\n        return this.request(`/class-management/classes/${classId}`, {\n          method: 'PUT',\n          body: JSON.stringify(classData)\n        });\n      });\n      function updateClass(_x37, _x38) {\n        return _updateClass.apply(this, arguments);\n      }\n      return updateClass;\n    }()\n  }, {\n    key: \"deleteTurma\",\n    value: function () {\n      var _deleteTurma = _asyncToGenerator(function* (classId) {\n        return this.request(`/class-management/classes/${classId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteTurma(_x39) {\n        return _deleteTurma.apply(this, arguments);\n      }\n      return deleteTurma;\n    }()\n  }, {\n    key: \"getAvailableStudents\",\n    value: function () {\n      var _getAvailableStudents = _asyncToGenerator(function* () {\n        var classId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        var params = new URLSearchParams();\n        if (classId) params.append('classId', classId);\n        if (search) params.append('search', search);\n        return this.request(`/class-management/students/available?${params.toString()}`);\n      });\n      function getAvailableStudents() {\n        return _getAvailableStudents.apply(this, arguments);\n      }\n      return getAvailableStudents;\n    }()\n  }, {\n    key: \"addStudentToClass\",\n    value: function () {\n      var _addStudentToClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/class-management/classes/${classId}/students`, {\n          method: 'POST',\n          body: JSON.stringify({\n            studentId: studentId\n          })\n        });\n      });\n      function addStudentToClass(_x40, _x41) {\n        return _addStudentToClass.apply(this, arguments);\n      }\n      return addStudentToClass;\n    }()\n  }, {\n    key: \"removeStudentFromClass\",\n    value: function () {\n      var _removeStudentFromClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/class-management/classes/${classId}/students/${studentId}`, {\n          method: 'DELETE'\n        });\n      });\n      function removeStudentFromClass(_x42, _x43) {\n        return _removeStudentFromClass.apply(this, arguments);\n      }\n      return removeStudentFromClass;\n    }()\n  }, {\n    key: \"getClassManagementStats\",\n    value: function () {\n      var _getClassManagementStats = _asyncToGenerator(function* () {\n        return this.request('/class-management/classes/stats');\n      });\n      function getClassManagementStats() {\n        return _getClassManagementStats.apply(this, arguments);\n      }\n      return getClassManagementStats;\n    }()\n  }, {\n    key: \"saveClassScore\",\n    value: function () {\n      var _saveClassScore = _asyncToGenerator(function* (classId, studentId, sportId, score) {\n        var notes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n        var lessonDate = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        return this.request(`/class-management/classes/${classId}/scores`, {\n          method: 'POST',\n          body: JSON.stringify({\n            studentId: studentId,\n            sportId: sportId,\n            score: score,\n            notes: notes,\n            lessonDate: lessonDate\n          })\n        });\n      });\n      function saveClassScore(_x44, _x45, _x46, _x47) {\n        return _saveClassScore.apply(this, arguments);\n      }\n      return saveClassScore;\n    }()\n  }, {\n    key: \"saveBatchClassScores\",\n    value: function () {\n      var _saveBatchClassScores = _asyncToGenerator(function* (classId, scores) {\n        var lessonDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        return this.request(`/class-management/classes/${classId}/scores/batch`, {\n          method: 'POST',\n          body: JSON.stringify({\n            scores: scores,\n            lessonDate: lessonDate\n          })\n        });\n      });\n      function saveBatchClassScores(_x48, _x49) {\n        return _saveBatchClassScores.apply(this, arguments);\n      }\n      return saveBatchClassScores;\n    }()\n  }, {\n    key: \"getClassScores\",\n    value: function () {\n      var _getClassScores = _asyncToGenerator(function* (classId) {\n        return this.request(`/class-management/classes/${classId}/scores`);\n      });\n      function getClassScores(_x50) {\n        return _getClassScores.apply(this, arguments);\n      }\n      return getClassScores;\n    }()\n  }, {\n    key: \"registerInstitution\",\n    value: function () {\n      var _registerInstitution = _asyncToGenerator(function* (institutionData) {\n        return this.request('/institutions/register', {\n          method: 'POST',\n          body: JSON.stringify(institutionData)\n        });\n      });\n      function registerInstitution(_x51) {\n        return _registerInstitution.apply(this, arguments);\n      }\n      return registerInstitution;\n    }()\n  }, {\n    key: \"loginInstitution\",\n    value: function () {\n      var _loginInstitution = _asyncToGenerator(function* (email, password) {\n        return this.request('/institutions/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n      });\n      function loginInstitution(_x52, _x53) {\n        return _loginInstitution.apply(this, arguments);\n      }\n      return loginInstitution;\n    }()\n  }, {\n    key: \"searchUserByCPF\",\n    value: function () {\n      var _searchUserByCPF = _asyncToGenerator(function* (cpf) {\n        return this.request(`/institutions/users/search?cpf=${cpf}`);\n      });\n      function searchUserByCPF(_x54) {\n        return _searchUserByCPF.apply(this, arguments);\n      }\n      return searchUserByCPF;\n    }()\n  }, {\n    key: \"addUserToInstitution\",\n    value: function () {\n      var _addUserToInstitution = _asyncToGenerator(function* (userId) {\n        return this.request(`/institutions/users/${userId}/add`, {\n          method: 'POST'\n        });\n      });\n      function addUserToInstitution(_x55) {\n        return _addUserToInstitution.apply(this, arguments);\n      }\n      return addUserToInstitution;\n    }()\n  }, {\n    key: \"removeUserFromInstitution\",\n    value: function () {\n      var _removeUserFromInstitution = _asyncToGenerator(function* (userId) {\n        return this.request(`/institutions/users/${userId}/remove`, {\n          method: 'DELETE'\n        });\n      });\n      function removeUserFromInstitution(_x56) {\n        return _removeUserFromInstitution.apply(this, arguments);\n      }\n      return removeUserFromInstitution;\n    }()\n  }, {\n    key: \"getInstitutionUsers\",\n    value: function () {\n      var _getInstitutionUsers = _asyncToGenerator(function* () {\n        var userType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        var params = new URLSearchParams();\n        if (userType) params.append('userType', userType);\n        if (search) params.append('search', search);\n        return this.request(`/institutions/users?${params.toString()}`);\n      });\n      function getInstitutionUsers() {\n        return _getInstitutionUsers.apply(this, arguments);\n      }\n      return getInstitutionUsers;\n    }()\n  }, {\n    key: \"getInstitutionClasses\",\n    value: function () {\n      var _getInstitutionClasses = _asyncToGenerator(function* () {\n        return this.request('/institutions/classes');\n      });\n      function getInstitutionClasses() {\n        return _getInstitutionClasses.apply(this, arguments);\n      }\n      return getInstitutionClasses;\n    }()\n  }, {\n    key: \"createInstitutionClass\",\n    value: function () {\n      var _createInstitutionClass = _asyncToGenerator(function* (classData) {\n        return this.request('/institutions/classes', {\n          method: 'POST',\n          body: JSON.stringify(classData)\n        });\n      });\n      function createInstitutionClass(_x57) {\n        return _createInstitutionClass.apply(this, arguments);\n      }\n      return createInstitutionClass;\n    }()\n  }, {\n    key: \"addStudentToInstitutionClass\",\n    value: function () {\n      var _addStudentToInstitutionClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/institutions/classes/${classId}/students`, {\n          method: 'POST',\n          body: JSON.stringify({\n            studentId: studentId\n          })\n        });\n      });\n      function addStudentToInstitutionClass(_x58, _x59) {\n        return _addStudentToInstitutionClass.apply(this, arguments);\n      }\n      return addStudentToInstitutionClass;\n    }()\n  }, {\n    key: \"removeStudentFromInstitutionClass\",\n    value: function () {\n      var _removeStudentFromInstitutionClass = _asyncToGenerator(function* (classId, studentId) {\n        return this.request(`/institutions/classes/${classId}/students/${studentId}`, {\n          method: 'DELETE'\n        });\n      });\n      function removeStudentFromInstitutionClass(_x60, _x61) {\n        return _removeStudentFromInstitutionClass.apply(this, arguments);\n      }\n      return removeStudentFromInstitutionClass;\n    }()\n  }, {\n    key: \"deleteInstitutionClass\",\n    value: function () {\n      var _deleteInstitutionClass = _asyncToGenerator(function* (classId) {\n        return this.request(`/institutions/classes/${classId}`, {\n          method: 'DELETE'\n        });\n      });\n      function deleteInstitutionClass(_x62) {\n        return _deleteInstitutionClass.apply(this, arguments);\n      }\n      return deleteInstitutionClass;\n    }()\n  }, {\n    key: \"getInstitutionStats\",\n    value: function () {\n      var _getInstitutionStats = _asyncToGenerator(function* () {\n        return this.request('/institutions/stats');\n      });\n      function getInstitutionStats() {\n        return _getInstitutionStats.apply(this, arguments);\n      }\n      return getInstitutionStats;\n    }()\n  }, {\n    key: \"getInstitutionClassDetails\",\n    value: function () {\n      var _getInstitutionClassDetails = _asyncToGenerator(function* (classId) {\n        return this.request(`/institutions/classes/${classId}/details`);\n      });\n      function getInstitutionClassDetails(_x63) {\n        return _getInstitutionClassDetails.apply(this, arguments);\n      }\n      return getInstitutionClassDetails;\n    }()\n  }]);\n}();\nvar apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","NODE_ENV","ApiService","_classCallCheck","token","_createClass","key","value","setToken","clearToken","_request","_asyncToGenerator","endpoint","options","arguments","length","undefined","url","config","_objectSpread","headers","Authorization","console","log","substring","response","fetch","data","json","ok","success","message","status","error","request","_x","apply","_register","userData","result","method","body","JSON","stringify","register","_x2","_login","email","password","userType","login","_x3","_x4","_verifyToken","verifyToken","_logout","logout","_getStudentClass","getStudentClass","_getUserProfile","getUserProfile","_updateUserProfile","updateUserProfile","_x5","_changePassword","currentPassword","newPassword","changePassword","_x6","_x7","_getUserStats","getUserStats","_addFavoriteSport","sportId","addFavoriteSport","_x8","_removeFavoriteSport","removeFavoriteSport","_x9","_getFavoriteSports","getFavoriteSports","_getSports","getSports","_getSportById","getSportById","_x0","_joinSport","joinSport","_x1","_leaveSport","leaveSport","_x10","_getUserSports","getUserSports","_getSportRanking","limit","offset","getSportRanking","_x11","_getContentsBySport","filters","params","URLSearchParams","type","append","difficulty","toString","getContentsBySport","_x12","_getContentById","contentId","getContentById","_x13","_getContentsByType","getContentsByType","_x14","_getContentProgress","getContentProgress","_x15","_updateContentProgress","progress","updateContentProgress","_x16","_x17","_getCompletedContents","getCompletedContents","_submitScore","score","level","submitScore","_x18","_x19","_x20","_getUserScores","getUserScores","_getUserScoreBySport","getUserScoreBySport","_x21","_getRanking","getRanking","_getScoreStats","getScoreStats","_getStudentSportsScores","getStudentSportsScores","_getStudentRanking","getStudentRanking","_getStudentAttendance","getStudentAttendance","_getStudentProfile","getStudentProfile","_updateCardCustomization","background","animation","banner","updateCardCustomization","_x22","_x23","_x24","_calculateStudentXP","calculateStudentXP","_sendMessage","sendMessage","_x25","_getMessages","before","getMessages","_markMessagesAsRead","markMessagesAsRead","_getChatStats","getChatStats","_deleteMessage","messageId","deleteMessage","_x26","_getTeacherClasses","month","year","getTeacherClasses","_createOrUpdateClass","classData","createOrUpdateClass","_x27","_deleteClass","classId","deleteClass","_x28","_getClassStudents","getClassStudents","_x29","_saveAttendance","attendanceData","saveAttendance","_x30","_x31","_saveBatchAttendance","attendances","lessonDate","saveBatchAttendance","_x32","_x33","_getClassAttendance","getClassAttendance","_x34","_completeClass","isCompleted","completeClass","_x35","_getClassStats","getClassStats","_getClasses","getClasses","_createClass2","createClass","_x36","_updateClass","updateClass","_x37","_x38","_deleteTurma","deleteTurma","_x39","_getAvailableStudents","search","getAvailableStudents","_addStudentToClass","studentId","addStudentToClass","_x40","_x41","_removeStudentFromClass","removeStudentFromClass","_x42","_x43","_getClassManagementStats","getClassManagementStats","_saveClassScore","notes","saveClassScore","_x44","_x45","_x46","_x47","_saveBatchClassScores","scores","saveBatchClassScores","_x48","_x49","_getClassScores","getClassScores","_x50","_registerInstitution","institutionData","registerInstitution","_x51","_loginInstitution","loginInstitution","_x52","_x53","_searchUserByCPF","cpf","searchUserByCPF","_x54","_addUserToInstitution","userId","addUserToInstitution","_x55","_removeUserFromInstitution","removeUserFromInstitution","_x56","_getInstitutionUsers","getInstitutionUsers","_getInstitutionClasses","getInstitutionClasses","_createInstitutionClass","createInstitutionClass","_x57","_addStudentToInstitutionClass","addStudentToInstitutionClass","_x58","_x59","_removeStudentFromInstitutionClass","removeStudentFromInstitutionClass","_x60","_x61","_deleteInstitutionClass","deleteInstitutionClass","_x62","_getInstitutionStats","getInstitutionStats","_getInstitutionClassDetails","getInstitutionClassDetails","_x63","apiService"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/services/apiService.js"],"sourcesContent":["// Serviço para comunicação com a API\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://your-api-domain.com/api' \n  : 'http://localhost:3001/api';\n\nclass ApiService {\n  constructor() {\n    this.token = null;\n  }\n\n  // Configurar token de autenticação\n  setToken(token) {\n    this.token = token;\n  }\n\n  // Remover token\n  clearToken() {\n    this.token = null;\n  }\n\n  // Fazer requisição HTTP\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    \n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    // Adicionar token se disponível\n    if (this.token) {\n      config.headers.Authorization = `Bearer ${this.token}`;\n      console.log('🔑 API Service - Token configurado:', this.token.substring(0, 20) + '...');\n    } else {\n      console.log('❌ API Service - Nenhum token configurado');\n    }\n\n    console.log('🔍 API Service - Headers finais:', config.headers);\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        // Retornar a resposta de erro em vez de lançar exceção\n        return {\n          success: false,\n          message: data.message || 'Erro na requisição',\n          status: response.status\n        };\n      }\n\n      return data;\n    } catch (error) {\n      console.error('Erro na API:', error);\n      return {\n        success: false,\n        message: error.message || 'Erro de conexão',\n        status: 0\n      };\n    }\n  }\n\n  // ===== AUTENTICAÇÃO =====\n  \n  async register(userData) {\n    console.log('🔵 apiService.register chamado com:', userData);\n    const result = await this.request('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n    console.log('🔵 apiService.register retornou:', result);\n    return result;\n  }\n\n  async login(email, password, userType = 'STUDENT') {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password, userType }),\n    });\n  }\n\n  async verifyToken() {\n    return this.request('/auth/verify');\n  }\n\n  async logout() {\n    return this.request('/auth/logout', {\n      method: 'POST',\n    });\n  }\n\n  async getStudentClass() {\n    return this.request('/auth/student/class');\n  }\n\n  // ===== USUÁRIOS =====\n\n  async getUserProfile() {\n    return this.request('/users/profile');\n  }\n\n  async updateUserProfile(userData) {\n    return this.request('/users/profile', {\n      method: 'PUT',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async changePassword(currentPassword, newPassword) {\n    return this.request('/users/password', {\n      method: 'PUT',\n      body: JSON.stringify({ currentPassword, newPassword }),\n    });\n  }\n\n  async getUserStats() {\n    return this.request('/users/stats');\n  }\n\n  async addFavoriteSport(sportId) {\n    return this.request(`/sports/${sportId}/favorite`, {\n      method: 'POST',\n    });\n  }\n\n  async removeFavoriteSport(sportId) {\n    return this.request(`/sports/${sportId}/favorite`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getFavoriteSports() {\n    return this.request('/sports/favorites');\n  }\n\n  // ===== ESPORTES =====\n\n  async getSports() {\n    return this.request('/sports');\n  }\n\n  async getSportById(sportId) {\n    return this.request(`/sports/${sportId}`);\n  }\n\n  async joinSport(sportId) {\n    return this.request(`/sports/${sportId}/join`, {\n      method: 'POST',\n    });\n  }\n\n  async leaveSport(sportId) {\n    return this.request(`/sports/${sportId}/leave`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getUserSports() {\n    return this.request('/sports/user/my-sports');\n  }\n\n  async getSportRanking(sportId, limit = 10, offset = 0) {\n    return this.request(`/sports/${sportId}/ranking?limit=${limit}&offset=${offset}`);\n  }\n\n  // ===== CONTEÚDOS =====\n\n  async getContentsBySport(sportId, filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.type) params.append('type', filters.type);\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/contents/sport/${sportId}?${params.toString()}`);\n  }\n\n  async getContentById(contentId) {\n    return this.request(`/contents/${contentId}`);\n  }\n\n  async getContentsByType(type, filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.sportId) params.append('sportId', filters.sportId);\n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/contents/type/${type}?${params.toString()}`);\n  }\n\n  async getContentProgress(contentId) {\n    return this.request(`/contents/${contentId}/progress`);\n  }\n\n  async updateContentProgress(contentId, progress) {\n    return this.request(`/contents/${contentId}/progress`, {\n      method: 'PUT',\n      body: JSON.stringify({ progress }),\n    });\n  }\n\n  async getCompletedContents(limit = 20, offset = 0) {\n    return this.request(`/contents/user/completed?limit=${limit}&offset=${offset}`);\n  }\n\n  // ===== PONTUAÇÕES =====\n\n  async submitScore(sportId, score, level) {\n    return this.request('/scores', {\n      method: 'POST',\n      body: JSON.stringify({ sportId, score, level }),\n    });\n  }\n\n  async getUserScores(limit = 20, offset = 0) {\n    return this.request(`/scores/user?limit=${limit}&offset=${offset}`);\n  }\n\n  async getUserScoreBySport(sportId) {\n    return this.request(`/scores/user/${sportId}`);\n  }\n\n  async getRanking(filters = {}) {\n    const params = new URLSearchParams();\n    if (filters.sportId) params.append('sportId', filters.sportId);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    return this.request(`/scores/ranking?${params.toString()}`);\n  }\n\n  async getScoreStats() {\n    return this.request('/scores/stats');\n  }\n\n  async getStudentSportsScores() {\n    return this.request('/scores/student/sports');\n  }\n\n  // Buscar ranking da turma do aluno\n  async getStudentRanking() {\n    return this.request('/scores/student/ranking');\n  }\n\n  // Buscar dados de presença do aluno\n  async getStudentAttendance() {\n    return this.request('/scores/student/attendance');\n  }\n\n  // ===== PERSONALIZAÇÃO E XP =====\n\n  // Buscar perfil completo do aluno (XP, medalhas, conquistas, personalizações)\n  async getStudentProfile() {\n    return this.request('/customization/student/profile');\n  }\n\n  // Atualizar personalização do card\n  async updateCardCustomization(background, animation, banner) {\n    return this.request('/customization/student/card', {\n      method: 'PUT',\n      body: JSON.stringify({ \n        background: banner, // Usar banner como background\n        animation, \n        banner \n      })\n    });\n  }\n\n  // Calcular e atualizar XP do aluno\n  async calculateStudentXP() {\n    return this.request('/customization/student/calculate-xp', {\n      method: 'POST'\n    });\n  }\n\n  // ===== CHAT =====\n\n  async sendMessage(message) {\n    return this.request('/chat/send', {\n      method: 'POST',\n      body: JSON.stringify({ message }),\n    });\n  }\n\n  async getMessages(limit = 50, offset = 0, before = null) {\n    const params = new URLSearchParams();\n    if (limit) params.append('limit', limit);\n    if (offset) params.append('offset', offset);\n    if (before) params.append('before', before);\n\n    return this.request(`/chat/messages?${params.toString()}`);\n  }\n\n  async markMessagesAsRead() {\n    return this.request('/chat/mark-read', {\n      method: 'PUT',\n    });\n  }\n\n  async getChatStats() {\n    return this.request('/chat/stats');\n  }\n\n  async deleteMessage(messageId) {\n    return this.request(`/chat/${messageId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // ===== AULAS DE PROFESSOR =====\n\n  async getTeacherClasses(month = null, year = null) {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n\n    return this.request(`/classes?${params.toString()}`);\n  }\n\n  async createOrUpdateClass(classData) {\n    console.log('apiService.createOrUpdateClass chamado com:', classData);\n    console.log('Token atual:', this.token);\n    return this.request('/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async deleteClass(classId) {\n    return this.request(`/classes/${classId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Buscar alunos de uma turma específica\n  async getClassStudents(classId) {\n    return this.request(`/class-management/classes/${classId}/students`);\n  }\n\n  // Salvar presença individual de aluno\n  async saveAttendance(classId, attendanceData) {\n    return this.request(`/class-management/classes/${classId}/attendance`, {\n      method: 'POST',\n      body: JSON.stringify(attendanceData),\n    });\n  }\n\n  // Salvar presenças em lote (NOVA FUNCIONALIDADE)\n  async saveBatchAttendance(classId, attendances, lessonDate = null) {\n    return this.request(`/class-management/classes/${classId}/attendance/batch`, {\n      method: 'POST',\n      body: JSON.stringify({ attendances, lessonDate }),\n    });\n  }\n\n  // Obter lista de presença de uma turma (NOVA FUNCIONALIDADE)\n  async getClassAttendance(classId, lessonDate = null) {\n    const params = lessonDate ? `?lessonDate=${lessonDate}` : '';\n    return this.request(`/class-management/classes/${classId}/attendance${params}`);\n  }\n\n  async completeClass(classId, isCompleted = true) {\n    return this.request(`/classes/${classId}/complete`, {\n      method: 'PUT',\n      body: JSON.stringify({ isCompleted }),\n    });\n  }\n\n  async getClassStats(month = null, year = null) {\n    const params = new URLSearchParams();\n    if (month) params.append('month', month);\n    if (year) params.append('year', year);\n\n    return this.request(`/classes/stats?${params.toString()}`);\n  }\n\n  // ===== GERENCIAMENTO DE TURMAS =====\n\n  async getClasses() {\n    return this.request('/class-management/classes');\n  }\n\n  async createClass(classData) {\n    return this.request('/class-management/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async updateClass(classId, classData) {\n    return this.request(`/class-management/classes/${classId}`, {\n      method: 'PUT',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async deleteTurma(classId) {\n    return this.request(`/class-management/classes/${classId}`, {\n      method: 'DELETE',\n    });\n  }\n\n\n  async getAvailableStudents(classId = null, search = '') {\n    const params = new URLSearchParams();\n    if (classId) params.append('classId', classId);\n    if (search) params.append('search', search);\n\n    return this.request(`/class-management/students/available?${params.toString()}`);\n  }\n\n  async addStudentToClass(classId, studentId) {\n    return this.request(`/class-management/classes/${classId}/students`, {\n      method: 'POST',\n      body: JSON.stringify({ studentId }),\n    });\n  }\n\n  async removeStudentFromClass(classId, studentId) {\n    return this.request(`/class-management/classes/${classId}/students/${studentId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getClassManagementStats() {\n    return this.request('/class-management/classes/stats');\n  }\n\n  // ===== PONTUAÇÕES DE AULAS =====\n\n  async saveClassScore(classId, studentId, sportId, score, notes = null, lessonDate = null) {\n    return this.request(`/class-management/classes/${classId}/scores`, {\n      method: 'POST',\n      body: JSON.stringify({ studentId, sportId, score, notes, lessonDate }),\n    });\n  }\n\n  // Salvar pontuações em lote (NOVA FUNCIONALIDADE)\n  async saveBatchClassScores(classId, scores, lessonDate = null) {\n    return this.request(`/class-management/classes/${classId}/scores/batch`, {\n      method: 'POST',\n      body: JSON.stringify({ scores, lessonDate }),\n    });\n  }\n\n  async getClassScores(classId) {\n    return this.request(`/class-management/classes/${classId}/scores`);\n  }\n\n  // ===== INSTITUIÇÕES =====\n\n  async registerInstitution(institutionData) {\n    return this.request('/institutions/register', {\n      method: 'POST',\n      body: JSON.stringify(institutionData),\n    });\n  }\n\n  async loginInstitution(email, password) {\n    return this.request('/institutions/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password }),\n    });\n  }\n\n  async searchUserByCPF(cpf) {\n    return this.request(`/institutions/users/search?cpf=${cpf}`);\n  }\n\n  async addUserToInstitution(userId) {\n    return this.request(`/institutions/users/${userId}/add`, {\n      method: 'POST',\n    });\n  }\n\n  async removeUserFromInstitution(userId) {\n    return this.request(`/institutions/users/${userId}/remove`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getInstitutionUsers(userType = null, search = '') {\n    const params = new URLSearchParams();\n    if (userType) params.append('userType', userType);\n    if (search) params.append('search', search);\n\n    return this.request(`/institutions/users?${params.toString()}`);\n  }\n\n  async getInstitutionClasses() {\n    return this.request('/institutions/classes');\n  }\n\n  async createInstitutionClass(classData) {\n    return this.request('/institutions/classes', {\n      method: 'POST',\n      body: JSON.stringify(classData),\n    });\n  }\n\n  async addStudentToInstitutionClass(classId, studentId) {\n    return this.request(`/institutions/classes/${classId}/students`, {\n      method: 'POST',\n      body: JSON.stringify({ studentId }),\n    });\n  }\n\n  async removeStudentFromInstitutionClass(classId, studentId) {\n    return this.request(`/institutions/classes/${classId}/students/${studentId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async deleteInstitutionClass(classId) {\n    return this.request(`/institutions/classes/${classId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getInstitutionStats() {\n    return this.request('/institutions/stats');\n  }\n\n  // Buscar dados detalhados de uma turma específica\n  async getInstitutionClassDetails(classId) {\n    return this.request(`/institutions/classes/${classId}/details`);\n  }\n}\n\n// Instância singleton\nconst apiService = new ApiService();\n\nexport default apiService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}