{"ast":null,"code":"var express = require('express');\nvar cors = require('cors');\nvar helmet = require('helmet');\nvar morgan = require('morgan');\nvar app = express();\nvar PORT = process.env.PORT || 3001;\napp.use(helmet());\napp.use(cors());\napp.use(morgan('combined'));\napp.use(express.json({\n  limit: '10mb'\n}));\napp.use(express.urlencoded({\n  extended: true\n}));\napp.get('/health', function (req, res) {\n  res.json({\n    status: 'OK',\n    timestamp: new Date().toISOString(),\n    environment: process.env.NODE_ENV || 'development'\n  });\n});\napp.get('/api/test', function (req, res) {\n  res.json({\n    success: true,\n    message: 'API funcionando!',\n    data: {\n      timestamp: new Date().toISOString(),\n      version: '1.0.0'\n    }\n  });\n});\napp.use(function (err, req, res, next) {\n  console.error('Error:', err);\n  res.status(500).json({\n    success: false,\n    message: 'Erro interno do servidor',\n    error: err.message\n  });\n});\napp.use(function (req, res) {\n  res.status(404).json({\n    success: false,\n    message: 'Endpoint n√£o encontrado'\n  });\n});\napp.listen(PORT, function () {\n  console.log(`üöÄ Servidor rodando na porta ${PORT}`);\n  console.log(`üìä Health check: http://localhost:${PORT}/health`);\n  console.log(`üß™ Test endpoint: http://localhost:${PORT}/api/test`);\n  console.log(`üåç Ambiente: ${process.env.NODE_ENV || 'development'}`);\n});\nmodule.exports = app;","map":{"version":3,"names":["express","require","cors","helmet","morgan","app","PORT","process","env","use","json","limit","urlencoded","extended","get","req","res","status","timestamp","Date","toISOString","environment","NODE_ENV","success","message","data","version","err","next","console","error","listen","log","module","exports"],"sources":["C:/Users/lukag/OneDrive/√Årea de Trabalho/Muvz_App/api/simple-server.js"],"sourcesContent":["const express = require('express');\r\nconst cors = require('cors');\r\nconst helmet = require('helmet');\r\nconst morgan = require('morgan');\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3001;\r\n\r\n// Middleware\r\napp.use(helmet());\r\napp.use(cors());\r\napp.use(morgan('combined'));\r\napp.use(express.json({ limit: '10mb' }));\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n// Health check\r\napp.get('/health', (req, res) => {\r\n  res.json({ \r\n    status: 'OK', \r\n    timestamp: new Date().toISOString(),\r\n    environment: process.env.NODE_ENV || 'development'\r\n  });\r\n});\r\n\r\n// Test route\r\napp.get('/api/test', (req, res) => {\r\n  res.json({\r\n    success: true,\r\n    message: 'API funcionando!',\r\n    data: {\r\n      timestamp: new Date().toISOString(),\r\n      version: '1.0.0'\r\n    }\r\n  });\r\n});\r\n\r\n// Error handling middleware\r\napp.use((err, req, res, next) => {\r\n  console.error('Error:', err);\r\n  res.status(500).json({\r\n    success: false,\r\n    message: 'Erro interno do servidor',\r\n    error: err.message\r\n  });\r\n});\r\n\r\n// 404 handler\r\napp.use((req, res) => {\r\n  res.status(404).json({\r\n    success: false,\r\n    message: 'Endpoint n√£o encontrado'\r\n  });\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`üöÄ Servidor rodando na porta ${PORT}`);\r\n  console.log(`üìä Health check: http://localhost:${PORT}/health`);\r\n  console.log(`üß™ Test endpoint: http://localhost:${PORT}/api/test`);\r\n  console.log(`üåç Ambiente: ${process.env.NODE_ENV || 'development'}`);\r\n});\r\n\r\nmodule.exports = app;\r\n"],"mappings":"AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAChC,IAAMG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAEhC,IAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;AACrB,IAAMM,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAGrCD,GAAG,CAACI,GAAG,CAACN,MAAM,CAAC,CAAC,CAAC;AACjBE,GAAG,CAACI,GAAG,CAACP,IAAI,CAAC,CAAC,CAAC;AACfG,GAAG,CAACI,GAAG,CAACL,MAAM,CAAC,UAAU,CAAC,CAAC;AAC3BC,GAAG,CAACI,GAAG,CAACT,OAAO,CAACU,IAAI,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,CAAC,CAAC;AACxCN,GAAG,CAACI,GAAG,CAACT,OAAO,CAACY,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAG/CR,GAAG,CAACS,GAAG,CAAC,SAAS,EAAE,UAACC,GAAG,EAAEC,GAAG,EAAK;EAC/BA,GAAG,CAACN,IAAI,CAAC;IACPO,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCC,WAAW,EAAEd,OAAO,CAACC,GAAG,CAACc,QAAQ,IAAI;EACvC,CAAC,CAAC;AACJ,CAAC,CAAC;AAGFjB,GAAG,CAACS,GAAG,CAAC,WAAW,EAAE,UAACC,GAAG,EAAEC,GAAG,EAAK;EACjCA,GAAG,CAACN,IAAI,CAAC;IACPa,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,kBAAkB;IAC3BC,IAAI,EAAE;MACJP,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCM,OAAO,EAAE;IACX;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAGFrB,GAAG,CAACI,GAAG,CAAC,UAACkB,GAAG,EAAEZ,GAAG,EAAEC,GAAG,EAAEY,IAAI,EAAK;EAC/BC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEH,GAAG,CAAC;EAC5BX,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;IACnBa,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE,0BAA0B;IACnCM,KAAK,EAAEH,GAAG,CAACH;EACb,CAAC,CAAC;AACJ,CAAC,CAAC;AAGFnB,GAAG,CAACI,GAAG,CAAC,UAACM,GAAG,EAAEC,GAAG,EAAK;EACpBA,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;IACnBa,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFnB,GAAG,CAAC0B,MAAM,CAACzB,IAAI,EAAE,YAAM;EACrBuB,OAAO,CAACG,GAAG,CAAC,gCAAgC1B,IAAI,EAAE,CAAC;EACnDuB,OAAO,CAACG,GAAG,CAAC,qCAAqC1B,IAAI,SAAS,CAAC;EAC/DuB,OAAO,CAACG,GAAG,CAAC,sCAAsC1B,IAAI,WAAW,CAAC;EAClEuB,OAAO,CAACG,GAAG,CAAC,gBAAgBzB,OAAO,CAACC,GAAG,CAACc,QAAQ,IAAI,aAAa,EAAE,CAAC;AACtE,CAAC,CAAC;AAEFW,MAAM,CAACC,OAAO,GAAG7B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}