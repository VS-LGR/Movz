{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect, useRef } from 'react';\nvar useLazyLoad = function useLazyLoad() {\n  var threshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isVisible = _useState2[0],\n    setIsVisible = _useState2[1];\n  var ref = useRef(null);\n  useEffect(function () {\n    var observer = new IntersectionObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n        entry = _ref2[0];\n      if (entry.isIntersecting) {\n        setIsVisible(true);\n        observer.disconnect();\n      }\n    }, {\n      threshold: threshold\n    });\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return function () {\n      return observer.disconnect();\n    };\n  }, [threshold]);\n  return [ref, isVisible];\n};\nexport default useLazyLoad;","map":{"version":3,"names":["useState","useEffect","useRef","useLazyLoad","threshold","arguments","length","undefined","_useState","_useState2","_slicedToArray","isVisible","setIsVisible","ref","observer","IntersectionObserver","_ref","_ref2","entry","isIntersecting","disconnect","current","observe"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/hooks/useLazyLoad.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\nconst useLazyLoad = (threshold = 0.1) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setIsVisible(true);\r\n          observer.disconnect();\r\n        }\r\n      },\r\n      { threshold }\r\n    );\r\n\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n\r\n    return () => observer.disconnect();\r\n  }, [threshold]);\r\n\r\n  return [ref, isVisible];\r\n};\r\n\r\nexport default useLazyLoad;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAwB;EAAA,IAApBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAClC,IAAAG,SAAA,GAAkCR,QAAQ,CAAC,KAAK,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,GAAG,GAAGX,MAAM,CAAC,IAAI,CAAC;EAExBD,SAAS,CAAC,YAAM;IACd,IAAMa,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,UAAAC,IAAA,EAAa;MAAA,IAAAC,KAAA,GAAAP,cAAA,CAAAM,IAAA;QAAXE,KAAK,GAAAD,KAAA;MACL,IAAIC,KAAK,CAACC,cAAc,EAAE;QACxBP,YAAY,CAAC,IAAI,CAAC;QAClBE,QAAQ,CAACM,UAAU,CAAC,CAAC;MACvB;IACF,CAAC,EACD;MAAEhB,SAAS,EAATA;IAAU,CACd,CAAC;IAED,IAAIS,GAAG,CAACQ,OAAO,EAAE;MACfP,QAAQ,CAACQ,OAAO,CAACT,GAAG,CAACQ,OAAO,CAAC;IAC/B;IAEA,OAAO;MAAA,OAAMP,QAAQ,CAACM,UAAU,CAAC,CAAC;IAAA;EACpC,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC;EAEf,OAAO,CAACS,GAAG,EAAEF,SAAS,CAAC;AACzB,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}