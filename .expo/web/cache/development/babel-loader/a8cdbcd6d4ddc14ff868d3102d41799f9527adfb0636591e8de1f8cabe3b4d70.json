{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport CustomAlert from \"../../components/CustomAlert\";\nimport useCustomAlert from \"../../hooks/useCustomAlert\";\nimport apiService from \"../../services/apiService\";\nimport SideMenu from \"../../components/SideMenu\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar ClassScreen = function ClassScreen(_ref) {\n  var _window$navigationPar;\n  var isMenuVisible = _ref.isMenuVisible,\n    setIsMenuVisible = _ref.setIsMenuVisible,\n    onNavigate = _ref.onNavigate,\n    currentUser = _ref.currentUser,\n    onLogout = _ref.onLogout;\n  var classData = ((_window$navigationPar = window.navigationParams) == null ? void 0 : _window$navigationPar.classData) || {};\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    attendanceTaken = _useState2[0],\n    setAttendanceTaken = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    classCompleted = _useState4[0],\n    setClassCompleted = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState('aquecimento'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    expandedCard = _useState8[0],\n    setExpandedCard = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showCompletionModal = _useState0[0],\n    setShowCompletionModal = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    showScoringModal = _useState10[0],\n    setShowScoringModal = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    students = _useState12[0],\n    setStudents = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    sports = _useState14[0],\n    setSports = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentSport = _useState16[0],\n    setCurrentSport = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedStudent = _useState18[0],\n    setSelectedStudent = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedSport = _useState20[0],\n    setSelectedSport = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    score = _useState22[0],\n    setScore = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    notes = _useState24[0],\n    setNotes = _useState24[1];\n  var _useState25 = useState({}),\n    _useState26 = _slicedToArray(_useState25, 2),\n    scoresData = _useState26[0],\n    setScoresData = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedStudents = _useState28[0],\n    setSelectedStudents = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    batchScore = _useState30[0],\n    setBatchScore = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    batchNotes = _useState32[0],\n    setBatchNotes = _useState32[1];\n  var _useCustomAlert = useCustomAlert(),\n    alert = _useCustomAlert.alert,\n    showSuccess = _useCustomAlert.showSuccess,\n    showError = _useCustomAlert.showError,\n    hideAlert = _useCustomAlert.hideAlert;\n  useEffect(function () {\n    console.log('🔵 ClassScreen - classData recebido:', classData);\n    console.log('🔵 ClassScreen - subject:', classData.subject);\n    loadStudents();\n    loadSports();\n    checkAttendanceStatus();\n  }, []);\n  useEffect(function () {\n    if (sports.length > 0 && classData.subject) {\n      identifyCurrentSport();\n    }\n  }, [sports, classData.subject]);\n  var identifyCurrentSport = function identifyCurrentSport() {\n    if (!classData.subject || sports.length === 0) return;\n    var subjectParts = classData.subject.split(' - ');\n    var sportName = subjectParts[0];\n    var sport = sports.find(function (s) {\n      return s.name.toLowerCase() === sportName.toLowerCase();\n    });\n    if (sport) {\n      console.log('🔵 ClassScreen - Esporte identificado:', sport);\n      setCurrentSport(sport);\n    } else {\n      console.log('🔴 ClassScreen - Esporte não encontrado:', sportName);\n    }\n  };\n  var checkAttendanceStatus = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!(classData != null && classData.id)) return;\n      try {\n        console.log('🔵 ClassScreen - Verificando status da chamada para aula:', classData.id);\n        var response = yield apiService.getClassAttendance(classData.id, classData.date);\n        if (response.success && response.data.attendances && response.data.attendances.length > 0) {\n          console.log('🔵 ClassScreen - Chamada já foi realizada, atualizando estado');\n          setAttendanceTaken(true);\n        } else {\n          console.log('🔵 ClassScreen - Chamada ainda não foi realizada');\n          setAttendanceTaken(false);\n        }\n      } catch (error) {\n        console.error('🔴 ClassScreen - Erro ao verificar status da chamada:', error);\n        setAttendanceTaken(false);\n      }\n    });\n    return function checkAttendanceStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadStudents = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        console.log('🔵 Carregando alunos para a aula:', classData);\n        console.log('🔵 classData.classId:', classData.classId);\n        console.log('🔵 classData.id:', classData.id);\n        if (classData.classId) {\n          console.log('🔵 Buscando alunos da turma:', classData.classId);\n          var response = yield apiService.getClassStudents(classData.classId);\n          console.log('🔵 Resposta da API getClassStudents:', response);\n          if (response.success) {\n            var _students = response.data.map(function (item) {\n              return item.student;\n            });\n            console.log(`🔵 ${_students.length} alunos encontrados na turma:`, _students.map(function (s) {\n              return s.name;\n            }));\n            setStudents(_students);\n          } else {\n            console.error('❌ Erro ao buscar alunos da turma:', response.message);\n          }\n        } else {\n          console.log('🔵 Aula sem turma associada, usando alunos passados via navegação');\n          if (classData.students && Array.isArray(classData.students)) {\n            console.log('🔵 Usando alunos passados via navegação:', classData.students.length);\n            setStudents(classData.students);\n          } else {\n            console.log('🔵 Nenhum aluno encontrado');\n            setStudents([]);\n          }\n        }\n      } catch (error) {\n        console.error('❌ Erro ao carregar alunos:', error);\n      }\n    });\n    return function loadStudents() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var loadSports = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield apiService.getSports();\n        if (response.success) {\n          setSports(response.data.sports || []);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar esportes:', error);\n      }\n    });\n    return function loadSports() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var workoutSections = [{\n    id: 'aquecimento',\n    title: 'Aquecimento',\n    duration: '7min',\n    exercises: [{\n      name: 'Corrida Leve',\n      repetitions: '5 minutos'\n    }, {\n      name: 'Alongamento Dinâmico',\n      repetitions: '2 minutos'\n    }, {\n      name: 'Aquecimento Articular',\n      repetitions: '1 série'\n    }]\n  }, {\n    id: 'treino',\n    title: 'Treino',\n    duration: '30min',\n    exercises: [{\n      name: 'Saque',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Recepção',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Levantamento',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Ataque',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Bloqueio',\n      repetitions: '20 repetições'\n    }, {\n      name: 'Defesa',\n      repetitions: '20 repetições'\n    }]\n  }, {\n    id: 'desaquecimento',\n    title: 'Desaquecimento',\n    duration: '8min',\n    exercises: [{\n      name: 'Alongamento Final',\n      repetitions: '5 minutos'\n    }, {\n      name: 'Relaxamento',\n      repetitions: '3 minutos'\n    }]\n  }];\n  var handleTakeAttendance = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var attendancePromises = students.map(function () {\n          var _ref6 = _asyncToGenerator(function* (student) {\n            var status = attendanceData[student.id] || 'present';\n            try {\n              var response = yield apiService.saveAttendance(classData.classId, {\n                studentId: student.id,\n                isPresent: status === 'present',\n                date: classData.date\n              });\n              if (!response.success) {\n                console.error(`Erro ao salvar presença do aluno ${student.name}:`, response.message);\n              }\n            } catch (error) {\n              console.error(`Erro ao salvar presença do aluno ${student.name}:`, error);\n            }\n          });\n          return function (_x) {\n            return _ref6.apply(this, arguments);\n          };\n        }());\n        yield Promise.all(attendancePromises);\n        setAttendanceTaken(true);\n        showSuccess('Sucesso! 🎉', 'Chamada realizada com sucesso!');\n      } catch (error) {\n        showError('❌ Erro', 'Erro ao realizar a chamada');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleTakeAttendance() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleCompleteClass = function handleCompleteClass() {\n    setShowCompletionModal(true);\n  };\n  var confirmCompleteClass = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        console.log('🔵 ClassData:', classData);\n        console.log('🔵 Class ID:', classData.id);\n        if (!classData.id) {\n          throw new Error('ID da aula não encontrado');\n        }\n        var response = yield apiService.completeClass(classData.id, true);\n        if (response.success) {\n          setClassCompleted(true);\n          setShowCompletionModal(false);\n          if (window.navigationParams) {\n            window.navigationParams.classCompleted = true;\n          }\n          showSuccess('Sucesso! 🎉', 'Aula concluída com sucesso!');\n          onNavigate('teacherClasses');\n        } else {\n          throw new Error(response.message || 'Erro ao concluir a aula');\n        }\n      } catch (error) {\n        console.error('Erro ao concluir aula:', error);\n        showError('❌ Erro', error.message || 'Erro ao concluir a aula');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function confirmCompleteClass() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handleOpenScoring = function handleOpenScoring() {\n    setShowScoringModal(true);\n  };\n  var toggleStudentSelection = function toggleStudentSelection(studentId) {\n    setSelectedStudents(function (prev) {\n      return prev.includes(studentId) ? prev.filter(function (id) {\n        return id !== studentId;\n      }) : [].concat(_toConsumableArray(prev), [studentId]);\n    });\n  };\n  var handleBatchSaveScores = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      try {\n        var _classData$subject;\n        if (selectedStudents.length === 0) {\n          showError('❌ Erro', 'Selecione pelo menos um aluno');\n          return;\n        }\n        if (!batchScore) {\n          showError('❌ Erro', 'Digite uma pontuação');\n          return;\n        }\n        var scoreValue = parseInt(batchScore);\n        if (scoreValue < 0 || scoreValue > 100) {\n          showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n          return;\n        }\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var subjectParts = ((_classData$subject = classData.subject) == null ? void 0 : _classData$subject.split(' - ')) || [];\n        var sportName = subjectParts[0];\n        var classSport = sports.find(function (sport) {\n          return sport.name.toLowerCase() === (sportName == null ? void 0 : sportName.toLowerCase());\n        });\n        if (!classSport) {\n          showError('❌ Erro', `Esporte \"${sportName}\" da aula não encontrado`);\n          return;\n        }\n        var scorePromises = selectedStudents.map(function () {\n          var _ref9 = _asyncToGenerator(function* (studentId) {\n            try {\n              console.log('🔵 ClassScreen - Salvando pontuação:', {\n                classId: classData.classId,\n                studentId: studentId,\n                sportId: classSport.id,\n                score: scoreValue,\n                notes: batchNotes.trim() || null,\n                lessonDate: classData.date\n              });\n              var response = yield apiService.saveClassScore(classData.classId, studentId, classSport.id, scoreValue, batchNotes.trim() || null, classData.date);\n              console.log('🔵 ClassScreen - Resposta da API:', response);\n              if (!response.success) {\n                console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, response.message);\n                throw new Error(response.message || 'Erro ao salvar pontuação');\n              }\n            } catch (error) {\n              console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, error);\n              throw error;\n            }\n          });\n          return function (_x2) {\n            return _ref9.apply(this, arguments);\n          };\n        }());\n        yield Promise.all(scorePromises);\n        if (!attendanceTaken) {\n          var attendances = students.map(function (student) {\n            return {\n              studentId: student.id,\n              isPresent: true\n            };\n          });\n          console.log('🔵 ClassScreen - Salvando presenças:', {\n            classId: classData.id,\n            attendances: attendances,\n            lessonDate: classData.date\n          });\n          try {\n            var attendanceResponse = yield apiService.saveBatchAttendance(classData.id, attendances, classData.date);\n            console.log('🔵 ClassScreen - Resposta da API de presença:', attendanceResponse);\n            if (!attendanceResponse.success) {\n              console.error('🔴 Erro ao salvar presenças:', attendanceResponse.message);\n            } else {\n              setAttendanceTaken(true);\n            }\n          } catch (error) {\n            console.error('🔴 Erro ao salvar presenças:', error);\n          }\n        } else {\n          console.log('🔵 ClassScreen - Chamada já realizada, não alterando presenças');\n        }\n        if (attendanceTaken) {\n          showSuccess('Sucesso! 🎉', `Pontuações salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n        } else {\n          showSuccess('Sucesso! 🎉', `Pontuações e presenças salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n        }\n        setSelectedStudents([]);\n        setBatchScore('');\n        setBatchNotes('');\n        setShowScoringModal(false);\n        setAttendanceTaken(true);\n        loadStudents();\n      } catch (error) {\n        console.error('Erro ao salvar avaliações:', error);\n        showError('❌ Erro', 'Erro ao salvar avaliações');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleBatchSaveScores() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleSaveScore = function () {\n    var _ref0 = _asyncToGenerator(function* () {\n      try {\n        if (!selectedStudent || !selectedSport || !score) {\n          showError('❌ Erro', 'Preencha todos os campos obrigatórios');\n          return;\n        }\n        var scoreValue = parseInt(score);\n        if (scoreValue < 0 || scoreValue > 100) {\n          showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n          return;\n        }\n        setLoading(true);\n        if (!classData.classId) {\n          showError('❌ Erro', 'Aula não está associada a uma turma');\n          return;\n        }\n        var response = yield apiService.saveClassScore(classData.classId, selectedStudent.id, selectedSport.id, scoreValue, notes.trim() || null);\n        if (response.success) {\n          showSuccess('Sucesso! 🎉', 'Pontuação salva com sucesso!');\n          setShowScoringModal(false);\n          setSelectedStudent(null);\n          setSelectedSport(null);\n          setScore('');\n          setNotes('');\n          loadStudents();\n        } else {\n          throw new Error(response.message || 'Erro ao salvar pontuação');\n        }\n      } catch (error) {\n        console.error('Erro ao salvar pontuação:', error);\n        showError('❌ Erro', error.message || 'Erro ao salvar pontuação');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSaveScore() {\n      return _ref0.apply(this, arguments);\n    };\n  }();\n  var renderWorkoutCard = function renderWorkoutCard(section) {\n    return _jsxs(TouchableOpacity, {\n      style: [styles.workoutCard, expandedCard === section.id && styles.expandedCard],\n      onPress: function onPress() {\n        return setExpandedCard(expandedCard === section.id ? null : section.id);\n      },\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsxs(View, {\n          style: styles.cardTitleContainer,\n          children: [_jsx(Text, {\n            style: styles.cardTitle,\n            children: section.title\n          }), _jsx(Text, {\n            style: styles.cardDuration,\n            children: section.duration\n          })]\n        }), _jsx(View, {\n          style: styles.expandIcon,\n          children: _jsx(Text, {\n            style: styles.expandIconText,\n            children: expandedCard === section.id ? '−' : '+'\n          })\n        })]\n      }), expandedCard === section.id && _jsx(View, {\n        style: styles.exercisesList,\n        children: section.exercises.map(function (exercise, index) {\n          return _jsx(View, {\n            style: styles.exerciseItem,\n            children: _jsxs(View, {\n              style: styles.exerciseInfo,\n              children: [_jsx(Text, {\n                style: styles.exerciseName,\n                children: exercise.name\n              }), _jsx(Text, {\n                style: styles.exerciseReps,\n                children: exercise.repetitions\n              })]\n            })\n          }, index);\n        })\n      })]\n    }, section.id);\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsxs(View, {\n        style: styles.headerTop,\n        children: [_jsx(Text, {\n          style: styles.logo,\n          children: \"Muvz\"\n        }), _jsxs(TouchableOpacity, {\n          style: styles.menuLines,\n          onPress: function onPress() {\n            return setIsMenuVisible(true);\n          },\n          children: [_jsx(View, {\n            style: styles.menuLine\n          }), _jsx(View, {\n            style: styles.menuLine\n          }), _jsx(View, {\n            style: styles.menuLine\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"In\\xEDcio da Aula\"\n      }), _jsxs(Text, {\n        style: styles.subtitle,\n        children: [\"Vamos come\\xE7ar a aula da \", (classData == null ? void 0 : classData.class) || '5ª série', \"?\"]\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsx(Text, {\n        style: styles.classTitle,\n        children: (classData == null ? void 0 : classData.sport) || 'Treino de Vôlei'\n      }), _jsxs(Text, {\n        style: styles.classInfo,\n        children: [\"Dura\\xE7\\xE3o: \", (classData == null ? void 0 : classData.duration) || '60min', \" Esse treino vale \", (classData == null ? void 0 : classData.xp) || '60', \"xp para seus alunos\"]\n      })]\n    }), attendanceTaken && _jsx(View, {\n      style: styles.attendanceStatusContainer,\n      children: _jsx(Text, {\n        style: styles.attendanceStatusText,\n        children: \"\\u2705 Chamada realizada com sucesso!\"\n      })\n    }), _jsx(View, {\n      style: styles.workoutContainer,\n      children: workoutSections.map(renderWorkoutCard)\n    }), _jsxs(View, {\n      style: styles.actionButtonsContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.actionButton, styles.attendanceButton, attendanceTaken && styles.attendanceButtonCompleted],\n        onPress: function onPress() {\n          console.log('🔵 ClassScreen - Navegando para attendanceList com classData:', classData);\n          onNavigate('attendanceList', {\n            classData: classData\n          });\n        },\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.actionButtonText,\n          children: function () {\n            var text = attendanceTaken ? '✅ Chamada Realizada' : '📋 Lista de Presença';\n            console.log('🔵 ClassScreen - Botão Lista de Presença:', text, 'attendanceTaken:', attendanceTaken);\n            return text;\n          }()\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.actionButton, styles.scoringButton],\n        onPress: handleOpenScoring,\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.actionButtonText,\n          children: \"\\u2B50 Avaliar Alunos\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: [styles.completeButton, classCompleted && styles.completeButtonCompleted],\n      onPress: handleCompleteClass,\n      disabled: classCompleted || loading,\n      children: _jsx(Text, {\n        style: styles.completeButtonText,\n        children: classCompleted ? 'Aula Concluída' : 'Concluir Aula'\n      })\n    }), showCompletionModal && _jsx(View, {\n      style: styles.modalOverlay,\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"Concluir Aula\"\n        }), _jsx(Text, {\n          style: styles.modalMessage,\n          children: \"Tem certeza que deseja concluir esta aula? Esta a\\xE7\\xE3o n\\xE3o pode ser desfeita.\"\n        }), _jsxs(View, {\n          style: styles.modalButtons,\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.modalButton, styles.cancelButton],\n            onPress: function onPress() {\n              return setShowCompletionModal(false);\n            },\n            children: _jsx(Text, {\n              style: styles.cancelButtonText,\n              children: \"Cancelar\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: [styles.modalButton, styles.confirmButton],\n            onPress: confirmCompleteClass,\n            disabled: loading,\n            children: _jsx(Text, {\n              style: styles.confirmButtonText,\n              children: loading ? 'Concluindo...' : 'Confirmar'\n            })\n          })]\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: showScoringModal,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setShowScoringModal(false);\n      },\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.scoringModalContent,\n          children: [_jsx(Text, {\n            style: styles.scoringModalTitle,\n            children: \"Avaliar Alunos e Presen\\xE7a\"\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Alunos da Turma\"\n            }), _jsx(ScrollView, {\n              style: styles.studentList,\n              nestedScrollEnabled: true,\n              children: students.map(function (student) {\n                return _jsxs(View, {\n                  style: styles.studentRow,\n                  children: [_jsx(TouchableOpacity, {\n                    style: styles.checkboxContainer,\n                    onPress: function onPress() {\n                      return toggleStudentSelection(student.id);\n                    },\n                    children: _jsx(View, {\n                      style: [styles.checkbox, selectedStudents.includes(student.id) && styles.checkboxChecked],\n                      children: selectedStudents.includes(student.id) && _jsx(Text, {\n                        style: styles.checkmark,\n                        children: \"\\u2713\"\n                      })\n                    })\n                  }), _jsxs(View, {\n                    style: styles.studentInfo,\n                    children: [_jsx(Text, {\n                      style: styles.studentName,\n                      children: student.name\n                    }), _jsx(Text, {\n                      style: styles.studentEmail,\n                      children: student.email\n                    })]\n                  })]\n                }, student.id);\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Esporte da Aula\"\n            }), _jsx(View, {\n              style: styles.sportDisplayContainer,\n              children: _jsxs(Text, {\n                style: styles.sportDisplayText,\n                children: [\"\\uD83C\\uDFC6 \", function (_classData$subject2) {\n                  var subjectParts = ((_classData$subject2 = classData.subject) == null ? void 0 : _classData$subject2.split(' - ')) || [];\n                  return subjectParts[0] || 'Esporte não definido';\n                }()]\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Pontua\\xE7\\xE3o (0-100) *\"\n            }), _jsx(TextInput, {\n              style: styles.scoreInput,\n              placeholder: \"Digite a pontua\\xE7\\xE3o\",\n              value: batchScore,\n              onChangeText: setBatchScore,\n              keyboardType: \"numeric\",\n              maxLength: 3\n            })]\n          }), _jsxs(View, {\n            style: styles.inputGroup,\n            children: [_jsx(Text, {\n              style: styles.inputLabel,\n              children: \"Observa\\xE7\\xF5es\"\n            }), _jsx(TextInput, {\n              style: styles.notesInput,\n              placeholder: \"Observa\\xE7\\xF5es sobre o desempenho (opcional)\",\n              value: batchNotes,\n              onChangeText: setBatchNotes,\n              multiline: true,\n              numberOfLines: 3\n            })]\n          }), _jsxs(View, {\n            style: styles.summaryContainer,\n            children: [_jsxs(Text, {\n              style: styles.summaryText,\n              children: [\"\\uD83D\\uDCCA \", selectedStudents.length, \" aluno(s) selecionado(s) para avalia\\xE7\\xE3o\"]\n            }), _jsxs(Text, {\n              style: styles.summaryText,\n              children: [\"\\uD83C\\uDFC6 Esporte: \", function (_classData$subject3) {\n                var subjectParts = ((_classData$subject3 = classData.subject) == null ? void 0 : _classData$subject3.split(' - ')) || [];\n                return subjectParts[0] || 'Não definido';\n              }()]\n            }), _jsx(Text, {\n              style: styles.summaryText,\n              children: \"\\uD83D\\uDCDD Presen\\xE7a ser\\xE1 salva para todos os alunos\"\n            })]\n          }), _jsxs(View, {\n            style: styles.scoringModalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: [styles.scoringModalButton, styles.cancelButton],\n              onPress: function onPress() {\n                setShowScoringModal(false);\n                setSelectedStudents([]);\n                setBatchScore('');\n                setBatchNotes('');\n              },\n              children: _jsx(Text, {\n                style: styles.cancelButtonText,\n                children: \"Cancelar\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: [styles.scoringModalButton, styles.saveButton],\n              onPress: handleBatchSaveScores,\n              disabled: loading,\n              children: _jsx(Text, {\n                style: styles.saveButtonText,\n                children: loading ? 'Salvando...' : 'Salvar Tudo'\n              })\n            })]\n          })]\n        })\n      })\n    }), _jsx(SideMenu, {\n      isVisible: isMenuVisible,\n      onClose: function onClose() {\n        return setIsMenuVisible(false);\n      },\n      onNavigate: onNavigate,\n      currentUser: currentUser,\n      onLogout: onLogout,\n      userType: \"TEACHER\"\n    }), _jsx(CustomAlert, {\n      visible: alert.visible,\n      title: alert.title,\n      message: alert.message,\n      type: alert.type,\n      onClose: hideAlert\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EDED'\n  },\n  header: {\n    padding: 20,\n    paddingTop: 40\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  menuLines: {\n    flexDirection: 'column',\n    gap: 3\n  },\n  menuLine: {\n    width: 39,\n    height: 6,\n    backgroundColor: '#D9D9D9'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 10\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#000',\n    marginBottom: 20\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#000',\n    marginBottom: 20\n  },\n  classTitle: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  classInfo: {\n    fontSize: 18,\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  attendanceButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  attendanceButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000'\n  },\n  workoutContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  workoutCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: 15,\n    padding: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  expandedCard: {\n    shadowOpacity: 0.2,\n    elevation: 5\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  cardTitleContainer: {\n    flex: 1\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5\n  },\n  cardDuration: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  expandIcon: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: '#F9BB55',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  expandIconText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  exercisesList: {\n    marginTop: 15,\n    paddingTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0'\n  },\n  exerciseItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#F8F9FA',\n    borderRadius: 10,\n    marginBottom: 8\n  },\n  exerciseInfo: {\n    flex: 1\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 4\n  },\n  exerciseReps: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins'\n  },\n  completeButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 40,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  completeButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  completeButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000'\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 30,\n    marginHorizontal: 20,\n    maxWidth: 400,\n    width: '100%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  modalMessage: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 25,\n    lineHeight: 22\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  cancelButton: {\n    backgroundColor: '#E0E0E0'\n  },\n  confirmButton: {\n    backgroundColor: '#F9BB55'\n  },\n  cancelButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#666'\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000'\n  },\n  actionButtonsContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    marginBottom: 15,\n    gap: 10\n  },\n  actionButton: {\n    flex: 1,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  attendanceButton: {\n    backgroundColor: '#2196F3'\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50'\n  },\n  scoringButton: {\n    backgroundColor: '#F9BB55'\n  },\n  actionButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000'\n  },\n  scoringModalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    marginHorizontal: 10,\n    maxHeight: '90%',\n    width: '95%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8\n  },\n  scoringModalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  inputGroup: {\n    marginBottom: 15\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 6\n  },\n  studentList: {\n    maxHeight: 150,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8\n  },\n  studentItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0'\n  },\n  selectedStudentItem: {\n    backgroundColor: '#F9BB55'\n  },\n  studentName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333'\n  },\n  studentEmail: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 2\n  },\n  sportList: {\n    maxHeight: 100,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8\n  },\n  sportItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0'\n  },\n  selectedSportItem: {\n    backgroundColor: '#F9BB55'\n  },\n  sportName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333'\n  },\n  scoreInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff'\n  },\n  notesInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n    textAlignVertical: 'top',\n    minHeight: 60\n  },\n  scoringModalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 8\n  },\n  scoringModalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  saveButton: {\n    backgroundColor: '#4CAF50'\n  },\n  saveButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#fff'\n  },\n  studentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n    backgroundColor: '#fff'\n  },\n  checkboxContainer: {\n    marginRight: 8\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderWidth: 2,\n    borderColor: '#E0E0E0',\n    borderRadius: 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  checkboxChecked: {\n    backgroundColor: '#F9BB55',\n    borderColor: '#F9BB55'\n  },\n  checkmark: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  studentInfo: {\n    flex: 1\n  },\n  summaryContainer: {\n    backgroundColor: '#F8F9FA',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 12\n  },\n  summaryText: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 3,\n    fontFamily: 'Poppins'\n  },\n  sportDisplayContainer: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    alignItems: 'center'\n  },\n  sportDisplayText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1976D2',\n    textAlign: 'center'\n  },\n  attendanceStatusContainer: {\n    backgroundColor: '#E8F5E8',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 10,\n    borderLeftWidth: 4,\n    borderLeftColor: '#4CAF50'\n  },\n  attendanceStatusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2E7D32',\n    textAlign: 'center'\n  }\n});\nexport default ClassScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","Image","Dimensions","TextInput","Modal","CustomAlert","useCustomAlert","apiService","SideMenu","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","ClassScreen","_ref","_window$navigationPar","isMenuVisible","setIsMenuVisible","onNavigate","currentUser","onLogout","classData","window","navigationParams","_useState","_useState2","_slicedToArray","attendanceTaken","setAttendanceTaken","_useState3","_useState4","classCompleted","setClassCompleted","_useState5","_useState6","loading","setLoading","_useState7","_useState8","expandedCard","setExpandedCard","_useState9","_useState0","showCompletionModal","setShowCompletionModal","_useState1","_useState10","showScoringModal","setShowScoringModal","_useState11","_useState12","students","setStudents","_useState13","_useState14","sports","setSports","_useState15","_useState16","currentSport","setCurrentSport","_useState17","_useState18","selectedStudent","setSelectedStudent","_useState19","_useState20","selectedSport","setSelectedSport","_useState21","_useState22","score","setScore","_useState23","_useState24","notes","setNotes","_useState25","_useState26","scoresData","setScoresData","_useState27","_useState28","selectedStudents","setSelectedStudents","_useState29","_useState30","batchScore","setBatchScore","_useState31","_useState32","batchNotes","setBatchNotes","_useCustomAlert","alert","showSuccess","showError","hideAlert","console","log","subject","loadStudents","loadSports","checkAttendanceStatus","length","identifyCurrentSport","subjectParts","split","sportName","sport","find","s","name","toLowerCase","_ref2","_asyncToGenerator","id","response","getClassAttendance","date","success","data","attendances","error","apply","arguments","_ref3","classId","getClassStudents","map","item","student","message","Array","isArray","_ref4","getSports","workoutSections","title","duration","exercises","repetitions","handleTakeAttendance","_ref5","attendancePromises","_ref6","status","attendanceData","saveAttendance","studentId","isPresent","_x","Promise","all","handleCompleteClass","confirmCompleteClass","_ref7","Error","completeClass","handleOpenScoring","toggleStudentSelection","prev","includes","filter","concat","_toConsumableArray","handleBatchSaveScores","_ref8","_classData$subject","scoreValue","parseInt","classSport","scorePromises","_ref9","sportId","trim","lessonDate","saveClassScore","_x2","attendanceResponse","saveBatchAttendance","handleSaveScore","_ref0","renderWorkoutCard","section","style","styles","workoutCard","onPress","children","cardHeader","cardTitleContainer","cardTitle","cardDuration","expandIcon","expandIconText","exercisesList","exercise","index","exerciseItem","exerciseInfo","exerciseName","exerciseReps","container","header","headerTop","logo","menuLines","menuLine","subtitle","class","divider","classTitle","classInfo","xp","attendanceStatusContainer","attendanceStatusText","workoutContainer","actionButtonsContainer","actionButton","attendanceButton","attendanceButtonCompleted","disabled","actionButtonText","text","scoringButton","completeButton","completeButtonCompleted","completeButtonText","modalOverlay","modalContent","modalTitle","modalMessage","modalButtons","modalButton","cancelButton","cancelButtonText","confirmButton","confirmButtonText","visible","animationType","transparent","onRequestClose","scoringModalContent","scoringModalTitle","inputGroup","inputLabel","studentList","nestedScrollEnabled","studentRow","checkboxContainer","checkbox","checkboxChecked","checkmark","studentInfo","studentName","studentEmail","email","sportDisplayContainer","sportDisplayText","_classData$subject2","scoreInput","placeholder","value","onChangeText","keyboardType","maxLength","notesInput","multiline","numberOfLines","summaryContainer","summaryText","_classData$subject3","scoringModalButtons","scoringModalButton","saveButton","saveButtonText","isVisible","onClose","userType","type","create","flex","backgroundColor","padding","paddingTop","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","color","gap","height","textAlign","marginHorizontal","paddingVertical","borderRadius","attendanceButtonText","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontFamily","marginTop","borderTopWidth","borderTopColor","position","top","left","right","bottom","zIndex","maxWidth","lineHeight","maxHeight","borderWidth","borderColor","studentItem","borderBottomWidth","borderBottomColor","selectedStudentItem","sportList","sportItem","selectedSportItem","textAlignVertical","minHeight","marginRight","borderLeftWidth","borderLeftColor"],"sources":["C:/Users/lukag/OneDrive/Documentos/Projetos/Muvz_App/src/screens/teacher/ClassScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  Image,\n  Dimensions,\n  TextInput,\n  Modal,\n} from 'react-native';\nimport CustomAlert from '../../components/CustomAlert';\nimport useCustomAlert from '../../hooks/useCustomAlert';\nimport apiService from '../../services/apiService';\nimport SideMenu from '../../components/SideMenu';\n\nconst { width } = Dimensions.get('window');\n\nconst ClassScreen = ({ isMenuVisible, setIsMenuVisible, onNavigate, currentUser, onLogout }) => {\n  // Usar parâmetros passados via navegação\n  const classData = window.navigationParams?.classData || {};\n  \n\n  const [attendanceTaken, setAttendanceTaken] = useState(false);\n  const [classCompleted, setClassCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [expandedCard, setExpandedCard] = useState('aquecimento');\n  const [showCompletionModal, setShowCompletionModal] = useState(false);\n  const [showScoringModal, setShowScoringModal] = useState(false);\n  const [students, setStudents] = useState([]);\n  const [sports, setSports] = useState([]);\n  const [currentSport, setCurrentSport] = useState(null); // Esporte atual da aula\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [selectedSport, setSelectedSport] = useState(null);\n  const [score, setScore] = useState('');\n  const [notes, setNotes] = useState('');\n  const [scoresData, setScoresData] = useState({}); // { studentId: { sportId: { score, notes } } }\n  \n  // Estados para avaliação em lote\n  const [selectedStudents, setSelectedStudents] = useState([]); // Array de IDs dos alunos selecionados\n  const [batchScore, setBatchScore] = useState('');\n  const [batchNotes, setBatchNotes] = useState('');\n  const { alert, showSuccess, showError, hideAlert } = useCustomAlert();\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    console.log('🔵 ClassScreen - classData recebido:', classData);\n    console.log('🔵 ClassScreen - subject:', classData.subject);\n    loadStudents();\n    loadSports();\n    checkAttendanceStatus(); // Verificar se chamada já foi realizada\n  }, []);\n\n  // Identificar esporte atual quando sports carregarem\n  useEffect(() => {\n    if (sports.length > 0 && classData.subject) {\n      identifyCurrentSport();\n    }\n  }, [sports, classData.subject]);\n\n  // Função para identificar o esporte atual da aula\n  const identifyCurrentSport = () => {\n    if (!classData.subject || sports.length === 0) return;\n    \n    // Extrair nome do esporte do subject (formato: \"Nome do Esporte - Tipo da Aula\")\n    const subjectParts = classData.subject.split(' - ');\n    const sportName = subjectParts[0];\n    \n    // Encontrar o esporte correspondente\n    const sport = sports.find(s => \n      s.name.toLowerCase() === sportName.toLowerCase()\n    );\n    \n    if (sport) {\n      console.log('🔵 ClassScreen - Esporte identificado:', sport);\n      setCurrentSport(sport);\n    } else {\n      console.log('🔴 ClassScreen - Esporte não encontrado:', sportName);\n    }\n  };\n\n  // Verificar se a chamada já foi realizada\n  const checkAttendanceStatus = async () => {\n    if (!classData?.id) return;\n    \n    try {\n      console.log('🔵 ClassScreen - Verificando status da chamada para aula:', classData.id);\n      const response = await apiService.getClassAttendance(classData.id, classData.date);\n      \n      if (response.success && response.data.attendances && response.data.attendances.length > 0) {\n        console.log('🔵 ClassScreen - Chamada já foi realizada, atualizando estado');\n        setAttendanceTaken(true);\n      } else {\n        console.log('🔵 ClassScreen - Chamada ainda não foi realizada');\n        setAttendanceTaken(false);\n      }\n    } catch (error) {\n      console.error('🔴 ClassScreen - Erro ao verificar status da chamada:', error);\n      setAttendanceTaken(false);\n    }\n  };\n\n  const loadStudents = async () => {\n    try {\n      console.log('🔵 Carregando alunos para a aula:', classData);\n      console.log('🔵 classData.classId:', classData.classId);\n      console.log('🔵 classData.id:', classData.id);\n      \n      // Se a aula tem classId (ID da turma), buscar alunos da turma\n      if (classData.classId) {\n        console.log('🔵 Buscando alunos da turma:', classData.classId);\n        const response = await apiService.getClassStudents(classData.classId);\n        console.log('🔵 Resposta da API getClassStudents:', response);\n        if (response.success) {\n          const students = response.data.map(item => item.student);\n          console.log(`🔵 ${students.length} alunos encontrados na turma:`, students.map(s => s.name));\n          setStudents(students);\n        } else {\n          console.error('❌ Erro ao buscar alunos da turma:', response.message);\n        }\n      } else {\n        console.log('🔵 Aula sem turma associada, usando alunos passados via navegação');\n        // Usar alunos passados via navegação (fallback)\n        if (classData.students && Array.isArray(classData.students)) {\n          console.log('🔵 Usando alunos passados via navegação:', classData.students.length);\n          setStudents(classData.students);\n        } else {\n          console.log('🔵 Nenhum aluno encontrado');\n          setStudents([]);\n        }\n      }\n    } catch (error) {\n      console.error('❌ Erro ao carregar alunos:', error);\n    }\n  };\n\n  const loadSports = async () => {\n    try {\n      const response = await apiService.getSports();\n      if (response.success) {\n        setSports(response.data.sports || []);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar esportes:', error);\n    }\n  };\n\n  // Dados de exemplo dos exercícios (em produção viria da API)\n  const workoutSections = [\n    {\n      id: 'aquecimento',\n      title: 'Aquecimento',\n      duration: '7min',\n      exercises: [\n        { name: 'Corrida Leve', repetitions: '5 minutos' },\n        { name: 'Alongamento Dinâmico', repetitions: '2 minutos' },\n        { name: 'Aquecimento Articular', repetitions: '1 série' },\n      ],\n    },\n    {\n      id: 'treino',\n      title: 'Treino',\n      duration: '30min',\n      exercises: [\n        { name: 'Saque', repetitions: '20 repetições' },\n        { name: 'Recepção', repetitions: '20 repetições' },\n        { name: 'Levantamento', repetitions: '20 repetições' },\n        { name: 'Ataque', repetitions: '20 repetições' },\n        { name: 'Bloqueio', repetitions: '20 repetições' },\n        { name: 'Defesa', repetitions: '20 repetições' },\n      ],\n    },\n    {\n      id: 'desaquecimento',\n      title: 'Desaquecimento',\n      duration: '8min',\n      exercises: [\n        { name: 'Alongamento Final', repetitions: '5 minutos' },\n        { name: 'Relaxamento', repetitions: '3 minutos' },\n      ],\n    },\n  ];\n\n  const handleTakeAttendance = async () => {\n    try {\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n\n      // Salvar presença de todos os alunos\n      const attendancePromises = students.map(async (student) => {\n        const status = attendanceData[student.id] || 'present'; // Default: presente\n        \n        try {\n          const response = await apiService.saveAttendance(classData.classId, {\n            studentId: student.id,\n            isPresent: status === 'present',\n            date: classData.date\n          });\n          \n          if (!response.success) {\n            console.error(`Erro ao salvar presença do aluno ${student.name}:`, response.message);\n          }\n        } catch (error) {\n          console.error(`Erro ao salvar presença do aluno ${student.name}:`, error);\n        }\n      });\n\n      await Promise.all(attendancePromises);\n      \n      setAttendanceTaken(true);\n      showSuccess('Sucesso! 🎉', 'Chamada realizada com sucesso!');\n    } catch (error) {\n      showError('❌ Erro', 'Erro ao realizar a chamada');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCompleteClass = () => {\n    setShowCompletionModal(true);\n  };\n\n  const confirmCompleteClass = async () => {\n    try {\n      setLoading(true);\n      \n      console.log('🔵 ClassData:', classData);\n      console.log('🔵 Class ID:', classData.id);\n      \n      if (!classData.id) {\n        throw new Error('ID da aula não encontrado');\n      }\n      \n      // Chamar API para marcar aula como concluída\n      const response = await apiService.completeClass(classData.id, true);\n      \n      if (response.success) {\n        setClassCompleted(true);\n        setShowCompletionModal(false);\n        \n        // Marcar que a aula foi concluída nos parâmetros de navegação\n        if (window.navigationParams) {\n          window.navigationParams.classCompleted = true;\n        }\n        \n        showSuccess('Sucesso! 🎉', 'Aula concluída com sucesso!');\n        \n        // Navegar de volta para a lista de aulas\n        onNavigate('teacherClasses');\n      } else {\n        throw new Error(response.message || 'Erro ao concluir a aula');\n      }\n    } catch (error) {\n      console.error('Erro ao concluir aula:', error);\n      showError('❌ Erro', error.message || 'Erro ao concluir a aula');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpenScoring = () => {\n    setShowScoringModal(true);\n  };\n\n  // Funções para avaliação em lote\n  const toggleStudentSelection = (studentId) => {\n    setSelectedStudents(prev => \n      prev.includes(studentId) \n        ? prev.filter(id => id !== studentId)\n        : [...prev, studentId]\n    );\n  };\n\n\n  const handleBatchSaveScores = async () => {\n    try {\n      if (selectedStudents.length === 0) {\n        showError('❌ Erro', 'Selecione pelo menos um aluno');\n        return;\n      }\n\n      if (!batchScore) {\n        showError('❌ Erro', 'Digite uma pontuação');\n        return;\n      }\n\n      const scoreValue = parseInt(batchScore);\n      if (scoreValue < 0 || scoreValue > 100) {\n        showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n        return;\n      }\n\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n\n      // Buscar o esporte da aula automaticamente\n      // O esporte está no campo 'subject' no formato \"Nome do Esporte - Tipo da Aula\"\n      const subjectParts = classData.subject?.split(' - ') || [];\n      const sportName = subjectParts[0]; // Primeira parte é o nome do esporte\n      \n      const classSport = sports.find(sport => \n        sport.name.toLowerCase() === sportName?.toLowerCase()\n      );\n\n      if (!classSport) {\n        showError('❌ Erro', `Esporte \"${sportName}\" da aula não encontrado`);\n        return;\n      }\n\n      // Salvar pontuação para todos os alunos selecionados\n      const scorePromises = selectedStudents.map(async (studentId) => {\n        try {\n          console.log('🔵 ClassScreen - Salvando pontuação:', {\n            classId: classData.classId,\n            studentId,\n            sportId: classSport.id,\n            score: scoreValue,\n            notes: batchNotes.trim() || null,\n            lessonDate: classData.date\n          });\n          \n          const response = await apiService.saveClassScore(\n            classData.classId,\n            studentId,\n            classSport.id,\n            scoreValue,\n            batchNotes.trim() || null,\n            classData.date\n          );\n          \n          console.log('🔵 ClassScreen - Resposta da API:', response);\n          \n          if (!response.success) {\n            console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, response.message);\n            throw new Error(response.message || 'Erro ao salvar pontuação');\n          }\n        } catch (error) {\n          console.error(`🔴 Erro ao salvar pontuação do aluno ${studentId}:`, error);\n          throw error;\n        }\n      });\n\n      await Promise.all(scorePromises);\n\n      // CORREÇÃO: Só salvar presenças se a chamada ainda não foi realizada\n      if (!attendanceTaken) {\n        // Salvar presença de todos os alunos usando a nova API em lote\n        const attendances = students.map(student => ({\n          studentId: student.id,\n          isPresent: true // Por padrão, todos presentes quando há pontuação\n        }));\n\n        console.log('🔵 ClassScreen - Salvando presenças:', {\n          classId: classData.id, // ← CORREÇÃO: Usar ID da aula específica\n          attendances,\n          lessonDate: classData.date\n        });\n\n        try {\n          const attendanceResponse = await apiService.saveBatchAttendance(\n            classData.id, // ← CORREÇÃO: Usar ID da aula específica\n            attendances, \n            classData.date\n          );\n          \n          console.log('🔵 ClassScreen - Resposta da API de presença:', attendanceResponse);\n          \n          if (!attendanceResponse.success) {\n            console.error('🔴 Erro ao salvar presenças:', attendanceResponse.message);\n          } else {\n            setAttendanceTaken(true); // Marcar chamada como realizada\n          }\n        } catch (error) {\n          console.error('🔴 Erro ao salvar presenças:', error);\n        }\n      } else {\n        console.log('🔵 ClassScreen - Chamada já realizada, não alterando presenças');\n      }\n\n      if (attendanceTaken) {\n        showSuccess('Sucesso! 🎉', `Pontuações salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n      } else {\n        showSuccess('Sucesso! 🎉', `Pontuações e presenças salvas para ${selectedStudents.length} aluno(s) no esporte ${classSport.name}!`);\n      }\n      \n      // Limpar estados\n      setSelectedStudents([]);\n      setBatchScore('');\n      setBatchNotes('');\n      setShowScoringModal(false);\n      setAttendanceTaken(true);\n      \n      loadStudents(); // Recarregar dados\n    } catch (error) {\n      console.error('Erro ao salvar avaliações:', error);\n      showError('❌ Erro', 'Erro ao salvar avaliações');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveScore = async () => {\n    try {\n      if (!selectedStudent || !selectedSport || !score) {\n        showError('❌ Erro', 'Preencha todos os campos obrigatórios');\n        return;\n      }\n\n      const scoreValue = parseInt(score);\n      if (scoreValue < 0 || scoreValue > 100) {\n        showError('❌ Erro', 'Pontuação deve estar entre 0 e 100');\n        return;\n      }\n\n      setLoading(true);\n      \n      if (!classData.classId) {\n        showError('❌ Erro', 'Aula não está associada a uma turma');\n        return;\n      }\n      \n      const response = await apiService.saveClassScore(\n        classData.classId,\n        selectedStudent.id,\n        selectedSport.id,\n        scoreValue,\n        notes.trim() || null\n      );\n\n      if (response.success) {\n        showSuccess('Sucesso! 🎉', 'Pontuação salva com sucesso!');\n        setShowScoringModal(false);\n        setSelectedStudent(null);\n        setSelectedSport(null);\n        setScore('');\n        setNotes('');\n        loadStudents(); // Recarregar dados\n      } else {\n        throw new Error(response.message || 'Erro ao salvar pontuação');\n      }\n    } catch (error) {\n      console.error('Erro ao salvar pontuação:', error);\n      showError('❌ Erro', error.message || 'Erro ao salvar pontuação');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderWorkoutCard = (section) => (\n    <TouchableOpacity\n      key={section.id}\n      style={[\n        styles.workoutCard,\n        expandedCard === section.id && styles.expandedCard\n      ]}\n      onPress={() => setExpandedCard(expandedCard === section.id ? null : section.id)}\n    >\n      <View style={styles.cardHeader}>\n        <View style={styles.cardTitleContainer}>\n          <Text style={styles.cardTitle}>{section.title}</Text>\n          <Text style={styles.cardDuration}>{section.duration}</Text>\n        </View>\n        <View style={styles.expandIcon}>\n          <Text style={styles.expandIconText}>\n            {expandedCard === section.id ? '−' : '+'}\n          </Text>\n        </View>\n      </View>\n      \n      {expandedCard === section.id && (\n        <View style={styles.exercisesList}>\n          {section.exercises.map((exercise, index) => (\n            <View key={index} style={styles.exerciseItem}>\n              <View style={styles.exerciseInfo}>\n                <Text style={styles.exerciseName}>{exercise.name}</Text>\n                <Text style={styles.exerciseReps}>{exercise.repetitions}</Text>\n              </View>\n            </View>\n          ))}\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* Header */}\n      <View style={styles.header}>\n        <View style={styles.headerTop}>\n          <Text style={styles.logo}>Muvz</Text>\n          <TouchableOpacity \n            style={styles.menuLines}\n            onPress={() => setIsMenuVisible(true)}\n          >\n            <View style={styles.menuLine} />\n            <View style={styles.menuLine} />\n            <View style={styles.menuLine} />\n          </TouchableOpacity>\n        </View>\n        \n        <Text style={styles.title}>Início da Aula</Text>\n        <Text style={styles.subtitle}>\n          Vamos começar a aula da {classData?.class || '5ª série'}?\n        </Text>\n        \n        <View style={styles.divider} />\n        \n        <Text style={styles.classTitle}>{classData?.sport || 'Treino de Vôlei'}</Text>\n        <Text style={styles.classInfo}>\n          Duração: {classData?.duration || '60min'} Esse treino vale {classData?.xp || '60'}xp para seus alunos\n        </Text>\n      </View>\n\n      {/* Status da Chamada */}\n      {attendanceTaken && (\n        <View style={styles.attendanceStatusContainer}>\n          <Text style={styles.attendanceStatusText}>✅ Chamada realizada com sucesso!</Text>\n        </View>\n      )}\n\n      {/* Seções de Exercícios */}\n      <View style={styles.workoutContainer}>\n        {workoutSections.map(renderWorkoutCard)}\n      </View>\n\n      {/* Botões de Ação */}\n      <View style={styles.actionButtonsContainer}>\n        {/* Botão de Lista de Presença */}\n        <TouchableOpacity \n          style={[\n            styles.actionButton, \n            styles.attendanceButton,\n            attendanceTaken && styles.attendanceButtonCompleted\n          ]}\n          onPress={() => {\n            console.log('🔵 ClassScreen - Navegando para attendanceList com classData:', classData);\n            onNavigate('attendanceList', { classData });\n          }}\n          disabled={loading}\n        >\n          <Text style={styles.actionButtonText}>\n            {(() => {\n              const text = attendanceTaken ? '✅ Chamada Realizada' : '📋 Lista de Presença';\n              console.log('🔵 ClassScreen - Botão Lista de Presença:', text, 'attendanceTaken:', attendanceTaken);\n              return text;\n            })()}\n          </Text>\n        </TouchableOpacity>\n\n        {/* Botão de Pontuação */}\n        <TouchableOpacity \n          style={[styles.actionButton, styles.scoringButton]}\n          onPress={handleOpenScoring}\n          disabled={loading}\n        >\n          <Text style={styles.actionButtonText}>⭐ Avaliar Alunos</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Botão de Conclusão */}\n      <TouchableOpacity \n        style={[styles.completeButton, classCompleted && styles.completeButtonCompleted]}\n        onPress={handleCompleteClass}\n        disabled={classCompleted || loading}\n      >\n        <Text style={styles.completeButtonText}>\n          {classCompleted ? 'Aula Concluída' : 'Concluir Aula'}\n        </Text>\n      </TouchableOpacity>\n\n      {/* Modal de Confirmação de Conclusão */}\n      {showCompletionModal && (\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Concluir Aula</Text>\n            <Text style={styles.modalMessage}>\n              Tem certeza que deseja concluir esta aula? Esta ação não pode ser desfeita.\n            </Text>\n            <View style={styles.modalButtons}>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.cancelButton]}\n                onPress={() => setShowCompletionModal(false)}\n              >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.modalButton, styles.confirmButton]}\n                onPress={confirmCompleteClass}\n                disabled={loading}\n              >\n                <Text style={styles.confirmButtonText}>\n                  {loading ? 'Concluindo...' : 'Confirmar'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      )}\n\n      {/* Modal de Avaliação Completa */}\n      <Modal\n        visible={showScoringModal}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={() => setShowScoringModal(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.scoringModalContent}>\n            <Text style={styles.scoringModalTitle}>Avaliar Alunos e Presença</Text>\n            \n            {/* Lista de Alunos com Seleção e Presença */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Alunos da Turma</Text>\n              <ScrollView style={styles.studentList} nestedScrollEnabled>\n                {students.map((student) => (\n                  <View key={student.id} style={styles.studentRow}>\n                    {/* Checkbox para seleção */}\n                    <TouchableOpacity\n                      style={styles.checkboxContainer}\n                      onPress={() => toggleStudentSelection(student.id)}\n                    >\n                      <View style={[\n                        styles.checkbox,\n                        selectedStudents.includes(student.id) && styles.checkboxChecked\n                      ]}>\n                        {selectedStudents.includes(student.id) && (\n                          <Text style={styles.checkmark}>✓</Text>\n                        )}\n                      </View>\n                    </TouchableOpacity>\n                    \n                    {/* Informações do aluno */}\n                    <View style={styles.studentInfo}>\n                      <Text style={styles.studentName}>{student.name}</Text>\n                      <Text style={styles.studentEmail}>{student.email}</Text>\n                    </View>\n                    \n                    {/* Toggle de presença */}\n                  </View>\n                ))}\n              </ScrollView>\n            </View>\n\n            {/* Esporte da Aula */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Esporte da Aula</Text>\n              <View style={styles.sportDisplayContainer}>\n                <Text style={styles.sportDisplayText}>\n                  🏆 {(() => {\n                    const subjectParts = classData.subject?.split(' - ') || [];\n                    return subjectParts[0] || 'Esporte não definido';\n                  })()}\n                </Text>\n              </View>\n            </View>\n\n            {/* Pontuação */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Pontuação (0-100) *</Text>\n              <TextInput\n                style={styles.scoreInput}\n                placeholder=\"Digite a pontuação\"\n                value={batchScore}\n                onChangeText={setBatchScore}\n                keyboardType=\"numeric\"\n                maxLength={3}\n              />\n            </View>\n\n            {/* Observações */}\n            <View style={styles.inputGroup}>\n              <Text style={styles.inputLabel}>Observações</Text>\n              <TextInput\n                style={styles.notesInput}\n                placeholder=\"Observações sobre o desempenho (opcional)\"\n                value={batchNotes}\n                onChangeText={setBatchNotes}\n                multiline\n                numberOfLines={3}\n              />\n            </View>\n\n            {/* Resumo */}\n            <View style={styles.summaryContainer}>\n              <Text style={styles.summaryText}>\n                📊 {selectedStudents.length} aluno(s) selecionado(s) para avaliação\n              </Text>\n              <Text style={styles.summaryText}>\n                🏆 Esporte: {(() => {\n                  const subjectParts = classData.subject?.split(' - ') || [];\n                  return subjectParts[0] || 'Não definido';\n                })()}\n              </Text>\n              <Text style={styles.summaryText}>\n                📝 Presença será salva para todos os alunos\n              </Text>\n            </View>\n\n            {/* Botões */}\n            <View style={styles.scoringModalButtons}>\n              <TouchableOpacity\n                style={[styles.scoringModalButton, styles.cancelButton]}\n                onPress={() => {\n                  setShowScoringModal(false);\n                  setSelectedStudents([]);\n                  setBatchScore('');\n                  setBatchNotes('');\n                }}\n              >\n                <Text style={styles.cancelButtonText}>Cancelar</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.scoringModalButton, styles.saveButton]}\n                onPress={handleBatchSaveScores}\n                disabled={loading}\n              >\n                <Text style={styles.saveButtonText}>\n                  {loading ? 'Salvando...' : 'Salvar Tudo'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n      \n      <SideMenu \n        isVisible={isMenuVisible} \n        onClose={() => setIsMenuVisible(false)} \n        onNavigate={onNavigate}\n        currentUser={currentUser}\n        onLogout={onLogout}\n        userType=\"TEACHER\"\n      />\n      \n      <CustomAlert\n        visible={alert.visible}\n        title={alert.title}\n        message={alert.message}\n        type={alert.type}\n        onClose={hideAlert}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EDED',\n  },\n  header: {\n    padding: 20,\n    paddingTop: 40,\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  logo: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  menuLines: {\n    flexDirection: 'column',\n    gap: 3,\n  },\n  menuLine: {\n    width: 39,\n    height: 6,\n    backgroundColor: '#D9D9D9',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 10,\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#000',\n    marginBottom: 20,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: '#000',\n    marginBottom: 20,\n  },\n  classTitle: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  classInfo: {\n    fontSize: 18,\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  attendanceButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50',\n  },\n  attendanceButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n  },\n  workoutContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 20,\n  },\n  workoutCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: 15,\n    padding: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  expandedCard: {\n    shadowOpacity: 0.2,\n    elevation: 5,\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  cardTitleContainer: {\n    flex: 1,\n  },\n  cardTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 5,\n  },\n  cardDuration: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n  },\n  expandIcon: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: '#F9BB55',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  expandIconText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  exercisesList: {\n    marginTop: 15,\n    paddingTop: 15,\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n  },\n  exerciseItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#F8F9FA',\n    borderRadius: 10,\n    marginBottom: 8,\n  },\n  exerciseInfo: {\n    flex: 1,\n  },\n  exerciseName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n    marginBottom: 4,\n  },\n  exerciseReps: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: 'Poppins',\n  },\n  completeButton: {\n    backgroundColor: '#B5B5B5',\n    marginHorizontal: 20,\n    marginBottom: 40,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  completeButtonCompleted: {\n    backgroundColor: '#4CAF50',\n  },\n  completeButtonText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#000',\n  },\n  modalOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n  },\n  modalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 30,\n    marginHorizontal: 20,\n    maxWidth: 400,\n    width: '100%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8,\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  modalMessage: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 25,\n    lineHeight: 22,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 15,\n  },\n  modalButton: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  cancelButton: {\n    backgroundColor: '#E0E0E0',\n  },\n  confirmButton: {\n    backgroundColor: '#F9BB55',\n  },\n  cancelButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#666',\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n  },\n  // Estilos dos botões de ação\n  actionButtonsContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    marginBottom: 15,\n    gap: 10,\n  },\n  actionButton: {\n    flex: 1,\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  attendanceButton: {\n    backgroundColor: '#2196F3',\n  },\n  attendanceButtonCompleted: {\n    backgroundColor: '#4CAF50', // Verde para indicar que foi realizada\n  },\n  scoringButton: {\n    backgroundColor: '#F9BB55',\n  },\n  actionButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n  },\n  scoringModalContent: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 20,\n    marginHorizontal: 10,\n    maxHeight: '90%',\n    width: '95%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 8,\n  },\n  scoringModalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  inputGroup: {\n    marginBottom: 15,\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 6,\n  },\n  studentList: {\n    maxHeight: 150,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n  },\n  studentItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n  },\n  selectedStudentItem: {\n    backgroundColor: '#F9BB55',\n  },\n  studentName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n  },\n  studentEmail: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 2,\n  },\n  sportList: {\n    maxHeight: 100,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n  },\n  sportItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n  },\n  selectedSportItem: {\n    backgroundColor: '#F9BB55',\n  },\n  sportName: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#333',\n  },\n  scoreInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n  },\n  notesInput: {\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 14,\n    backgroundColor: '#fff',\n    textAlignVertical: 'top',\n    minHeight: 60,\n  },\n  scoringModalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 8,\n  },\n  scoringModalButton: {\n    flex: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  saveButton: {\n    backgroundColor: '#4CAF50',\n  },\n  saveButtonText: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#fff',\n  },\n  // Novos estilos para avaliação em lote\n  studentRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F0F0F0',\n    backgroundColor: '#fff',\n  },\n  checkboxContainer: {\n    marginRight: 8,\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderWidth: 2,\n    borderColor: '#E0E0E0',\n    borderRadius: 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  checkboxChecked: {\n    backgroundColor: '#F9BB55',\n    borderColor: '#F9BB55',\n  },\n  checkmark: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  studentInfo: {\n    flex: 1,\n  },\n  summaryContainer: {\n    backgroundColor: '#F8F9FA',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 12,\n  },\n  summaryText: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 3,\n    fontFamily: 'Poppins',\n  },\n  sportDisplayContainer: {\n    backgroundColor: '#F0F8FF',\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    alignItems: 'center',\n  },\n  sportDisplayText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1976D2',\n    textAlign: 'center',\n  },\n  attendanceStatusContainer: {\n    backgroundColor: '#E8F5E8',\n    marginHorizontal: 20,\n    marginBottom: 20,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 10,\n    borderLeftWidth: 4,\n    borderLeftColor: '#4CAF50',\n  },\n  attendanceStatusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2E7D32',\n    textAlign: 'center',\n  },\n});\n\nexport default ClassScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}